ARM GAS  /tmp/ccPfsSwR.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1	@ Tag_ABI_HardFP_use
   3              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"b2d_lite.c"
  14              	@ GNU C17 (15:9-2019-q4-0ubuntu1) version 9.2.1 20191025 (release) [ARM/arm-9-branch revision 27759
  15              	@	compiled by GNU C version 9.2.1 20200306, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -I .
  19              	@ -I /home/george/projects/PlaydateSDK-1.11.1//C_API
  20              	@ -imultilib thumb/v7e-m+fp/hard -MD build/src/b2d_lite.d
  21              	@ -MF build/dep/b2d_lite.o.d -MP -MQ build/src/b2d_lite.o
  22              	@ -D__USES_INITFINI__ -D __FPU_USED=1 -D TARGET_PLAYDATE=1
  23              	@ -D TARGET_EXTENSION=1 src/b2d_lite.c -mthumb -mcpu=cortex-m7
  24              	@ -mfloat-abi=hard -mfpu=fpv5-sp-d16 -march=armv7e-m+fpv5
  25              	@ -auxbase-strip build/src/b2d_lite.o -g -gdwarf-2 -O2 -Wall -Wno-unused
  26              	@ -Wstrict-prototypes -Wno-unknown-pragmas -Wdouble-promotion
  27              	@ -falign-functions=16 -fomit-frame-pointer -fverbose-asm
  28              	@ -ffunction-sections -fdata-sections
  29              	@ options enabled:  -faggressive-loop-optimizations -falign-functions
  30              	@ -falign-jumps -falign-labels -falign-loops -fassume-phsa -fauto-inc-dec
  31              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  32              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  33              	@ -fdata-sections -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
  34              	@ -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
  35              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  36              	@ -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse
  37              	@ -ffunction-sections -fgcse -fgcse-lm -fgnu-runtime -fgnu-unique
  38              	@ -fguess-branch-probability -fhoist-adjacent-loads -fident -fif-conversion
  39              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  40              	@ -finline-functions-called-once -finline-small-functions -fipa-bit-cp
  41              	@ -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables -fipa-profile
  42              	@ -fipa-pure-const -fipa-ra -fipa-reference -fipa-reference-addressable
  43              	@ -fipa-sra -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  44              	@ -fira-share-save-slots -fira-share-spill-slots
  45              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  46              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  47              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  48              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  49              	@ -foptimize-strlen -fpartial-inlining -fpeephole -fpeephole2 -fplt
  50              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  51              	@ -freorder-functions -frerun-cse-after-loop
  52              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  53              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  54              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  55              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  56              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  57              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
ARM GAS  /tmp/ccPfsSwR.s 			page 2


  58              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  59              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing
  60              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  61              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  62              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  63              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  64              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  65              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  66              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  67              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  68              	@ -ftree-vrp -funit-at-a-time -fvar-tracking -fvar-tracking-assignments
  69              	@ -fverbose-asm -fzero-initialized-in-bss -masm-syntax-unified -mbe32
  70              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  71              	@ -munaligned-access -mvectorize-with-neon-quad
  72              	
  73              		.text
  74              	.Ltext0:
  75              		.cfi_sections	.debug_frame
  76              		.section	.text.findArbiter,"ax",%progbits
  77              		.align	1
  78              		.p2align 4,,15
  79              		.global	findArbiter
  80              		.arch armv7e-m
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv5-sp-d16
  85              		.type	findArbiter, %function
  86              	findArbiter:
  87              	.LFB3:
  88              		.file 1 "src/b2d_lite.c"
   1:src/b2d_lite.c **** /*
   2:src/b2d_lite.c **** * Copyright (c) 2006-2007 Erin Catto http://www.gphysics.com
   3:src/b2d_lite.c **** *
   4:src/b2d_lite.c **** * Permission to use, copy, modify, distribute and sell this software
   5:src/b2d_lite.c **** * and its documentation for any purpose is hereby granted without fee,
   6:src/b2d_lite.c **** * provided that the above copyright notice appear in all copies.
   7:src/b2d_lite.c **** * Erin Catto makes no representations about the suitability 
   8:src/b2d_lite.c **** * of this software for any purpose.  
   9:src/b2d_lite.c **** * It is provided "as is" without express or implied warranty.
  10:src/b2d_lite.c **** */
  11:src/b2d_lite.c **** 
  12:src/b2d_lite.c **** #include <stdio.h>
  13:src/b2d_lite.c **** #include <float.h>
  14:src/b2d_lite.c **** #include <math.h>
  15:src/b2d_lite.c **** #include <stdlib.h>
  16:src/b2d_lite.c **** 
  17:src/b2d_lite.c **** #include "mathutils.h"
  18:src/b2d_lite.c **** #include "collide.h"
  19:src/b2d_lite.c **** 
  20:src/b2d_lite.c **** struct Arbiter
  21:src/b2d_lite.c **** {
  22:src/b2d_lite.c **** 	struct Contact contacts[2];
  23:src/b2d_lite.c **** 	int numContacts;
  24:src/b2d_lite.c **** 
  25:src/b2d_lite.c **** 	struct Body* body1;
  26:src/b2d_lite.c **** 	struct Body* body2;
ARM GAS  /tmp/ccPfsSwR.s 			page 3


  27:src/b2d_lite.c **** 
  28:src/b2d_lite.c **** 	// Combined friction
  29:src/b2d_lite.c **** 	float friction;
  30:src/b2d_lite.c **** };
  31:src/b2d_lite.c **** 
  32:src/b2d_lite.c **** struct ArbiterKey
  33:src/b2d_lite.c **** {
  34:src/b2d_lite.c **** 	struct Body* body1;
  35:src/b2d_lite.c **** 	struct Body* body2;
  36:src/b2d_lite.c **** };
  37:src/b2d_lite.c **** 
  38:src/b2d_lite.c **** // was in World
  39:src/b2d_lite.c **** 
  40:src/b2d_lite.c **** struct Body *g_bodies[100];
  41:src/b2d_lite.c **** int g_numBodies;
  42:src/b2d_lite.c **** 
  43:src/b2d_lite.c **** struct Arbiter g_arbiters[100];
  44:src/b2d_lite.c **** struct ArbiterKey g_arbiterKeys[100];
  45:src/b2d_lite.c **** int g_numArbiters;
  46:src/b2d_lite.c **** 
  47:src/b2d_lite.c **** struct Vec2 gravity;
  48:src/b2d_lite.c **** int iterations;
  49:src/b2d_lite.c **** int accumulateImpulses = 1;
  50:src/b2d_lite.c **** int warmStarting = 1;
  51:src/b2d_lite.c **** int positionCorrection = 1;
  52:src/b2d_lite.c **** 
  53:src/b2d_lite.c **** struct Arbiter* findArbiter(struct ArbiterKey key)
  54:src/b2d_lite.c **** {
  89              		.loc 1 54 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  55:src/b2d_lite.c ****     for (int i=0; i<g_numArbiters; i++)
  94              		.loc 1 55 5 view .LVU1
  95              	.LBB26:
  96              		.loc 1 55 10 view .LVU2
  97              	.LVL0:
  98              		.loc 1 55 19 view .LVU3
  99              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
 100              		.loc 1 55 20 is_stmt 0 view .LVU4
 101 0000 124B     		ldr	r3, .L9	@ tmp120,
 102              	.LBE26:
 103              	@ src/b2d_lite.c:54: {
  54:src/b2d_lite.c ****     for (int i=0; i<g_numArbiters; i++)
 104              		.loc 1 54 1 view .LVU5
 105 0002 F0B4     		push	{r4, r5, r6, r7}	@
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 16
 108              		.cfi_offset 4, -16
 109              		.cfi_offset 5, -12
 110              		.cfi_offset 6, -8
 111              		.cfi_offset 7, -4
 112              	.LBB27:
 113              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
 114              		.loc 1 55 20 view .LVU6
 115 0004 1C68     		ldr	r4, [r3]	@ g_numArbiters.0_12, g_numArbiters
ARM GAS  /tmp/ccPfsSwR.s 			page 4


 116              	.LBE27:
 117              	@ src/b2d_lite.c:54: {
  54:src/b2d_lite.c ****     for (int i=0; i<g_numArbiters; i++)
 118              		.loc 1 54 1 view .LVU7
 119 0006 82B0     		sub	sp, sp, #8	@,,
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 24
 122              	.LBB28:
 123              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
 124              		.loc 1 55 5 view .LVU8
 125 0008 002C     		cmp	r4, #0	@ g_numArbiters.0_12,
 126              	.LBE28:
 127              	@ src/b2d_lite.c:54: {
  54:src/b2d_lite.c ****     for (int i=0; i<g_numArbiters; i++)
 128              		.loc 1 54 1 view .LVU9
 129 000a 02AB     		add	r3, sp, #8	@ tmp138,,
 130 000c 03E90300 		stmdb	r3, {r0, r1}	@ tmp138,,
 131              	.LBB29:
 132              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
 133              		.loc 1 55 5 view .LVU10
 134 0010 18DD     		ble	.L5		@,
 135 0012 0F49     		ldr	r1, .L9+4	@ tmp135,
 136              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
 137              		.loc 1 55 14 view .LVU11
 138 0014 0023     		movs	r3, #0	@ i,
 139              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  56:src/b2d_lite.c ****     {    
  57:src/b2d_lite.c ****         if (g_arbiterKeys[i].body1 == key.body1 && 
 140              		.loc 1 57 42 view .LVU12
 141 0016 0098     		ldr	r0, [sp]	@ _2, key.body1
 142              	@ src/b2d_lite.c:58:             g_arbiterKeys[i].body2 == key.body2)
  58:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 143              		.loc 1 58 29 view .LVU13
 144 0018 0F1D     		adds	r7, r1, #4	@ tmp136, tmp135,
 145              	@ src/b2d_lite.c:58:             g_arbiterKeys[i].body2 == key.body2)
 146              		.loc 1 58 42 view .LVU14
 147 001a 019E     		ldr	r6, [sp, #4]	@ _4, key.body2
 148 001c 02E0     		b	.L4		@
 149              	.LVL1:
 150              	.L3:
 151              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 152              		.loc 1 55 37 discriminator 2 view .LVU15
 153 001e 0133     		adds	r3, r3, #1	@ i, i,
 154              	.LVL2:
  55:src/b2d_lite.c ****     {    
 155              		.loc 1 55 19 is_stmt 1 discriminator 2 view .LVU16
 156              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 157              		.loc 1 55 5 is_stmt 0 discriminator 2 view .LVU17
 158 0020 A342     		cmp	r3, r4	@ i, g_numArbiters.0_12
 159 0022 0FD0     		beq	.L5		@,
 160              	.LVL3:
 161              	.L4:
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 162              		.loc 1 57 9 is_stmt 1 view .LVU18
  55:src/b2d_lite.c ****     {    
ARM GAS  /tmp/ccPfsSwR.s 			page 5


 163              		.loc 1 55 36 view .LVU19
 164              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 165              		.loc 1 57 12 is_stmt 0 view .LVU20
 166 0024 51F83320 		ldr	r2, [r1, r3, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _8, step: 8, offset: 0B], MEM[symbol:
 167              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 168              		.loc 1 57 29 view .LVU21
 169 0028 DD00     		lsls	r5, r3, #3	@ tmp121, i,
 170              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 171              		.loc 1 57 12 view .LVU22
 172 002a 8242     		cmp	r2, r0	@ MEM[symbol: g_arbiterKeys, index: _8, step: 8, offset: 0B], _2
 173 002c F7D1     		bne	.L3		@,
 174              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 175              		.loc 1 57 49 discriminator 1 view .LVU23
 176 002e 57F83320 		ldr	r2, [r7, r3, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _8, step: 8, offset: 4B], MEM[symbol:
 177 0032 B242     		cmp	r2, r6	@ MEM[symbol: g_arbiterKeys, index: _8, step: 8, offset: 4B], _4
 178 0034 F3D1     		bne	.L3		@,
  59:src/b2d_lite.c ****            return &g_arbiters[i];
 179              		.loc 1 59 12 is_stmt 1 view .LVU24
 180              	@ src/b2d_lite.c:59:            return &g_arbiters[i];
 181              		.loc 1 59 19 is_stmt 0 view .LVU25
 182 0036 2B44     		add	r3, r3, r5	@ tmp131, tmp121
 183              	.LVL4:
 184              		.loc 1 59 19 view .LVU26
 185 0038 0648     		ldr	r0, .L9+8	@ tmp133,
 186 003a 00EB0310 		add	r0, r0, r3, lsl #4	@ <retval>, tmp133, tmp131,
 187              	.LBE29:
 188              	@ src/b2d_lite.c:63: }
  60:src/b2d_lite.c ****     }
  61:src/b2d_lite.c **** 
  62:src/b2d_lite.c ****     return NULL;
  63:src/b2d_lite.c **** }
 189              		.loc 1 63 1 view .LVU27
 190 003e 02B0     		add	sp, sp, #8	@,,
 191              	.LCFI2:
 192              		.cfi_remember_state
 193              		.cfi_def_cfa_offset 16
 194              		@ sp needed	@
 195 0040 F0BC     		pop	{r4, r5, r6, r7}	@
 196              	.LCFI3:
 197              		.cfi_restore 7
 198              		.cfi_restore 6
 199              		.cfi_restore 5
 200              		.cfi_restore 4
 201              		.cfi_def_cfa_offset 0
 202 0042 7047     		bx	lr	@
 203              	.L5:
 204              	.LCFI4:
 205              		.cfi_restore_state
 206              	@ src/b2d_lite.c:62:     return NULL;
  62:src/b2d_lite.c **** }
 207              		.loc 1 62 12 view .LVU28
 208 0044 0020     		movs	r0, #0	@ <retval>,
 209              	@ src/b2d_lite.c:63: }
ARM GAS  /tmp/ccPfsSwR.s 			page 6


 210              		.loc 1 63 1 view .LVU29
 211 0046 02B0     		add	sp, sp, #8	@,,
 212              	.LCFI5:
 213              		.cfi_def_cfa_offset 16
 214              		@ sp needed	@
 215 0048 F0BC     		pop	{r4, r5, r6, r7}	@
 216              	.LCFI6:
 217              		.cfi_restore 7
 218              		.cfi_restore 6
 219              		.cfi_restore 5
 220              		.cfi_restore 4
 221              		.cfi_def_cfa_offset 0
 222 004a 7047     		bx	lr	@
 223              	.L10:
 224              		.align	2
 225              	.L9:
 226 004c 00000000 		.word	g_numArbiters
 227 0050 00000000 		.word	g_arbiterKeys
 228 0054 00000000 		.word	g_arbiters
 229              		.cfi_endproc
 230              	.LFE3:
 231              		.size	findArbiter, .-findArbiter
 232              		.section	.text.insertArbiter,"ax",%progbits
 233              		.align	1
 234              		.p2align 4,,15
 235              		.global	insertArbiter
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-sp-d16
 240              		.type	insertArbiter, %function
 241              	insertArbiter:
 242              	.LFB4:
  64:src/b2d_lite.c **** 
  65:src/b2d_lite.c **** void insertArbiter(struct ArbiterKey key, struct Arbiter value)
  66:src/b2d_lite.c **** {
 243              		.loc 1 66 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 144, pretend = 8, frame = 8
 246              		@ frame_needed = 0, uses_anonymous_args = 0
  67:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 247              		.loc 1 67 5 view .LVU31
 248              	@ src/b2d_lite.c:66: {
  66:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 249              		.loc 1 66 1 is_stmt 0 view .LVU32
 250 0000 82B0     		sub	sp, sp, #8	@,,
 251              	.LCFI7:
 252              		.cfi_def_cfa_offset 8
 253              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  68:src/b2d_lite.c ****     {
  69:src/b2d_lite.c ****         // printf("Exceeded max number of arbiters!\n");
  70:src/b2d_lite.c ****         // exit(1);
  71:src/b2d_lite.c ****     }
  72:src/b2d_lite.c ****     
  73:src/b2d_lite.c ****     g_arbiterKeys[g_numArbiters]=key;
  74:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 254              		.loc 1 74 30 view .LVU33
ARM GAS  /tmp/ccPfsSwR.s 			page 7


 255 0002 DFF84CC0 		ldr	ip, .L13+8	@ tmp118,
 256              	@ src/b2d_lite.c:66: {
  66:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 257              		.loc 1 66 1 view .LVU34
 258 0006 F0B5     		push	{r4, r5, r6, r7, lr}	@
 259              	.LCFI8:
 260              		.cfi_def_cfa_offset 28
 261              		.cfi_offset 4, -28
 262              		.cfi_offset 5, -24
 263              		.cfi_offset 6, -20
 264              		.cfi_offset 7, -16
 265              		.cfi_offset 14, -12
 266 0008 83B0     		sub	sp, sp, #12	@,,
 267              	.LCFI9:
 268              		.cfi_def_cfa_offset 40
 269              	@ src/b2d_lite.c:67:     if (g_numArbiters >= 100)    
  67:src/b2d_lite.c ****     {
 270              		.loc 1 67 23 view .LVU35
 271 000a 0F4F     		ldr	r7, .L13	@ tmp113,
 272              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 273              		.loc 1 73 33 view .LVU36
 274 000c 0F4D     		ldr	r5, .L13+4	@ tmp114,
 275              	@ src/b2d_lite.c:66: {
  66:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 276              		.loc 1 66 1 view .LVU37
 277 000e 6E46     		mov	r6, sp	@ tmp112,
 278              	@ src/b2d_lite.c:67:     if (g_numArbiters >= 100)    
  67:src/b2d_lite.c ****     {
 279              		.loc 1 67 23 view .LVU38
 280 0010 3C68     		ldr	r4, [r7]	@ g_numArbiters.1_1, g_numArbiters
  71:src/b2d_lite.c ****     
 281              		.loc 1 71 5 is_stmt 1 view .LVU39
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 282              		.loc 1 73 5 view .LVU40
 283              	@ src/b2d_lite.c:66: {
  66:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 284              		.loc 1 66 1 is_stmt 0 view .LVU41
 285 0012 86E80300 		stm	r6, {r0, r1}	@ tmp112,,
 286 0016 08A9     		add	r1, sp, #32	@ tmp130,,
 287              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 288              		.loc 1 73 33 view .LVU42
 289 0018 05EBC405 		add	r5, r5, r4, lsl #3	@ tmp115, tmp114, g_numArbiters.1_1,
 290              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
 291              		.loc 1 74 30 view .LVU43
 292 001c 04EBC40E 		add	lr, r4, r4, lsl #3	@ tmp121, g_numArbiters.1_1, g_numArbiters.1_1,
 293              	@ src/b2d_lite.c:75:     g_numArbiters++;
  75:src/b2d_lite.c ****     g_numArbiters++;
 294              		.loc 1 75 18 view .LVU44
 295 0020 0134     		adds	r4, r4, #1	@ tmp129, g_numArbiters.1_1,
 296              	@ src/b2d_lite.c:66: {
  66:src/b2d_lite.c ****     if (g_numArbiters >= 100)    
 297              		.loc 1 66 1 view .LVU45
 298 0022 81E80C00 		stm	r1, {r2, r3}	@ tmp130,,
 299              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
ARM GAS  /tmp/ccPfsSwR.s 			page 8


 300              		.loc 1 73 33 view .LVU46
 301 0026 96E80300 		ldm	r6, {r0, r1}	@ tmp112,,
 302              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  74:src/b2d_lite.c ****     g_numArbiters++;
 303              		.loc 1 74 30 view .LVU47
 304 002a 9022     		movs	r2, #144	@,
 305              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 306              		.loc 1 73 33 view .LVU48
 307 002c 85E80300 		stm	r5, {r0, r1}	@ tmp115,,
  74:src/b2d_lite.c ****     g_numArbiters++;
 308              		.loc 1 74 5 is_stmt 1 view .LVU49
 309              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  74:src/b2d_lite.c ****     g_numArbiters++;
 310              		.loc 1 74 30 is_stmt 0 view .LVU50
 311 0030 08A9     		add	r1, sp, #32	@,,
 312 0032 0CEB0E10 		add	r0, ip, lr, lsl #4	@, tmp118, tmp121,
 313 0036 FFF7FEFF 		bl	memcpy		@
 314              	.LVL5:
 315              		.loc 1 75 5 is_stmt 1 view .LVU51
 316              	@ src/b2d_lite.c:75:     g_numArbiters++;
 317              		.loc 1 75 18 is_stmt 0 view .LVU52
 318 003a 3C60     		str	r4, [r7]	@ tmp129, g_numArbiters
 319              	@ src/b2d_lite.c:76: }
  76:src/b2d_lite.c **** }
 320              		.loc 1 76 1 view .LVU53
 321 003c 03B0     		add	sp, sp, #12	@,,
 322              	.LCFI10:
 323              		.cfi_def_cfa_offset 28
 324              		@ sp needed	@
 325 003e BDE8F040 		pop	{r4, r5, r6, r7, lr}	@
 326              	.LCFI11:
 327              		.cfi_restore 14
 328              		.cfi_restore 7
 329              		.cfi_restore 6
 330              		.cfi_restore 5
 331              		.cfi_restore 4
 332              		.cfi_def_cfa_offset 8
 333 0042 02B0     		add	sp, sp, #8	@,,
 334              	.LCFI12:
 335              		.cfi_def_cfa_offset 0
 336 0044 7047     		bx	lr	@
 337              	.L14:
 338 0046 00BF     		.align	2
 339              	.L13:
 340 0048 00000000 		.word	g_numArbiters
 341 004c 00000000 		.word	g_arbiterKeys
 342 0050 00000000 		.word	g_arbiters
 343              		.cfi_endproc
 344              	.LFE4:
 345              		.size	insertArbiter, .-insertArbiter
 346              		.section	.text.eraseArbiter,"ax",%progbits
 347              		.align	1
 348              		.p2align 4,,15
 349              		.global	eraseArbiter
 350              		.syntax unified
 351              		.thumb
ARM GAS  /tmp/ccPfsSwR.s 			page 9


 352              		.thumb_func
 353              		.fpu fpv5-sp-d16
 354              		.type	eraseArbiter, %function
 355              	eraseArbiter:
 356              	.LFB5:
  77:src/b2d_lite.c **** 
  78:src/b2d_lite.c **** void eraseArbiter(struct ArbiterKey key)
  79:src/b2d_lite.c **** {
 357              		.loc 1 79 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 16
 360              		@ frame_needed = 0, uses_anonymous_args = 0
  80:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 361              		.loc 1 80 5 view .LVU55
 362              	.LBB30:
 363              		.loc 1 80 10 view .LVU56
 364              	.LVL6:
 365              		.loc 1 80 19 view .LVU57
 366              	.LBE30:
 367              	@ src/b2d_lite.c:79: {
  79:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 368              		.loc 1 79 1 is_stmt 0 view .LVU58
 369 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 370              	.LCFI13:
 371              		.cfi_def_cfa_offset 36
 372              		.cfi_offset 4, -36
 373              		.cfi_offset 5, -32
 374              		.cfi_offset 6, -28
 375              		.cfi_offset 7, -24
 376              		.cfi_offset 8, -20
 377              		.cfi_offset 9, -16
 378              		.cfi_offset 10, -12
 379              		.cfi_offset 11, -8
 380              		.cfi_offset 14, -4
 381              	.LBB33:
 382              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
 383              		.loc 1 80 21 view .LVU59
 384 0004 DFF89880 		ldr	r8, .L28+12	@ tmp158,
 385              	.LBE33:
 386              	@ src/b2d_lite.c:79: {
  79:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 387              		.loc 1 79 1 view .LVU60
 388 0008 85B0     		sub	sp, sp, #20	@,,
 389              	.LCFI14:
 390              		.cfi_def_cfa_offset 56
 391              	.LBB34:
 392              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
 393              		.loc 1 80 21 view .LVU61
 394 000a D8F80050 		ldr	r5, [r8]	@ prephitmp_8, g_numArbiters
 395              	.LBE34:
 396              	@ src/b2d_lite.c:79: {
  79:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 397              		.loc 1 79 1 view .LVU62
 398 000e 04AB     		add	r3, sp, #16	@ tmp171,,
 399              	.LBB35:
 400              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
 401              		.loc 1 80 5 view .LVU63
ARM GAS  /tmp/ccPfsSwR.s 			page 10


 402 0010 002D     		cmp	r5, #0	@ prephitmp_8,
 403              	.LBE35:
 404              	@ src/b2d_lite.c:79: {
  79:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 405              		.loc 1 79 1 view .LVU64
 406 0012 03E90300 		stmdb	r3, {r0, r1}	@ tmp171,,
 407              	.LBB36:
 408              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
 409              		.loc 1 80 5 view .LVU65
 410 0016 3ADD     		ble	.L15		@,
 411 0018 1E4E     		ldr	r6, .L28	@ tmp157,
 412              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
 413              		.loc 1 80 14 view .LVU66
 414 001a 0024     		movs	r4, #0	@ i,
 415 001c DDF80890 		ldr	r9, [sp, #8]	@ pretmp_21, key.body1
 416              	@ src/b2d_lite.c:83:             g_arbiterKeys[i].body2 == key.body2)
  81:src/b2d_lite.c ****     {    
  82:src/b2d_lite.c ****         if (g_arbiterKeys[i].body1 == key.body1 && 
  83:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 417              		.loc 1 83 29 view .LVU67
 418 0020 06F1040B 		add	fp, r6, #4	@ tmp160, tmp157,
 419 0024 04E0     		b	.L23		@
 420              	.LVL7:
 421              	.L19:
 422              		.loc 1 83 29 view .LVU68
 423 0026 D8F80050 		ldr	r5, [r8]	@ prephitmp_8, g_numArbiters
  80:src/b2d_lite.c ****     {    
 424              		.loc 1 80 38 is_stmt 1 view .LVU69
 425              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
  80:src/b2d_lite.c ****     {    
 426              		.loc 1 80 39 is_stmt 0 view .LVU70
 427 002a 0134     		adds	r4, r4, #1	@ i, i,
 428              	.LVL8:
  80:src/b2d_lite.c ****     {    
 429              		.loc 1 80 19 is_stmt 1 view .LVU71
 430              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
  80:src/b2d_lite.c ****     {    
 431              		.loc 1 80 5 is_stmt 0 view .LVU72
 432 002c A542     		cmp	r5, r4	@ prephitmp_8, i
 433 002e 2EDD     		ble	.L15		@,
 434              	.LVL9:
 435              	.L23:
  82:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 436              		.loc 1 82 9 is_stmt 1 view .LVU73
 437              	@ src/b2d_lite.c:82:         if (g_arbiterKeys[i].body1 == key.body1 && 
  82:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 438              		.loc 1 82 12 is_stmt 0 view .LVU74
 439 0030 56F83410 		ldr	r1, [r6, r4, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _44, step: 8, offset: 0B], MEM[symbol
 440              	@ src/b2d_lite.c:82:         if (g_arbiterKeys[i].body1 == key.body1 && 
  82:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 441              		.loc 1 82 29 view .LVU75
 442 0034 E300     		lsls	r3, r4, #3	@ tmp132, i,
 443 0036 06EBC402 		add	r2, r6, r4, lsl #3	@ tmp133, tmp157, i,
 444              	@ src/b2d_lite.c:82:         if (g_arbiterKeys[i].body1 == key.body1 && 
  82:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 445              		.loc 1 82 12 view .LVU76
 446 003a 4945     		cmp	r1, r9	@ MEM[symbol: g_arbiterKeys, index: _44, step: 8, offset: 0B], pretmp_21
ARM GAS  /tmp/ccPfsSwR.s 			page 11


 447 003c F3D1     		bne	.L19		@,
 448              	@ src/b2d_lite.c:82:         if (g_arbiterKeys[i].body1 == key.body1 && 
  82:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 449              		.loc 1 82 49 discriminator 1 view .LVU77
 450 003e 5BF83400 		ldr	r0, [fp, r4, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _44, step: 8, offset: 4B], MEM[symbol
 451 0042 0399     		ldr	r1, [sp, #12]	@ key.body2, key.body2
 452 0044 8842     		cmp	r0, r1	@ MEM[symbol: g_arbiterKeys, index: _44, step: 8, offset: 4B], key.body2
 453 0046 EED1     		bne	.L19		@,
 454              	.LVL10:
 455              	.LBB31:
  84:src/b2d_lite.c ****         {
  85:src/b2d_lite.c ****             for (int j=i; j < g_numArbiters-1; j++)
 456              		.loc 1 85 27 is_stmt 1 view .LVU78
 457              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
 458              		.loc 1 85 44 is_stmt 0 view .LVU79
 459 0048 691E     		subs	r1, r5, #1	@ _23, prephitmp_8,
 460              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
 461              		.loc 1 85 13 view .LVU80
 462 004a A142     		cmp	r1, r4	@ _23, i
 463              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
 464              		.loc 1 85 44 view .LVU81
 465 004c 0191     		str	r1, [sp, #4]	@ _23, %sfp
 466              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
 467              		.loc 1 85 13 view .LVU82
 468 004e 17DD     		ble	.L22		@,
 469 0050 1149     		ldr	r1, .L28+4	@ tmp177,
 470 0052 2344     		add	r3, r3, r4	@ tmp146, i
 471 0054 01EBC505 		add	r5, r1, r5, lsl #3	@ _41, tmp177, prephitmp_8,
 472 0058 1049     		ldr	r1, .L28+8	@ tmp178,
 473 005a 01EB031C 		add	ip, r1, r3, lsl #4	@ ivtmp.68, tmp178, tmp146,
 474              	.LVL11:
 475              	.L21:
  86:src/b2d_lite.c ****             {
  87:src/b2d_lite.c ****                 g_arbiterKeys[j]=g_arbiterKeys[j+1];
 476              		.loc 1 87 17 is_stmt 1 discriminator 3 view .LVU83
 477              	@ src/b2d_lite.c:87:                 g_arbiterKeys[j]=g_arbiterKeys[j+1];
 478              		.loc 1 87 33 is_stmt 0 discriminator 3 view .LVU84
 479 005e 02F10807 		add	r7, r2, #8	@ tmp152, ivtmp.67,
 480              	@ src/b2d_lite.c:88:                 g_arbiters[j]=g_arbiters[j+1];
  88:src/b2d_lite.c ****                 g_arbiters[j]=g_arbiters[j+1];
 481              		.loc 1 88 30 discriminator 3 view .LVU85
 482 0062 0CF1900A 		add	r10, ip, #144	@ tmp154, ivtmp.68,
 483              	@ src/b2d_lite.c:87:                 g_arbiterKeys[j]=g_arbiterKeys[j+1];
  87:src/b2d_lite.c ****                 g_arbiters[j]=g_arbiters[j+1];
 484              		.loc 1 87 33 discriminator 3 view .LVU86
 485 0066 97E80300 		ldm	r7, {r0, r1}	@ tmp152,,
 486 006a 82E80300 		stm	r2, {r0, r1}	@ ivtmp.67,,
 487              		.loc 1 88 17 is_stmt 1 discriminator 3 view .LVU87
 488              	@ src/b2d_lite.c:88:                 g_arbiters[j]=g_arbiters[j+1];
 489              		.loc 1 88 30 is_stmt 0 discriminator 3 view .LVU88
 490 006e 9022     		movs	r2, #144	@,
 491 0070 6046     		mov	r0, ip	@, ivtmp.68
 492 0072 5146     		mov	r1, r10	@, tmp154
 493 0074 FFF7FEFF 		bl	memcpy		@
 494              	.LVL12:
  85:src/b2d_lite.c ****             {
 495              		.loc 1 85 48 is_stmt 1 discriminator 3 view .LVU89
ARM GAS  /tmp/ccPfsSwR.s 			page 12


  85:src/b2d_lite.c ****             {
 496              		.loc 1 85 27 discriminator 3 view .LVU90
 497              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
  85:src/b2d_lite.c ****             {
 498              		.loc 1 85 13 is_stmt 0 discriminator 3 view .LVU91
 499 0078 AF42     		cmp	r7, r5	@ ivtmp.67, _41
 500 007a 3A46     		mov	r2, r7	@ ivtmp.67, tmp152
 501 007c D446     		mov	ip, r10	@ ivtmp.68, tmp154
 502 007e EED1     		bne	.L21		@,
 503              	.L22:
 504              	.LBE31:
  89:src/b2d_lite.c ****             }
  90:src/b2d_lite.c ****             g_numArbiters--;
 505              		.loc 1 90 13 is_stmt 1 view .LVU92
 506              	@ src/b2d_lite.c:90:             g_numArbiters--;
 507              		.loc 1 90 26 is_stmt 0 view .LVU93
 508 0080 019B     		ldr	r3, [sp, #4]	@ _23, %sfp
 509              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
  80:src/b2d_lite.c ****     {    
 510              		.loc 1 80 39 view .LVU94
 511 0082 0134     		adds	r4, r4, #1	@ i, i,
 512              	.LVL13:
 513              	.LBB32:
 514              	@ src/b2d_lite.c:85:             for (int j=i; j < g_numArbiters-1; j++)
  85:src/b2d_lite.c ****             {
 515              		.loc 1 85 44 view .LVU95
 516 0084 1D46     		mov	r5, r3	@ prephitmp_8, _23
 517              	.LBE32:
  80:src/b2d_lite.c ****     {    
 518              		.loc 1 80 38 is_stmt 1 view .LVU96
 519              	.LVL14:
  80:src/b2d_lite.c ****     {    
 520              		.loc 1 80 19 view .LVU97
 521              	@ src/b2d_lite.c:90:             g_numArbiters--;
 522              		.loc 1 90 26 is_stmt 0 view .LVU98
 523 0086 C8F80030 		str	r3, [r8]	@ _23, g_numArbiters
 524              	@ src/b2d_lite.c:80:     for (int i=0; i < g_numArbiters; i++)
  80:src/b2d_lite.c ****     {    
 525              		.loc 1 80 5 view .LVU99
 526 008a A542     		cmp	r5, r4	@ prephitmp_8, i
 527 008c D0DC     		bgt	.L23		@,
 528              	.LVL15:
 529              	.L15:
  80:src/b2d_lite.c ****     {    
 530              		.loc 1 80 5 view .LVU100
 531              	.LBE36:
 532              	@ src/b2d_lite.c:93: }
  91:src/b2d_lite.c ****         }
  92:src/b2d_lite.c ****     }                                        
  93:src/b2d_lite.c **** }
 533              		.loc 1 93 1 view .LVU101
 534 008e 05B0     		add	sp, sp, #20	@,,
 535              	.LCFI15:
 536              		.cfi_def_cfa_offset 36
 537              		@ sp needed	@
 538 0090 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 539              	.L29:
ARM GAS  /tmp/ccPfsSwR.s 			page 13


 540              		.align	2
 541              	.L28:
 542 0094 00000000 		.word	g_arbiterKeys
 543 0098 F8FFFFFF 		.word	g_arbiterKeys-8
 544 009c 00000000 		.word	g_arbiters
 545 00a0 00000000 		.word	g_numArbiters
 546              		.cfi_endproc
 547              	.LFE5:
 548              		.size	eraseArbiter, .-eraseArbiter
 549              		.section	.text.initContact,"ax",%progbits
 550              		.align	1
 551              		.p2align 4,,15
 552              		.global	initContact
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv5-sp-d16
 557              		.type	initContact, %function
 558              	initContact:
 559              	.LVL16:
 560              	.LFB6:
  94:src/b2d_lite.c **** 
  95:src/b2d_lite.c **** void initContact(struct Contact *c)
  96:src/b2d_lite.c **** {
 561              		.loc 1 96 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
  97:src/b2d_lite.c ****     c->Pn=0.0f;
 566              		.loc 1 97 5 view .LVU103
 567              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
 568              		.loc 1 97 10 is_stmt 0 view .LVU104
 569 0000 0023     		movs	r3, #0	@ tmp111,
 570 0002 4362     		str	r3, [r0, #36]	@ float	@ tmp111, c_2(D)->Pn
  98:src/b2d_lite.c ****     c->Pt=0.0f;
 571              		.loc 1 98 5 is_stmt 1 view .LVU105
 572              	@ src/b2d_lite.c:98:     c->Pt=0.0f;
 573              		.loc 1 98 10 is_stmt 0 view .LVU106
 574 0004 8362     		str	r3, [r0, #40]	@ float	@ tmp111, c_2(D)->Pt
  99:src/b2d_lite.c ****     c->Pnb=0.0f;
 575              		.loc 1 99 5 is_stmt 1 view .LVU107
 576              	@ src/b2d_lite.c:99:     c->Pnb=0.0f;
 577              		.loc 1 99 11 is_stmt 0 view .LVU108
 578 0006 C362     		str	r3, [r0, #44]	@ float	@ tmp111, c_2(D)->Pnb
 579              	@ src/b2d_lite.c:100: }
 100:src/b2d_lite.c **** }
 580              		.loc 1 100 1 view .LVU109
 581 0008 7047     		bx	lr	@
 582              		.cfi_endproc
 583              	.LFE6:
 584              		.size	initContact, .-initContact
 585 000a 00BF     		.section	.text.UpdateArbiter,"ax",%progbits
 586              		.align	1
 587              		.p2align 4,,15
 588              		.global	UpdateArbiter
 589              		.syntax unified
ARM GAS  /tmp/ccPfsSwR.s 			page 14


 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv5-sp-d16
 593              		.type	UpdateArbiter, %function
 594              	UpdateArbiter:
 595              	.LVL17:
 596              	.LFB7:
 101:src/b2d_lite.c **** 
 102:src/b2d_lite.c **** void UpdateArbiter(struct Arbiter *a, struct Contact* newContacts, int numNewContacts)
 103:src/b2d_lite.c **** {
 597              		.loc 1 103 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 136
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		.loc 1 103 1 is_stmt 0 view .LVU111
 602 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 603              	.LCFI16:
 604              		.cfi_def_cfa_offset 36
 605              		.cfi_offset 4, -36
 606              		.cfi_offset 5, -32
 607              		.cfi_offset 6, -28
 608              		.cfi_offset 7, -24
 609              		.cfi_offset 8, -20
 610              		.cfi_offset 9, -16
 611              		.cfi_offset 10, -12
 612              		.cfi_offset 11, -8
 613              		.cfi_offset 14, -4
 614              	.LBB37:
 615              	.LBB38:
 616              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 617              		.loc 1 97 10 view .LVU112
 618 0004 0023     		movs	r3, #0	@ tmp133,
 619              	.LBE38:
 620              	.LBE37:
 621              	@ src/b2d_lite.c:103: {
 622              		.loc 1 103 1 view .LVU113
 623 0006 A3B0     		sub	sp, sp, #140	@,,
 624              	.LCFI17:
 625              		.cfi_def_cfa_offset 176
 626              	.LBB40:
 627              	@ src/b2d_lite.c:108: 	for (int i = 0; i < numNewContacts; ++i)
 104:src/b2d_lite.c **** 	struct Contact mergedContacts[2];
 105:src/b2d_lite.c ****     initContact(&mergedContacts[0]);
 106:src/b2d_lite.c ****     initContact(&mergedContacts[1]);
 107:src/b2d_lite.c **** 
 108:src/b2d_lite.c **** 	for (int i = 0; i < numNewContacts; ++i)
 628              		.loc 1 108 2 view .LVU114
 629 0008 B2F10009 		subs	r9, r2, #0	@ numNewContacts, tmp161
 630              	.LBE40:
 631              	@ src/b2d_lite.c:103: {
 103:src/b2d_lite.c **** 	struct Contact mergedContacts[2];
 632              		.loc 1 103 1 view .LVU115
 633 000c 8046     		mov	r8, r0	@ a, tmp159
 104:src/b2d_lite.c **** 	struct Contact mergedContacts[2];
 634              		.loc 1 104 2 is_stmt 1 view .LVU116
 105:src/b2d_lite.c ****     initContact(&mergedContacts[1]);
ARM GAS  /tmp/ccPfsSwR.s 			page 15


 635              		.loc 1 105 5 view .LVU117
 636              	.LVL18:
 637              	.LBB51:
 638              	.LBI37:
  95:src/b2d_lite.c **** {
 639              		.loc 1 95 6 view .LVU118
 640              	.LBB39:
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 641              		.loc 1 97 5 view .LVU119
 642              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 643              		.loc 1 97 10 is_stmt 0 view .LVU120
 644 000e 0B93     		str	r3, [sp, #44]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts].Pn
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 645              		.loc 1 98 5 is_stmt 1 view .LVU121
 646              	@ src/b2d_lite.c:98:     c->Pt=0.0f;
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 647              		.loc 1 98 10 is_stmt 0 view .LVU122
 648 0010 0C93     		str	r3, [sp, #48]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts].Pt
  99:src/b2d_lite.c **** }
 649              		.loc 1 99 5 is_stmt 1 view .LVU123
 650              	@ src/b2d_lite.c:99:     c->Pnb=0.0f;
  99:src/b2d_lite.c **** }
 651              		.loc 1 99 11 is_stmt 0 view .LVU124
 652 0012 0D93     		str	r3, [sp, #52]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts].Pnb
 653              	.LVL19:
  99:src/b2d_lite.c **** }
 654              		.loc 1 99 11 view .LVU125
 655              	.LBE39:
 656              	.LBE51:
 106:src/b2d_lite.c **** 
 657              		.loc 1 106 5 is_stmt 1 view .LVU126
 658              	.LBB52:
 659              	.LBI52:
  95:src/b2d_lite.c **** {
 660              		.loc 1 95 6 view .LVU127
 661              	.LBB53:
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 662              		.loc 1 97 5 view .LVU128
 663              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 664              		.loc 1 97 10 is_stmt 0 view .LVU129
 665 0014 1B93     		str	r3, [sp, #108]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts + 64B].Pn
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 666              		.loc 1 98 5 is_stmt 1 view .LVU130
 667              	@ src/b2d_lite.c:98:     c->Pt=0.0f;
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 668              		.loc 1 98 10 is_stmt 0 view .LVU131
 669 0016 1C93     		str	r3, [sp, #112]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts + 64B].Pt
  99:src/b2d_lite.c **** }
 670              		.loc 1 99 5 is_stmt 1 view .LVU132
 671              	@ src/b2d_lite.c:99:     c->Pnb=0.0f;
  99:src/b2d_lite.c **** }
 672              		.loc 1 99 11 is_stmt 0 view .LVU133
 673 0018 1D93     		str	r3, [sp, #116]	@ float	@ tmp133, MEM[(struct Contact *)&mergedContacts + 64B].Pnb
 674              	.LVL20:
  99:src/b2d_lite.c **** }
ARM GAS  /tmp/ccPfsSwR.s 			page 16


 675              		.loc 1 99 11 view .LVU134
 676              	.LBE53:
 677              	.LBE52:
 678              		.loc 1 108 2 is_stmt 1 view .LVU135
 679              	.LBB54:
 680              		.loc 1 108 7 view .LVU136
 681              		.loc 1 108 18 view .LVU137
 682              	@ src/b2d_lite.c:108: 	for (int i = 0; i < numNewContacts; ++i)
 683              		.loc 1 108 2 is_stmt 0 view .LVU138
 684 001a 4EDD     		ble	.L39		@,
 685              	.LBB41:
 686              	.LBB42:
 687              	@ src/b2d_lite.c:135: 				c->Pn = 0.0f;
 109:src/b2d_lite.c **** 	{
 110:src/b2d_lite.c **** 		struct Contact* cNew = newContacts + i;
 111:src/b2d_lite.c **** 		int k = -1;
 112:src/b2d_lite.c **** 		for (int j = 0; j < a->numContacts; ++j)
 113:src/b2d_lite.c **** 		{
 114:src/b2d_lite.c **** 			struct Contact* cOld = a->contacts + j;
 115:src/b2d_lite.c **** 			if (cNew->feature.value == cOld->feature.value)
 116:src/b2d_lite.c **** 			{
 117:src/b2d_lite.c **** 				k = j;
 118:src/b2d_lite.c **** 				break;
 119:src/b2d_lite.c **** 			}
 120:src/b2d_lite.c **** 		}
 121:src/b2d_lite.c **** 
 122:src/b2d_lite.c **** 		if (k > -1)
 123:src/b2d_lite.c **** 		{
 124:src/b2d_lite.c **** 			struct Contact* c = mergedContacts + i;
 125:src/b2d_lite.c **** 			struct Contact* cOld = a->contacts + k;
 126:src/b2d_lite.c **** 			*c = *cNew;
 127:src/b2d_lite.c **** 			if (warmStarting)
 128:src/b2d_lite.c **** 			{
 129:src/b2d_lite.c **** 				c->Pn = cOld->Pn;
 130:src/b2d_lite.c **** 				c->Pt = cOld->Pt;
 131:src/b2d_lite.c **** 				c->Pnb = cOld->Pnb;
 132:src/b2d_lite.c **** 			}
 133:src/b2d_lite.c **** 			else
 134:src/b2d_lite.c **** 			{
 135:src/b2d_lite.c **** 				c->Pn = 0.0f;
 688              		.loc 1 135 11 view .LVU139
 689 001c 07EE903A 		vmov	s15, r3	@ tmp157, tmp133
 690 0020 8C46     		mov	ip, r1	@ ivtmp.101, newContacts
 691 0022 4FEA8913 		lsl	r3, r9, #6	@ _56, numNewContacts,
 692 0026 D0F88070 		ldr	r7, [r0, #128]	@ pretmp_54, a_25(D)->numContacts
 693 002a 01EB891A 		add	r10, r1, r9, lsl #6	@ _65, ivtmp.101, numNewContacts,
 694 002e 0DF1080E 		add	lr, sp, #8	@ ivtmp.100,,
 695              	@ src/b2d_lite.c:127: 			if (warmStarting)
 127:src/b2d_lite.c **** 			{
 696              		.loc 1 127 8 view .LVU140
 697 0032 DFF8B8B0 		ldr	fp, .L50	@ tmp156,
 698 0036 0193     		str	r3, [sp, #4]	@ _56, %sfp
 699              	.LVL21:
 700              	.L37:
 127:src/b2d_lite.c **** 			{
 701              		.loc 1 127 8 view .LVU141
 702              	.LBE42:
ARM GAS  /tmp/ccPfsSwR.s 			page 17


 110:src/b2d_lite.c **** 		int k = -1;
 703              		.loc 1 110 3 is_stmt 1 view .LVU142
 111:src/b2d_lite.c **** 		for (int j = 0; j < a->numContacts; ++j)
 704              		.loc 1 111 3 view .LVU143
 112:src/b2d_lite.c **** 		{
 705              		.loc 1 112 3 view .LVU144
 706              	.LBB43:
 112:src/b2d_lite.c **** 		{
 707              		.loc 1 112 8 view .LVU145
 112:src/b2d_lite.c **** 		{
 708              		.loc 1 112 19 view .LVU146
 709              	@ src/b2d_lite.c:112: 		for (int j = 0; j < a->numContacts; ++j)
 112:src/b2d_lite.c **** 		{
 710              		.loc 1 112 3 is_stmt 0 view .LVU147
 711 0038 002F     		cmp	r7, #0	@ pretmp_54,
 712 003a 43DD     		ble	.L33		@,
 713              	.LBB44:
 714              	@ src/b2d_lite.c:115: 			if (cNew->feature.value == cOld->feature.value)
 115:src/b2d_lite.c **** 			{
 715              		.loc 1 115 21 view .LVU148
 716 003c DCF83C10 		ldr	r1, [ip, #60]	@ _6, MEM[base: _76, offset: 60B]
 717 0040 4446     		mov	r4, r8	@ ivtmp.95, a
 718              	.LBE44:
 719              	@ src/b2d_lite.c:112: 		for (int j = 0; j < a->numContacts; ++j)
 112:src/b2d_lite.c **** 		{
 720              		.loc 1 112 12 view .LVU149
 721 0042 0023     		movs	r3, #0	@ j,
 722 0044 03E0     		b	.L35		@
 723              	.LVL22:
 724              	.L48:
 725              	@ src/b2d_lite.c:112: 		for (int j = 0; j < a->numContacts; ++j)
 112:src/b2d_lite.c **** 		{
 726              		.loc 1 112 3 discriminator 2 view .LVU150
 727 0046 BB42     		cmp	r3, r7	@ j, pretmp_54
 728 0048 04F14004 		add	r4, r4, #64	@ ivtmp.95, ivtmp.95,
 729              	.LVL23:
 112:src/b2d_lite.c **** 		{
 730              		.loc 1 112 3 discriminator 2 view .LVU151
 731 004c 3AD0     		beq	.L33		@,
 732              	.LVL24:
 733              	.L35:
 734              	.LBB45:
 114:src/b2d_lite.c **** 			if (cNew->feature.value == cOld->feature.value)
 735              		.loc 1 114 4 is_stmt 1 view .LVU152
 115:src/b2d_lite.c **** 			{
 736              		.loc 1 115 4 view .LVU153
 737              	.LBE45:
 112:src/b2d_lite.c **** 		{
 738              		.loc 1 112 39 view .LVU154
 739              	.LBB46:
 740              	@ src/b2d_lite.c:115: 			if (cNew->feature.value == cOld->feature.value)
 115:src/b2d_lite.c **** 			{
 741              		.loc 1 115 7 is_stmt 0 view .LVU155
 742 004e E26B     		ldr	r2, [r4, #60]	@ MEM[base: cOld_32, offset: 60B], MEM[base: cOld_32, offset: 60B]
 743              	.LBE46:
 744              	@ src/b2d_lite.c:112: 		for (int j = 0; j < a->numContacts; ++j)
 112:src/b2d_lite.c **** 		{
ARM GAS  /tmp/ccPfsSwR.s 			page 18


 745              		.loc 1 112 39 view .LVU156
 746 0050 0133     		adds	r3, r3, #1	@ j, j,
 747              	.LVL25:
 112:src/b2d_lite.c **** 		{
 748              		.loc 1 112 19 is_stmt 1 view .LVU157
 749              	.LBB47:
 750              	@ src/b2d_lite.c:115: 			if (cNew->feature.value == cOld->feature.value)
 115:src/b2d_lite.c **** 			{
 751              		.loc 1 115 7 is_stmt 0 view .LVU158
 752 0052 9142     		cmp	r1, r2	@ _6, MEM[base: cOld_32, offset: 60B]
 753 0054 F7D1     		bne	.L48		@,
 754              	.LVL26:
 115:src/b2d_lite.c **** 			{
 755              		.loc 1 115 7 view .LVU159
 756              	.LBE47:
 757              	.LBE43:
 122:src/b2d_lite.c **** 		{
 758              		.loc 1 122 3 is_stmt 1 view .LVU160
 759              	.LBB48:
 124:src/b2d_lite.c **** 			struct Contact* cOld = a->contacts + k;
 760              		.loc 1 124 4 view .LVU161
 125:src/b2d_lite.c **** 			*c = *cNew;
 761              		.loc 1 125 4 view .LVU162
 126:src/b2d_lite.c **** 			if (warmStarting)
 762              		.loc 1 126 4 view .LVU163
 763              	@ src/b2d_lite.c:126: 			*c = *cNew;
 126:src/b2d_lite.c **** 			if (warmStarting)
 764              		.loc 1 126 7 is_stmt 0 view .LVU164
 765 0056 6646     		mov	r6, ip	@ _76, ivtmp.101
 766 0058 7546     		mov	r5, lr	@ _67, ivtmp.100
 767 005a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}	@ _76,,,,
 768              	.LVL27:
 126:src/b2d_lite.c **** 			if (warmStarting)
 769              		.loc 1 126 7 view .LVU165
 770 005c 0FC5     		stmia	r5!, {r0, r1, r2, r3}	@ _67,,,,
 771 005e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}	@ _76,,,,
 772 0060 0FC5     		stmia	r5!, {r0, r1, r2, r3}	@ _67,,,,
 773 0062 0FCE     		ldmia	r6!, {r0, r1, r2, r3}	@ _76,,,,
 774 0064 0FC5     		stmia	r5!, {r0, r1, r2, r3}	@ _67,,,,
 775 0066 96E80F00 		ldm	r6, {r0, r1, r2, r3}	@ _76,,,,
 776 006a 85E80F00 		stm	r5, {r0, r1, r2, r3}	@ _67,,,,
 127:src/b2d_lite.c **** 			{
 777              		.loc 1 127 4 is_stmt 1 view .LVU166
 778              	@ src/b2d_lite.c:127: 			if (warmStarting)
 127:src/b2d_lite.c **** 			{
 779              		.loc 1 127 7 is_stmt 0 view .LVU167
 780 006e DBF80030 		ldr	r3, [fp]	@ warmStarting, warmStarting
 781 0072 002B     		cmp	r3, #0	@ warmStarting
 782 0074 33D0     		beq	.L49	@
 129:src/b2d_lite.c **** 				c->Pt = cOld->Pt;
 783              		.loc 1 129 5 is_stmt 1 view .LVU168
 784              	@ src/b2d_lite.c:129: 				c->Pn = cOld->Pn;
 129:src/b2d_lite.c **** 				c->Pt = cOld->Pt;
 785              		.loc 1 129 11 is_stmt 0 view .LVU169
 786 0076 616A     		ldr	r1, [r4, #36]	@ float	@ cOld_32->Pn, cOld_32->Pn
 787              	@ src/b2d_lite.c:130: 				c->Pt = cOld->Pt;
 130:src/b2d_lite.c **** 				c->Pnb = cOld->Pnb;
ARM GAS  /tmp/ccPfsSwR.s 			page 19


 788              		.loc 1 130 11 view .LVU170
 789 0078 A26A     		ldr	r2, [r4, #40]	@ float	@ cOld_32->Pt, cOld_32->Pt
 790              	@ src/b2d_lite.c:131: 				c->Pnb = cOld->Pnb;
 131:src/b2d_lite.c **** 			}
 791              		.loc 1 131 12 view .LVU171
 792 007a E36A     		ldr	r3, [r4, #44]	@ float	@ cOld_32->Pnb, cOld_32->Pnb
 793              	@ src/b2d_lite.c:129: 				c->Pn = cOld->Pn;
 129:src/b2d_lite.c **** 				c->Pt = cOld->Pt;
 794              		.loc 1 129 11 view .LVU172
 795 007c CEF82410 		str	r1, [lr, #36]	@ float	@ cOld_32->Pn, MEM[base: _67, offset: 36B]
 130:src/b2d_lite.c **** 				c->Pnb = cOld->Pnb;
 796              		.loc 1 130 5 is_stmt 1 view .LVU173
 797              	@ src/b2d_lite.c:130: 				c->Pt = cOld->Pt;
 130:src/b2d_lite.c **** 				c->Pnb = cOld->Pnb;
 798              		.loc 1 130 11 is_stmt 0 view .LVU174
 799 0080 CEF82820 		str	r2, [lr, #40]	@ float	@ cOld_32->Pt, MEM[base: _67, offset: 40B]
 131:src/b2d_lite.c **** 			}
 800              		.loc 1 131 5 is_stmt 1 view .LVU175
 801              	@ src/b2d_lite.c:131: 				c->Pnb = cOld->Pnb;
 131:src/b2d_lite.c **** 			}
 802              		.loc 1 131 12 is_stmt 0 view .LVU176
 803 0084 CEF82C30 		str	r3, [lr, #44]	@ float	@ cOld_32->Pnb, MEM[base: _67, offset: 44B]
 804              	.LVL28:
 805              	.L36:
 131:src/b2d_lite.c **** 			}
 806              		.loc 1 131 12 view .LVU177
 807              	.LBE48:
 808              	.LBE41:
 108:src/b2d_lite.c **** 	{
 809              		.loc 1 108 38 is_stmt 1 discriminator 2 view .LVU178
 108:src/b2d_lite.c **** 	{
 810              		.loc 1 108 18 discriminator 2 view .LVU179
 811 0088 0CF1400C 		add	ip, ip, #64	@ ivtmp.101, ivtmp.101,
 812              	.LVL29:
 108:src/b2d_lite.c **** 	{
 813              		.loc 1 108 18 is_stmt 0 discriminator 2 view .LVU180
 814 008c 0EF1400E 		add	lr, lr, #64	@ ivtmp.100, ivtmp.100,
 815              	@ src/b2d_lite.c:108: 	for (int i = 0; i < numNewContacts; ++i)
 108:src/b2d_lite.c **** 	{
 816              		.loc 1 108 2 discriminator 2 view .LVU181
 817 0090 D445     		cmp	ip, r10	@ ivtmp.101, _65
 818 0092 D1D1     		bne	.L37		@,
 819 0094 0026     		movs	r6, #0	@ ivtmp.92,
 820 0096 019F     		ldr	r7, [sp, #4]	@ _56, %sfp
 821              	.L38:
 822              	.LBE54:
 823              	.LBB55:
 136:src/b2d_lite.c **** 				c->Pt = 0.0f;
 137:src/b2d_lite.c **** 				c->Pnb = 0.0f;
 138:src/b2d_lite.c **** 			}
 139:src/b2d_lite.c **** 		}
 140:src/b2d_lite.c **** 		else
 141:src/b2d_lite.c **** 		{
 142:src/b2d_lite.c **** 			mergedContacts[i] = newContacts[i];
 143:src/b2d_lite.c **** 		}
 144:src/b2d_lite.c **** 	}
 145:src/b2d_lite.c **** 
ARM GAS  /tmp/ccPfsSwR.s 			page 20


 146:src/b2d_lite.c **** 	for (int i = 0; i < numNewContacts; ++i)
 147:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 824              		.loc 1 147 3 is_stmt 1 discriminator 3 view .LVU182
 825              	@ src/b2d_lite.c:147: 		a->contacts[i] = mergedContacts[i];
 826              		.loc 1 147 18 is_stmt 0 discriminator 3 view .LVU183
 827 0098 02AB     		add	r3, sp, #8	@ tmp183,,
 828 009a 08EB0604 		add	r4, r8, r6	@ tmp147, a, ivtmp.92
 829 009e 9D19     		adds	r5, r3, r6	@ tmp148, tmp183, ivtmp.92
 830 00a0 4036     		adds	r6, r6, #64	@ ivtmp.92, ivtmp.92,
 831 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp148,,,,
 832 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp147,,,,
 833 00a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp148,,,,
 834 00a8 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp147,,,,
 835 00aa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ tmp148,,,,
 836              	@ src/b2d_lite.c:146: 	for (int i = 0; i < numNewContacts; ++i)
 146:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 837              		.loc 1 146 2 discriminator 3 view .LVU184
 838 00ac BE42     		cmp	r6, r7	@ ivtmp.92, _56
 839              	@ src/b2d_lite.c:147: 		a->contacts[i] = mergedContacts[i];
 840              		.loc 1 147 18 discriminator 3 view .LVU185
 841 00ae 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ tmp147,,,,
 842 00b0 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ tmp148,,,,
 843 00b4 84E80F00 		stm	r4, {r0, r1, r2, r3}	@ tmp147,,,,
 146:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 844              		.loc 1 146 38 is_stmt 1 discriminator 3 view .LVU186
 146:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 845              		.loc 1 146 18 discriminator 3 view .LVU187
 846              	@ src/b2d_lite.c:146: 	for (int i = 0; i < numNewContacts; ++i)
 146:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 847              		.loc 1 146 2 is_stmt 0 discriminator 3 view .LVU188
 848 00b8 EED1     		bne	.L38		@,
 849              	.LVL30:
 850              	.L39:
 146:src/b2d_lite.c **** 		a->contacts[i] = mergedContacts[i];
 851              		.loc 1 146 2 discriminator 3 view .LVU189
 852              	.LBE55:
 148:src/b2d_lite.c **** 
 149:src/b2d_lite.c **** 	a->numContacts = numNewContacts;
 853              		.loc 1 149 2 is_stmt 1 view .LVU190
 854              	@ src/b2d_lite.c:149: 	a->numContacts = numNewContacts;
 855              		.loc 1 149 17 is_stmt 0 view .LVU191
 856 00ba C8F88090 		str	r9, [r8, #128]	@ numNewContacts, a_25(D)->numContacts
 857              	@ src/b2d_lite.c:150: }
 150:src/b2d_lite.c **** }
 858              		.loc 1 150 1 view .LVU192
 859 00be 23B0     		add	sp, sp, #140	@,,
 860              	.LCFI18:
 861              		.cfi_remember_state
 862              		.cfi_def_cfa_offset 36
 863              		@ sp needed	@
 864 00c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 865              	.LVL31:
 866              	.L33:
 867              	.LCFI19:
 868              		.cfi_restore_state
 869              	.LBB56:
 870              	.LBB50:
ARM GAS  /tmp/ccPfsSwR.s 			page 21


 122:src/b2d_lite.c **** 		{
 871              		.loc 1 122 3 is_stmt 1 view .LVU193
 142:src/b2d_lite.c **** 		}
 872              		.loc 1 142 4 view .LVU194
 873              	@ src/b2d_lite.c:142: 			mergedContacts[i] = newContacts[i];
 142:src/b2d_lite.c **** 		}
 874              		.loc 1 142 22 is_stmt 0 view .LVU195
 875 00c4 6546     		mov	r5, ip	@ ivtmp.101, ivtmp.101
 876 00c6 7446     		mov	r4, lr	@ ivtmp.100, ivtmp.100
 877 00c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ ivtmp.101,,,,
 878 00ca 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ ivtmp.100,,,,
 879 00cc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ ivtmp.101,,,,
 880 00ce 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ ivtmp.100,,,,
 881 00d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}	@ ivtmp.101,,,,
 882 00d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}	@ ivtmp.100,,,,
 883 00d4 95E80F00 		ldm	r5, {r0, r1, r2, r3}	@ ivtmp.101,,,,
 884 00d8 84E80F00 		stm	r4, {r0, r1, r2, r3}	@ ivtmp.100,,,,
 885 00dc D4E7     		b	.L36		@
 886              	.LVL32:
 887              	.L49:
 888              	.LBB49:
 135:src/b2d_lite.c **** 				c->Pt = 0.0f;
 889              		.loc 1 135 5 is_stmt 1 view .LVU196
 890              	@ src/b2d_lite.c:135: 				c->Pn = 0.0f;
 135:src/b2d_lite.c **** 				c->Pt = 0.0f;
 891              		.loc 1 135 11 is_stmt 0 view .LVU197
 892 00de CEED097A 		vstr.32	s15, [lr, #36]	@ tmp157, MEM[base: _67, offset: 36B]
 136:src/b2d_lite.c **** 				c->Pnb = 0.0f;
 893              		.loc 1 136 5 is_stmt 1 view .LVU198
 894              	@ src/b2d_lite.c:136: 				c->Pt = 0.0f;
 136:src/b2d_lite.c **** 				c->Pnb = 0.0f;
 895              		.loc 1 136 11 is_stmt 0 view .LVU199
 896 00e2 CEED0A7A 		vstr.32	s15, [lr, #40]	@ tmp157, MEM[base: _67, offset: 40B]
 137:src/b2d_lite.c **** 			}
 897              		.loc 1 137 5 is_stmt 1 view .LVU200
 898              	@ src/b2d_lite.c:137: 				c->Pnb = 0.0f;
 137:src/b2d_lite.c **** 			}
 899              		.loc 1 137 12 is_stmt 0 view .LVU201
 900 00e6 CEED0B7A 		vstr.32	s15, [lr, #44]	@ tmp157, MEM[base: _67, offset: 44B]
 901 00ea CDE7     		b	.L36		@
 902              	.L51:
 903              		.align	2
 904              	.L50:
 905 00ec 00000000 		.word	.LANCHOR0
 906              	.LBE49:
 907              	.LBE50:
 908              	.LBE56:
 909              		.cfi_endproc
 910              	.LFE7:
 911              		.size	UpdateArbiter, .-UpdateArbiter
 912              		.section	.text.BroadPhase,"ax",%progbits
 913              		.align	1
 914              		.p2align 4,,15
 915              		.global	BroadPhase
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
ARM GAS  /tmp/ccPfsSwR.s 			page 22


 919              		.fpu fpv5-sp-d16
 920              		.type	BroadPhase, %function
 921              	BroadPhase:
 922              	.LFB8:
 151:src/b2d_lite.c **** 
 152:src/b2d_lite.c **** 
 153:src/b2d_lite.c **** void BroadPhase()
 154:src/b2d_lite.c **** {
 923              		.loc 1 154 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 312
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 155:src/b2d_lite.c ****     for (int i=0; i< g_numBodies; i++)
 927              		.loc 1 155 5 view .LVU203
 928              	.LBB57:
 929              		.loc 1 155 10 view .LVU204
 930              	.LVL33:
 931              		.loc 1 155 19 view .LVU205
 932              	@ src/b2d_lite.c:155:     for (int i=0; i< g_numBodies; i++)
 933              		.loc 1 155 20 is_stmt 0 view .LVU206
 934 0000 594B     		ldr	r3, .L80	@ tmp259,
 935 0002 1B68     		ldr	r3, [r3]	@ g_numBodies.14_13, g_numBodies
 936              	@ src/b2d_lite.c:155:     for (int i=0; i< g_numBodies; i++)
 937              		.loc 1 155 5 view .LVU207
 938 0004 002B     		cmp	r3, #0	@ g_numBodies.14_13,
 939 0006 40F3A980 		ble	.L75		@,
 940 000a 584A     		ldr	r2, .L80+4	@ ivtmp.127,
 941              	.LBE57:
 942              	@ src/b2d_lite.c:154: {
 154:src/b2d_lite.c ****     for (int i=0; i< g_numBodies; i++)
 943              		.loc 1 154 1 view .LVU208
 944 000c 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 945              	.LCFI20:
 946              		.cfi_def_cfa_offset 36
 947              		.cfi_offset 4, -36
 948              		.cfi_offset 5, -32
 949              		.cfi_offset 6, -28
 950              		.cfi_offset 7, -24
 951              		.cfi_offset 8, -20
 952              		.cfi_offset 9, -16
 953              		.cfi_offset 10, -12
 954              		.cfi_offset 11, -8
 955              		.cfi_offset 14, -4
 956 0010 2DED028B 		vpush.64	{d8}	@
 957              	.LCFI21:
 958              		.cfi_def_cfa_offset 44
 959              		.cfi_offset 80, -44
 960              		.cfi_offset 81, -40
 961 0014 CFB0     		sub	sp, sp, #316	@,,
 962              	.LCFI22:
 963              		.cfi_def_cfa_offset 360
 964              	.LBB90:
 965              	.LBB58:
 966              	.LBB59:
 967              	.LBB60:
 968              	.LBB61:
 969              	.LBB62:
ARM GAS  /tmp/ccPfsSwR.s 			page 23


 970              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 971              		.loc 1 97 10 view .LVU209
 972 0016 9FED568A 		vldr.32	s16, .L80+8	@ tmp238,
 973              	.LBE62:
 974              	.LBE61:
 975              	.LBB65:
 976              	.LBB66:
 977              	.LBB67:
 978              	@ src/b2d_lite.c:58:             g_arbiterKeys[i].body2 == key.body2)
  58:src/b2d_lite.c ****            return &g_arbiters[i];
 979              		.loc 1 58 29 view .LVU210
 980 001a DFF864B1 		ldr	fp, .L80+24	@ tmp239,
 981 001e 0392     		str	r2, [sp, #12]	@ ivtmp.127, %sfp
 982              	.LBE67:
 983              	.LBE66:
 984              	.LBE65:
 985              	.LBE60:
 986              	.LBE59:
 987              	.LBE58:
 988              	@ src/b2d_lite.c:155:     for (int i=0; i< g_numBodies; i++)
 989              		.loc 1 155 14 view .LVU211
 990 0020 0022     		movs	r2, #0	@ i,
 991 0022 0292     		str	r2, [sp, #8]	@ i, %sfp
 992              	.LVL34:
 993              	.L66:
 994              	.LBB88:
 156:src/b2d_lite.c ****     {
 157:src/b2d_lite.c ****         struct Body* bi = g_bodies[i];
 995              		.loc 1 157 9 is_stmt 1 view .LVU212
 996              	.LBB83:
 997              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 158:src/b2d_lite.c ****         
 159:src/b2d_lite.c ****         for (int j=i+1; j < g_numBodies; j++)
 998              		.loc 1 159 18 is_stmt 0 view .LVU213
 999 0024 029A     		ldr	r2, [sp, #8]	@ i, %sfp
 1000              	.LBE83:
 1001              	@ src/b2d_lite.c:157:         struct Body* bi = g_bodies[i];
 157:src/b2d_lite.c ****         
 1002              		.loc 1 157 22 view .LVU214
 1003 0026 0398     		ldr	r0, [sp, #12]	@ ivtmp.127, %sfp
 1004              	.LBB84:
 1005              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 1006              		.loc 1 159 18 view .LVU215
 1007 0028 0132     		adds	r2, r2, #1	@ i, i,
 1008              	.LBE84:
 1009              	@ src/b2d_lite.c:157:         struct Body* bi = g_bodies[i];
 157:src/b2d_lite.c ****         
 1010              		.loc 1 157 22 view .LVU216
 1011 002a 50F8049B 		ldr	r9, [r0], #4	@ bi, MEM[base: _71, offset: 0B]
 1012              	.LBB85:
 1013              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 1014              		.loc 1 159 9 view .LVU217
 1015 002e 9342     		cmp	r3, r2	@ g_numBodies.14_13, i
 1016              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 1017              		.loc 1 159 18 view .LVU218
 1018 0030 0292     		str	r2, [sp, #8]	@ i, %sfp
ARM GAS  /tmp/ccPfsSwR.s 			page 24


 1019              	.LVL35:
 1020              		.loc 1 159 18 view .LVU219
 1021              	.LBE85:
 1022              	@ src/b2d_lite.c:157:         struct Body* bi = g_bodies[i];
 157:src/b2d_lite.c ****         
 1023              		.loc 1 157 22 view .LVU220
 1024 0032 0390     		str	r0, [sp, #12]	@ ivtmp.127, %sfp
 1025              	.LVL36:
 1026              		.loc 1 159 9 is_stmt 1 view .LVU221
 1027              	.LBB86:
 1028              		.loc 1 159 14 view .LVU222
 1029              		.loc 1 159 25 view .LVU223
 1030              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 1031              		.loc 1 159 9 is_stmt 0 view .LVU224
 1032 0034 68DD     		ble	.L52		@,
 1033 0036 9246     		mov	r10, r2	@ j, i
 1034 0038 0190     		str	r0, [sp, #4]	@ ivtmp.127, %sfp
 1035              	.LVL37:
 1036              	.L56:
 1037              	.LBB81:
 160:src/b2d_lite.c ****         {
 161:src/b2d_lite.c ****             struct Body* bj = g_bodies[j];
 1038              		.loc 1 161 13 is_stmt 1 view .LVU225
 1039              	@ src/b2d_lite.c:163:             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 162:src/b2d_lite.c **** 
 163:src/b2d_lite.c ****             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 1040              		.loc 1 163 16 is_stmt 0 view .LVU226
 1041 003a D9ED0D7A 		vldr.32	s15, [r9, #52]	@ bi_24->invMass, bi_24->invMass
 1042              	@ src/b2d_lite.c:161:             struct Body* bj = g_bodies[j];
 161:src/b2d_lite.c **** 
 1043              		.loc 1 161 26 view .LVU227
 1044 003e 019B     		ldr	r3, [sp, #4]	@ ivtmp.121, %sfp
 1045              	@ src/b2d_lite.c:163:             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 1046              		.loc 1 163 16 view .LVU228
 1047 0040 F5EE407A 		vcmp.f32	s15, #0	@ bi_24->invMass
 1048              	@ src/b2d_lite.c:161:             struct Body* bj = g_bodies[j];
 161:src/b2d_lite.c **** 
 1049              		.loc 1 161 26 view .LVU229
 1050 0044 53F8045B 		ldr	r5, [r3], #4	@ key$body1, MEM[base: _76, offset: 0B]
 1051              	@ src/b2d_lite.c:163:             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 1052              		.loc 1 163 16 view .LVU230
 1053 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1054              	@ src/b2d_lite.c:161:             struct Body* bj = g_bodies[j];
 161:src/b2d_lite.c **** 
 1055              		.loc 1 161 26 view .LVU231
 1056 004c 0193     		str	r3, [sp, #4]	@ ivtmp.121, %sfp
 1057              	.LVL38:
 1058              		.loc 1 163 13 is_stmt 1 view .LVU232
 1059              	@ src/b2d_lite.c:163:             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 1060              		.loc 1 163 16 is_stmt 0 view .LVU233
 1061 004e 06D1     		bne	.L55		@,
 1062              	@ src/b2d_lite.c:163:             if (bi->invMass == 0.0f && bj->invMass == 0.0f)
 1063              		.loc 1 163 37 discriminator 1 view .LVU234
 1064 0050 D5ED0D7A 		vldr.32	s15, [r5, #52]	@ bj_27->invMass, bj_27->invMass
 1065 0054 F5EE407A 		vcmp.f32	s15, #0	@ bj_27->invMass
 1066 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1067 005c 4AD0     		beq	.L64		@,
ARM GAS  /tmp/ccPfsSwR.s 			page 25


 1068              	.L55:
 164:src/b2d_lite.c ****                 continue;
 165:src/b2d_lite.c **** 
 166:src/b2d_lite.c ****             struct Arbiter newArb;
 1069              		.loc 1 166 13 is_stmt 1 view .LVU235
 167:src/b2d_lite.c ****             struct ArbiterKey key;
 1070              		.loc 1 167 13 view .LVU236
 168:src/b2d_lite.c **** 
 169:src/b2d_lite.c ****             if (bi<bj)
 1071              		.loc 1 169 13 view .LVU237
 1072              	@ src/b2d_lite.c:169:             if (bi<bj)
 1073              		.loc 1 169 16 is_stmt 0 view .LVU238
 1074 005e A945     		cmp	r9, r5	@ bi, key$body1
 1075              	@ src/b2d_lite.c:171:                 newArb.body1=bi;
 170:src/b2d_lite.c ****             {
 171:src/b2d_lite.c ****                 newArb.body1=bi;
 1076              		.loc 1 171 29 view .LVU239
 1077 0060 06AC     		add	r4, sp, #24	@ tmp233,,
 1078              	@ src/b2d_lite.c:169:             if (bi<bj)
 169:src/b2d_lite.c ****             {
 1079              		.loc 1 169 16 view .LVU240
 1080 0062 56D2     		bcs	.L58		@,
 1081              		.loc 1 171 17 is_stmt 1 view .LVU241
 1082 0064 A846     		mov	r8, r5	@ key$body2, key$body1
 1083              	@ src/b2d_lite.c:172:                 newArb.body2=bj;
 172:src/b2d_lite.c ****                 newArb.body2=bj;
 1084              		.loc 1 172 29 is_stmt 0 view .LVU242
 1085 0066 C4F88850 		str	r5, [r4, #136]	@ key$body1, newArb.body2
 1086 006a 4D46     		mov	r5, r9	@ key$body1, bi
 1087              	.LVL39:
 1088              	@ src/b2d_lite.c:171:                 newArb.body1=bi;
 171:src/b2d_lite.c ****                 newArb.body2=bj;
 1089              		.loc 1 171 29 view .LVU243
 1090 006c C4F88490 		str	r9, [r4, #132]	@ bi, newArb.body1
 1091              		.loc 1 172 17 is_stmt 1 view .LVU244
 173:src/b2d_lite.c ****                 key.body1=bi;
 1092              		.loc 1 173 17 view .LVU245
 1093              	.LVL40:
 174:src/b2d_lite.c ****                 key.body2=bj;    
 1094              		.loc 1 174 17 view .LVU246
 1095              	.L59:
 175:src/b2d_lite.c ****             }
 176:src/b2d_lite.c ****             else
 177:src/b2d_lite.c ****             {
 178:src/b2d_lite.c ****                 newArb.body1=bj;
 179:src/b2d_lite.c ****                 newArb.body2=bi;
 180:src/b2d_lite.c ****                 key.body1=bj;
 181:src/b2d_lite.c ****                 key.body2=bi;
 182:src/b2d_lite.c ****             }
 183:src/b2d_lite.c **** 
 184:src/b2d_lite.c ****             initContact(&newArb.contacts[0]);
 1096              		.loc 1 184 13 view .LVU247
 1097              	.LBB75:
 1098              	.LBI61:
  95:src/b2d_lite.c **** {
 1099              		.loc 1 95 6 view .LVU248
 1100              	.LBB63:
ARM GAS  /tmp/ccPfsSwR.s 			page 26


  97:src/b2d_lite.c ****     c->Pt=0.0f;
 1101              		.loc 1 97 5 view .LVU249
 1102              	.LBE63:
 1103              	.LBE75:
 1104              	@ src/b2d_lite.c:187:             newArb.numContacts = Collide(newArb.contacts, newArb.body1, newAr
 185:src/b2d_lite.c ****             initContact(&newArb.contacts[1]);
 186:src/b2d_lite.c ****             
 187:src/b2d_lite.c ****             newArb.numContacts = Collide(newArb.contacts, newArb.body1, newArb.body2);  
 1105              		.loc 1 187 34 is_stmt 0 view .LVU250
 1106 0070 4246     		mov	r2, r8	@, key$body2
 1107 0072 2946     		mov	r1, r5	@, key$body1
 1108 0074 2046     		mov	r0, r4	@, tmp233
 1109              	.LBB76:
 1110              	.LBB64:
 1111              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 1112              		.loc 1 97 10 view .LVU251
 1113 0076 84ED098A 		vstr.32	s16, [r4, #36]	@ tmp238, MEM[(struct Contact *)&newArb].Pn
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 1114              		.loc 1 98 5 is_stmt 1 view .LVU252
 1115              	@ src/b2d_lite.c:98:     c->Pt=0.0f;
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 1116              		.loc 1 98 10 is_stmt 0 view .LVU253
 1117 007a 84ED0A8A 		vstr.32	s16, [r4, #40]	@ tmp238, MEM[(struct Contact *)&newArb].Pt
  99:src/b2d_lite.c **** }
 1118              		.loc 1 99 5 is_stmt 1 view .LVU254
 1119              	@ src/b2d_lite.c:99:     c->Pnb=0.0f;
  99:src/b2d_lite.c **** }
 1120              		.loc 1 99 11 is_stmt 0 view .LVU255
 1121 007e 84ED0B8A 		vstr.32	s16, [r4, #44]	@ tmp238, MEM[(struct Contact *)&newArb].Pnb
 1122              	.LVL41:
  99:src/b2d_lite.c **** }
 1123              		.loc 1 99 11 view .LVU256
 1124              	.LBE64:
 1125              	.LBE76:
 185:src/b2d_lite.c ****             initContact(&newArb.contacts[1]);
 1126              		.loc 1 185 13 is_stmt 1 view .LVU257
 1127              	.LBB77:
 1128              	.LBI77:
  95:src/b2d_lite.c **** {
 1129              		.loc 1 95 6 view .LVU258
 1130              	.LBB78:
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 1131              		.loc 1 97 5 view .LVU259
 1132              	@ src/b2d_lite.c:97:     c->Pn=0.0f;
  97:src/b2d_lite.c ****     c->Pt=0.0f;
 1133              		.loc 1 97 10 is_stmt 0 view .LVU260
 1134 0082 84ED198A 		vstr.32	s16, [r4, #100]	@ tmp238, MEM[(struct Contact *)&newArb + 64B].Pn
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 1135              		.loc 1 98 5 is_stmt 1 view .LVU261
 1136              	@ src/b2d_lite.c:98:     c->Pt=0.0f;
  98:src/b2d_lite.c ****     c->Pnb=0.0f;
 1137              		.loc 1 98 10 is_stmt 0 view .LVU262
 1138 0086 84ED1A8A 		vstr.32	s16, [r4, #104]	@ tmp238, MEM[(struct Contact *)&newArb + 64B].Pt
  99:src/b2d_lite.c **** }
 1139              		.loc 1 99 5 is_stmt 1 view .LVU263
 1140              	@ src/b2d_lite.c:99:     c->Pnb=0.0f;
ARM GAS  /tmp/ccPfsSwR.s 			page 27


  99:src/b2d_lite.c **** }
 1141              		.loc 1 99 11 is_stmt 0 view .LVU264
 1142 008a 84ED1B8A 		vstr.32	s16, [r4, #108]	@ tmp238, MEM[(struct Contact *)&newArb + 64B].Pnb
 1143              	.LVL42:
  99:src/b2d_lite.c **** }
 1144              		.loc 1 99 11 view .LVU265
 1145              	.LBE78:
 1146              	.LBE77:
 1147              		.loc 1 187 13 is_stmt 1 view .LVU266
 1148              	@ src/b2d_lite.c:187:             newArb.numContacts = Collide(newArb.contacts, newArb.body1, newAr
 1149              		.loc 1 187 34 is_stmt 0 view .LVU267
 1150 008e FFF7FEFF 		bl	Collide		@
 1151              	.LVL43:
 1152              	@ src/b2d_lite.c:188:             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->fr
 188:src/b2d_lite.c ****             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->friction);
 1153              		.loc 1 188 74 view .LVU268
 1154 0092 D4E92121 		ldrd	r2, r1, [r4, #132]	@ newArb.body1, newArb.body2, tmp233,
 1155              	@ src/b2d_lite.c:188:             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->fr
 1156              		.loc 1 188 31 view .LVU269
 1157 0096 92ED0B0A 		vldr.32	s0, [r2, #44]	@ _6->friction, _6->friction
 1158 009a D1ED0B7A 		vldr.32	s15, [r1, #44]	@ _8->friction, _8->friction
 1159              	@ src/b2d_lite.c:187:             newArb.numContacts = Collide(newArb.contacts, newArb.body1, newAr
 187:src/b2d_lite.c ****             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->friction);
 1160              		.loc 1 187 32 view .LVU270
 1161 009e C4F88000 		str	r0, [r4, #128]	@ _5, newArb.numContacts
 1162              		.loc 1 188 13 is_stmt 1 view .LVU271
 1163              	@ src/b2d_lite.c:188:             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->fr
 1164              		.loc 1 188 31 is_stmt 0 view .LVU272
 1165 00a2 20EE270A 		vmul.f32	s0, s0, s15	@ _10, _6->friction, _8->friction
 1166 00a6 B5EE400A 		vcmp.f32	s0, #0	@ _10
 1167 00aa F1EEC08A 		vsqrt.f32	s17, s0	@ _11, _10
 1168 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1169 00b2 54D4     		bmi	.L78		@,
 1170              	.L60:
 1171              	@ src/b2d_lite.c:190:             if (newArb.numContacts > 0)
 189:src/b2d_lite.c ****             
 190:src/b2d_lite.c ****             if (newArb.numContacts > 0)
 1172              		.loc 1 190 16 view .LVU273
 1173 00b4 0028     		cmp	r0, #0	@ _5,
 1174              	@ src/b2d_lite.c:188:             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->fr
 188:src/b2d_lite.c ****             
 1175              		.loc 1 188 29 view .LVU274
 1176 00b6 C4ED238A 		vstr.32	s17, [r4, #140]	@ _11, newArb.friction
 1177              		.loc 1 190 13 is_stmt 1 view .LVU275
 1178              	@ src/b2d_lite.c:190:             if (newArb.numContacts > 0)
 1179              		.loc 1 190 16 is_stmt 0 view .LVU276
 1180 00ba 2EDD     		ble	.L61		@,
 1181              	.LVL44:
 1182              	.LBB79:
 1183              	.LBB70:
 1184              	.LBB68:
  55:src/b2d_lite.c ****     {    
 1185              		.loc 1 55 19 is_stmt 1 view .LVU277
 1186              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 1187              		.loc 1 55 20 is_stmt 0 view .LVU278
 1188 00bc 2D4B     		ldr	r3, .L80+12	@ tmp232,
ARM GAS  /tmp/ccPfsSwR.s 			page 28


 1189 00be 1E68     		ldr	r6, [r3]	@ g_numArbiters.0_72, g_numArbiters
 1190              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 1191              		.loc 1 55 5 view .LVU279
 1192 00c0 002E     		cmp	r6, #0	@ g_numArbiters.0_72,
 1193 00c2 32DD     		ble	.L79		@,
 1194              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 1195              		.loc 1 55 14 view .LVU280
 1196 00c4 0021     		movs	r1, #0	@ i,
 1197 00c6 2C4F     		ldr	r7, .L80+16	@ tmp231,
 1198 00c8 02E0     		b	.L65		@
 1199              	.LVL45:
 1200              	.L63:
 1201              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 1202              		.loc 1 55 37 view .LVU281
 1203 00ca 0131     		adds	r1, r1, #1	@ i, i,
 1204              	.LVL46:
  55:src/b2d_lite.c ****     {    
 1205              		.loc 1 55 19 is_stmt 1 view .LVU282
 1206              	@ src/b2d_lite.c:55:     for (int i=0; i<g_numArbiters; i++)
  55:src/b2d_lite.c ****     {    
 1207              		.loc 1 55 5 is_stmt 0 view .LVU283
 1208 00cc B142     		cmp	r1, r6	@ i, g_numArbiters.0_72
 1209 00ce 2DD0     		beq	.L62		@,
 1210              	.LVL47:
 1211              	.L65:
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 1212              		.loc 1 57 9 is_stmt 1 view .LVU284
  55:src/b2d_lite.c ****     {    
 1213              		.loc 1 55 36 view .LVU285
 1214              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 1215              		.loc 1 57 12 is_stmt 0 view .LVU286
 1216 00d0 57F83120 		ldr	r2, [r7, r1, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _74, step: 8, offset: 0B], MEM[symbol
 1217              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 1218              		.loc 1 57 29 view .LVU287
 1219 00d4 4FEAC10C 		lsl	ip, r1, #3	@ tmp189, i,
 1220              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 1221              		.loc 1 57 12 view .LVU288
 1222 00d8 9542     		cmp	r5, r2	@ key$body1, MEM[symbol: g_arbiterKeys, index: _74, step: 8, offset: 0B]
 1223 00da F6D1     		bne	.L63		@,
 1224              	@ src/b2d_lite.c:57:         if (g_arbiterKeys[i].body1 == key.body1 && 
  57:src/b2d_lite.c ****             g_arbiterKeys[i].body2 == key.body2)
 1225              		.loc 1 57 49 view .LVU289
 1226 00dc 5BF83120 		ldr	r2, [fp, r1, lsl #3]	@ MEM[symbol: g_arbiterKeys, index: _74, step: 8, offset: 4B], MEM[symbol
 1227 00e0 9045     		cmp	r8, r2	@ key$body2, MEM[symbol: g_arbiterKeys, index: _74, step: 8, offset: 4B]
 1228 00e2 F2D1     		bne	.L63		@,
  59:src/b2d_lite.c ****     }
 1229              		.loc 1 59 12 is_stmt 1 view .LVU290
 1230              	.LVL48:
  59:src/b2d_lite.c ****     }
 1231              		.loc 1 59 12 is_stmt 0 view .LVU291
 1232              	.LBE68:
ARM GAS  /tmp/ccPfsSwR.s 			page 29


 1233              	.LBE70:
 191:src/b2d_lite.c ****             {
 192:src/b2d_lite.c ****                 struct Arbiter *a = findArbiter(key);
 193:src/b2d_lite.c ****                 if (a == NULL)
 1234              		.loc 1 193 17 is_stmt 1 view .LVU292
 194:src/b2d_lite.c ****                 {
 195:src/b2d_lite.c ****                     insertArbiter(key, newArb);
 196:src/b2d_lite.c ****                 }
 197:src/b2d_lite.c ****                 else
 198:src/b2d_lite.c ****                 {
 199:src/b2d_lite.c ****                     UpdateArbiter(a, newArb.contacts, newArb.numContacts);
 1235              		.loc 1 199 21 view .LVU293
 1236              	.LBB71:
 1237              	.LBB69:
 1238              	@ src/b2d_lite.c:59:            return &g_arbiters[i];
  59:src/b2d_lite.c ****     }
 1239              		.loc 1 59 19 is_stmt 0 view .LVU294
 1240 00e4 8C44     		add	ip, ip, r1	@ tmp200, i
 1241 00e6 254D     		ldr	r5, .L80+20	@ tmp203,
 1242              	.LVL49:
  59:src/b2d_lite.c ****     }
 1243              		.loc 1 59 19 view .LVU295
 1244              	.LBE69:
 1245              	.LBE71:
 1246              	@ src/b2d_lite.c:199:                     UpdateArbiter(a, newArb.contacts, newArb.numContacts);
 1247              		.loc 1 199 21 view .LVU296
 1248 00e8 0246     		mov	r2, r0	@, _5
 1249 00ea 2146     		mov	r1, r4	@, tmp233
 1250              	.LVL50:
 1251              		.loc 1 199 21 view .LVU297
 1252 00ec 05EB0C10 		add	r0, r5, ip, lsl #4	@, tmp203, tmp200,
 1253 00f0 FFF7FEFF 		bl	UpdateArbiter		@
 1254              	.LVL51:
 1255              	.L64:
 1256              		.loc 1 199 21 view .LVU298
 1257              	.LBE79:
 164:src/b2d_lite.c **** 
 1258              		.loc 1 164 17 is_stmt 1 view .LVU299
 164:src/b2d_lite.c **** 
 1259              		.loc 1 164 17 is_stmt 0 view .LVU300
 1260              	.LBE81:
 159:src/b2d_lite.c ****         {
 1261              		.loc 1 159 42 is_stmt 1 view .LVU301
 1262              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 159:src/b2d_lite.c ****         {
 1263              		.loc 1 159 27 is_stmt 0 view .LVU302
 1264 00f4 1C4B     		ldr	r3, .L80	@ tmp273,
 1265              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 159:src/b2d_lite.c ****         {
 1266              		.loc 1 159 43 view .LVU303
 1267 00f6 0AF1010A 		add	r10, r10, #1	@ j, j,
 1268              	.LVL52:
 159:src/b2d_lite.c ****         {
 1269              		.loc 1 159 25 is_stmt 1 view .LVU304
 1270              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 159:src/b2d_lite.c ****         {
 1271              		.loc 1 159 27 is_stmt 0 view .LVU305
ARM GAS  /tmp/ccPfsSwR.s 			page 30


 1272 00fa 1A68     		ldr	r2, [r3]	@ g_numBodies.14_13, g_numBodies
 1273              	@ src/b2d_lite.c:159:         for (int j=i+1; j < g_numBodies; j++)
 159:src/b2d_lite.c ****         {
 1274              		.loc 1 159 9 view .LVU306
 1275 00fc 5245     		cmp	r2, r10	@ g_numBodies.14_13, j
 1276 00fe 9CDC     		bgt	.L56		@,
 1277 0100 1346     		mov	r3, r2	@ g_numBodies.14_13, g_numBodies.14_13
 1278              	.LVL53:
 159:src/b2d_lite.c ****         {
 1279              		.loc 1 159 9 view .LVU307
 1280              	.LBE86:
 1281              	.LBE88:
 155:src/b2d_lite.c ****     {
 1282              		.loc 1 155 19 is_stmt 1 view .LVU308
 1283              	@ src/b2d_lite.c:155:     for (int i=0; i< g_numBodies; i++)
 155:src/b2d_lite.c ****     {
 1284              		.loc 1 155 5 is_stmt 0 view .LVU309
 1285 0102 029A     		ldr	r2, [sp, #8]	@ i, %sfp
 1286 0104 9342     		cmp	r3, r2	@ g_numBodies.14_13, i
 1287 0106 8DDC     		bgt	.L66		@,
 1288              	.LVL54:
 1289              	.L52:
 155:src/b2d_lite.c ****     {
 1290              		.loc 1 155 5 view .LVU310
 1291              	.LBE90:
 1292              	@ src/b2d_lite.c:208: }
 200:src/b2d_lite.c ****                 }
 201:src/b2d_lite.c ****             }
 202:src/b2d_lite.c ****             else
 203:src/b2d_lite.c ****             {
 204:src/b2d_lite.c ****                 eraseArbiter(key);
 205:src/b2d_lite.c ****             }
 206:src/b2d_lite.c ****         }
 207:src/b2d_lite.c ****     }      
 208:src/b2d_lite.c **** }
 1293              		.loc 1 208 1 view .LVU311
 1294 0108 4FB0     		add	sp, sp, #316	@,,
 1295              	.LCFI23:
 1296              		.cfi_remember_state
 1297              		.cfi_def_cfa_offset 44
 1298              		@ sp needed	@
 1299 010a BDEC028B 		vldm	sp!, {d8}	@
 1300              	.LCFI24:
 1301              		.cfi_restore 80
 1302              		.cfi_restore 81
 1303              		.cfi_def_cfa_offset 36
 1304 010e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 1305              	.LVL55:
 1306              	.L58:
 1307              	.LCFI25:
 1308              		.cfi_restore_state
 1309              	.LBB91:
 1310              	.LBB89:
 1311              	.LBB87:
 1312              	.LBB82:
 178:src/b2d_lite.c ****                 newArb.body2=bi;
 1313              		.loc 1 178 17 is_stmt 1 view .LVU312
ARM GAS  /tmp/ccPfsSwR.s 			page 31


 1314              	@ src/b2d_lite.c:179:                 newArb.body2=bi;
 179:src/b2d_lite.c ****                 key.body1=bj;
 1315              		.loc 1 179 29 is_stmt 0 view .LVU313
 1316 0112 C846     		mov	r8, r9	@ key$body2, bi
 1317 0114 C4E92159 		strd	r5, r9, [r4, #132]	@ key$body1, bi, tmp233,
 180:src/b2d_lite.c ****                 key.body2=bi;
 1318              		.loc 1 180 17 is_stmt 1 view .LVU314
 1319              	.LVL56:
 181:src/b2d_lite.c ****             }
 1320              		.loc 1 181 17 view .LVU315
 181:src/b2d_lite.c ****             }
 1321              		.loc 1 181 17 is_stmt 0 view .LVU316
 1322 0118 AAE7     		b	.L59		@
 1323              	.LVL57:
 1324              	.L61:
 204:src/b2d_lite.c ****             }
 1325              		.loc 1 204 17 is_stmt 1 view .LVU317
 1326 011a 04AA     		add	r2, sp, #16	@ tmp205,,
 1327 011c CDE90458 		strd	r5, r8, [sp, #16]	@ key$body1, key$body2,,
 1328 0120 92E80300 		ldm	r2, {r0, r1}	@ tmp205,,
 1329 0124 FFF7FEFF 		bl	eraseArbiter		@
 1330              	.LVL58:
 1331 0128 E4E7     		b	.L64		@
 1332              	.LVL59:
 1333              	.L79:
 204:src/b2d_lite.c ****             }
 1334              		.loc 1 204 17 is_stmt 0 view .LVU318
 1335 012a 134F     		ldr	r7, .L80+16	@ tmp231,
 1336              	.LVL60:
 1337              	.L62:
 1338              	.LBB80:
 193:src/b2d_lite.c ****                 {
 1339              		.loc 1 193 17 is_stmt 1 view .LVU319
 195:src/b2d_lite.c ****                 }
 1340              		.loc 1 195 21 view .LVU320
 195:src/b2d_lite.c ****                 }
 1341              		.loc 1 195 21 is_stmt 0 view .LVU321
 1342 012c 2146     		mov	r1, r4	@, tmp233
 1343 012e 9022     		movs	r2, #144	@,
 1344 0130 2AA8     		add	r0, sp, #168	@ tmp276,,
 1345              	.LBB72:
 1346              	.LBB73:
 1347              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 1348              		.loc 1 73 33 view .LVU322
 1349 0132 07EBC604 		add	r4, r7, r6, lsl #3	@ _22, tmp231, g_numArbiters.0_72,
 1350 0136 FFF7FEFF 		bl	memcpy		@
 1351              	.LVL61:
 1352              	.LBE73:
 1353              	.LBI72:
  65:src/b2d_lite.c **** {
 1354              		.loc 1 65 6 is_stmt 1 view .LVU323
 1355              	.LBB74:
  67:src/b2d_lite.c ****     {
 1356              		.loc 1 67 5 view .LVU324
  71:src/b2d_lite.c ****     
 1357              		.loc 1 71 5 view .LVU325
ARM GAS  /tmp/ccPfsSwR.s 			page 32


  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 1358              		.loc 1 73 5 view .LVU326
 1359              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  74:src/b2d_lite.c ****     g_numArbiters++;
 1360              		.loc 1 74 30 is_stmt 0 view .LVU327
 1361 013a 1048     		ldr	r0, .L80+20	@ tmp218,
 1362 013c 06EBC60C 		add	ip, r6, r6, lsl #3	@ tmp221, g_numArbiters.0_72, g_numArbiters.0_72,
 1363              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 1364              		.loc 1 73 33 view .LVU328
 1365 0140 47F83650 		str	r5, [r7, r6, lsl #3]	@ key$body1, MEM[(struct ArbiterKey *)_22]
 1366              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  74:src/b2d_lite.c ****     g_numArbiters++;
 1367              		.loc 1 74 30 view .LVU329
 1368 0144 2AA9     		add	r1, sp, #168	@ tmp277,,
 1369 0146 9022     		movs	r2, #144	@,
 1370 0148 00EB0C10 		add	r0, r0, ip, lsl #4	@, tmp218, tmp221,
 1371              	@ src/b2d_lite.c:73:     g_arbiterKeys[g_numArbiters]=key;
  73:src/b2d_lite.c ****     g_arbiters[g_numArbiters]=value;
 1372              		.loc 1 73 33 view .LVU330
 1373 014c C4F80480 		str	r8, [r4, #4]	@ key$body2, MEM[(struct ArbiterKey *)_22 + 4B]
  74:src/b2d_lite.c ****     g_numArbiters++;
 1374              		.loc 1 74 5 is_stmt 1 view .LVU331
 1375              	@ src/b2d_lite.c:74:     g_arbiters[g_numArbiters]=value;
  74:src/b2d_lite.c ****     g_numArbiters++;
 1376              		.loc 1 74 30 is_stmt 0 view .LVU332
 1377 0150 FFF7FEFF 		bl	memcpy		@
 1378              	.LVL62:
  75:src/b2d_lite.c **** }
 1379              		.loc 1 75 5 is_stmt 1 view .LVU333
 1380              	@ src/b2d_lite.c:75:     g_numArbiters++;
  75:src/b2d_lite.c **** }
 1381              		.loc 1 75 18 is_stmt 0 view .LVU334
 1382 0154 0136     		adds	r6, r6, #1	@ tmp229, g_numArbiters.0_72,
 1383 0156 074B     		ldr	r3, .L80+12	@ tmp232,
 1384 0158 1E60     		str	r6, [r3]	@ tmp229, g_numArbiters
 1385              	.LVL63:
  75:src/b2d_lite.c **** }
 1386              		.loc 1 75 18 view .LVU335
 1387              	.LBE74:
 1388              	.LBE72:
 1389 015a CBE7     		b	.L64		@
 1390              	.LVL64:
 1391              	.L75:
 1392              	.LCFI26:
 1393              		.cfi_def_cfa_offset 0
 1394              		.cfi_restore 4
 1395              		.cfi_restore 5
 1396              		.cfi_restore 6
 1397              		.cfi_restore 7
 1398              		.cfi_restore 8
 1399              		.cfi_restore 9
 1400              		.cfi_restore 10
 1401              		.cfi_restore 11
 1402              		.cfi_restore 14
 1403              		.cfi_restore 80
 1404              		.cfi_restore 81
ARM GAS  /tmp/ccPfsSwR.s 			page 33


  75:src/b2d_lite.c **** }
 1405              		.loc 1 75 18 view .LVU336
 1406 015c 7047     		bx	lr	@
 1407              	.LVL65:
 1408              	.L78:
 1409              	.LCFI27:
 1410              		.cfi_def_cfa_offset 360
 1411              		.cfi_offset 4, -36
 1412              		.cfi_offset 5, -32
 1413              		.cfi_offset 6, -28
 1414              		.cfi_offset 7, -24
 1415              		.cfi_offset 8, -20
 1416              		.cfi_offset 9, -16
 1417              		.cfi_offset 10, -12
 1418              		.cfi_offset 11, -8
 1419              		.cfi_offset 14, -4
 1420              		.cfi_offset 80, -44
 1421              		.cfi_offset 81, -40
  75:src/b2d_lite.c **** }
 1422              		.loc 1 75 18 view .LVU337
 1423              	.LBE80:
 1424              	@ src/b2d_lite.c:188:             newArb.friction = sqrtf(newArb.body1->friction * newArb.body2->fr
 188:src/b2d_lite.c ****             
 1425              		.loc 1 188 31 view .LVU338
 1426 015e FFF7FEFF 		bl	sqrtf		@
 1427              	.LVL66:
 1428 0162 D4F88000 		ldr	r0, [r4, #128]	@ _5, newArb.numContacts
 1429 0166 A5E7     		b	.L60		@
 1430              	.L81:
 1431              		.align	2
 1432              	.L80:
 1433 0168 00000000 		.word	g_numBodies
 1434 016c 00000000 		.word	g_bodies
 1435 0170 00000000 		.word	0
 1436 0174 00000000 		.word	g_numArbiters
 1437 0178 00000000 		.word	g_arbiterKeys
 1438 017c 00000000 		.word	g_arbiters
 1439 0180 04000000 		.word	g_arbiterKeys+4
 1440              	.LBE82:
 1441              	.LBE87:
 1442              	.LBE89:
 1443              	.LBE91:
 1444              		.cfi_endproc
 1445              	.LFE8:
 1446              		.size	BroadPhase, .-BroadPhase
 1447              		.section	.text.PreStep,"ax",%progbits
 1448              		.align	1
 1449              		.p2align 4,,15
 1450              		.global	PreStep
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1454              		.fpu fpv5-sp-d16
 1455              		.type	PreStep, %function
 1456              	PreStep:
 1457              	.LVL67:
 1458              	.LFB9:
ARM GAS  /tmp/ccPfsSwR.s 			page 34


 209:src/b2d_lite.c **** 
 210:src/b2d_lite.c **** void PreStep(struct Arbiter *a, float inv_dt)
 211:src/b2d_lite.c **** {
 1459              		.loc 1 211 1 is_stmt 1 view -0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 64
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 212:src/b2d_lite.c **** 	const float k_allowedPenetration = 0.01f;
 1463              		.loc 1 212 2 view .LVU340
 213:src/b2d_lite.c **** 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 1464              		.loc 1 213 2 view .LVU341
 1465              	@ src/b2d_lite.c:213: 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 1466              		.loc 1 213 42 is_stmt 0 view .LVU342
 1467 0000 C44B     		ldr	r3, .L94	@ tmp189,
 1468              	@ src/b2d_lite.c:213: 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 1469              		.loc 1 213 49 view .LVU343
 1470 0002 1B68     		ldr	r3, [r3]	@ positionCorrection, positionCorrection
 1471              	@ src/b2d_lite.c:211: {
 211:src/b2d_lite.c **** 	const float k_allowedPenetration = 0.01f;
 1472              		.loc 1 211 1 view .LVU344
 1473 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 1474              	.LCFI28:
 1475              		.cfi_def_cfa_offset 24
 1476              		.cfi_offset 4, -24
 1477              		.cfi_offset 5, -20
 1478              		.cfi_offset 6, -16
 1479              		.cfi_offset 7, -12
 1480              		.cfi_offset 8, -8
 1481              		.cfi_offset 14, -4
 1482              	@ src/b2d_lite.c:213: 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 1483              		.loc 1 213 49 view .LVU345
 1484 0008 002B     		cmp	r3, #0	@ positionCorrection,
 1485              	.LBB92:
 1486              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 214:src/b2d_lite.c **** 
 215:src/b2d_lite.c **** 	for (int i = 0; i < a->numContacts; ++i)
 1487              		.loc 1 215 2 view .LVU346
 1488 000a D0F88030 		ldr	r3, [r0, #128]	@ a_72(D)->numContacts, a_72(D)->numContacts
 1489              	.LBE92:
 1490              	@ src/b2d_lite.c:211: {
 211:src/b2d_lite.c **** 	const float k_allowedPenetration = 0.01f;
 1491              		.loc 1 211 1 view .LVU347
 1492 000e 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}	@
 1493              	.LCFI29:
 1494              		.cfi_def_cfa_offset 64
 1495              		.cfi_offset 80, -64
 1496              		.cfi_offset 81, -60
 1497              		.cfi_offset 82, -56
 1498              		.cfi_offset 83, -52
 1499              		.cfi_offset 84, -48
 1500              		.cfi_offset 85, -44
 1501              		.cfi_offset 86, -40
 1502              		.cfi_offset 87, -36
 1503              		.cfi_offset 88, -32
 1504              		.cfi_offset 89, -28
 1505              	@ src/b2d_lite.c:213: 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 213:src/b2d_lite.c **** 
ARM GAS  /tmp/ccPfsSwR.s 			page 35


 1506              		.loc 1 213 49 view .LVU348
 1507 0012 DFEDC19A 		vldr.32	s19, .L94+4	@ tmp319,
 1508              	@ src/b2d_lite.c:211: {
 211:src/b2d_lite.c **** 	const float k_allowedPenetration = 0.01f;
 1509              		.loc 1 211 1 view .LVU349
 1510 0016 90B0     		sub	sp, sp, #64	@,,
 1511              	.LCFI30:
 1512              		.cfi_def_cfa_offset 128
 1513              	@ src/b2d_lite.c:213: 	float k_biasFactor = positionCorrection ? 0.2f : 0.0f;
 213:src/b2d_lite.c **** 
 1514              		.loc 1 213 49 view .LVU350
 1515 0018 9FEDC0AA 		vldr.32	s20, .L94+8	@ tmp320,
 1516 001c 4AFE299A 		vseleq.f32	s19, s20, s19	@, iftmp.16_68, tmp320, tmp319
 1517              	.LVL68:
 1518              		.loc 1 215 2 is_stmt 1 view .LVU351
 1519              	.LBB99:
 1520              		.loc 1 215 7 view .LVU352
 1521              		.loc 1 215 18 view .LVU353
 1522              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 1523              		.loc 1 215 2 is_stmt 0 view .LVU354
 1524 0020 002B     		cmp	r3, #0	@ a_72(D)->numContacts,
 1525 0022 40F37181 		ble	.L82		@,
 1526 0026 69EEC09A 		vnmul.f32	s19, s19, s0	@ _40, iftmp.16_68, inv_dt
 1527              	.LVL69:
 1528              		.loc 1 215 2 view .LVU355
 1529 002a 0546     		mov	r5, r0	@ a, tmp322
 1530              	.LBB93:
 1531              	@ src/b2d_lite.c:227: 		c->massNormal = 1.0f / kNormal;
 216:src/b2d_lite.c **** 	{
 217:src/b2d_lite.c **** 		struct Contact* c = a->contacts + i;
 218:src/b2d_lite.c **** 
 219:src/b2d_lite.c **** 		struct Vec2 r1 = diffVec2(c->position, a->body1->position);
 220:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 221:src/b2d_lite.c **** 
 222:src/b2d_lite.c **** 		// Precompute normal mass, tangent mass, and bias.
 223:src/b2d_lite.c **** 		float rn1 = Dot(r1, c->normal);
 224:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 225:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 226:src/b2d_lite.c **** 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (Dot(r2, r2) - rn2 * rn2
 227:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1532              		.loc 1 227 24 view .LVU356
 1533 002c B7EE009A 		vmov.f32	s18, #1.0e+0	@ tmp231,
 1534 0030 0446     		mov	r4, r0	@ ivtmp.135, a
 1535              	.LBE93:
 1536              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 215:src/b2d_lite.c **** 	{
 1537              		.loc 1 215 11 view .LVU357
 1538 0032 0026     		movs	r6, #0	@ i,
 1539 0034 BA4F     		ldr	r7, .L94+12	@ tmp315,
 1540              	.LBB96:
 1541              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 228:src/b2d_lite.c **** 
 229:src/b2d_lite.c **** 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 230:src/b2d_lite.c **** 		float rt1 = Dot(r1, tangent);
 231:src/b2d_lite.c **** 		float rt2 = Dot(r2, tangent);
 232:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 233:src/b2d_lite.c **** 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (Dot(r2, r2) - rt2 * rt
ARM GAS  /tmp/ccPfsSwR.s 			page 36


 234:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 235:src/b2d_lite.c **** 
 236:src/b2d_lite.c **** 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenetration);
 1542              		.loc 1 236 38 view .LVU358
 1543 0036 DFEDBBAA 		vldr.32	s21, .L94+16	@ tmp264,
 1544 003a 06E0     		b	.L86		@
 1545              	.LVL70:
 1546              	.L85:
 1547              		.loc 1 236 38 view .LVU359
 1548              	.LBE96:
 215:src/b2d_lite.c **** 	{
 1549              		.loc 1 215 38 is_stmt 1 discriminator 1 view .LVU360
 1550 003c 0136     		adds	r6, r6, #1	@ i, i,
 1551              	.LVL71:
 215:src/b2d_lite.c **** 	{
 1552              		.loc 1 215 18 discriminator 1 view .LVU361
 1553              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 215:src/b2d_lite.c **** 	{
 1554              		.loc 1 215 2 is_stmt 0 discriminator 1 view .LVU362
 1555 003e D5F88030 		ldr	r3, [r5, #128]	@ a_72(D)->numContacts, a_72(D)->numContacts
 1556 0042 4034     		adds	r4, r4, #64	@ ivtmp.135, ivtmp.135,
 1557              	.LVL72:
 215:src/b2d_lite.c **** 	{
 1558              		.loc 1 215 2 discriminator 1 view .LVU363
 1559 0044 B342     		cmp	r3, r6	@ a_72(D)->numContacts, i
 1560 0046 40F35F81 		ble	.L82		@,
 1561              	.LVL73:
 1562              	.L86:
 1563              	.LBB97:
 217:src/b2d_lite.c **** 
 1564              		.loc 1 217 3 is_stmt 1 view .LVU364
 219:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 1565              		.loc 1 219 3 view .LVU365
 1566              	@ src/b2d_lite.c:219: 		struct Vec2 r1 = diffVec2(c->position, a->body1->position);
 219:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 1567              		.loc 1 219 20 is_stmt 0 view .LVU366
 1568 004a D5F88430 		ldr	r3, [r5, #132]	@ a_72(D)->body1, a_72(D)->body1
 1569 004e 94ED000A 		vldr.32	s0, [r4]	@, c_73->position
 1570 0052 D4ED010A 		vldr.32	s1, [r4, #4]	@, c_73->position
 1571 0056 93ED001A 		vldr.32	s2, [r3]	@, _5->position
 1572 005a D3ED011A 		vldr.32	s3, [r3, #4]	@, _5->position
 1573 005e FFF7FEFF 		bl	diffVec2		@
 1574              	.LVL74:
 1575              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1576              		.loc 1 220 20 view .LVU367
 1577 0062 D5F88830 		ldr	r3, [r5, #136]	@ a_72(D)->body2, a_72(D)->body2
 1578              	@ src/b2d_lite.c:219: 		struct Vec2 r1 = diffVec2(c->position, a->body1->position);
 219:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 1579              		.loc 1 219 20 view .LVU368
 1580 0066 B0EE407A 		vmov.f32	s14, s0	@ tmp324,
 1581              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1582              		.loc 1 220 20 view .LVU369
 1583 006a 94ED000A 		vldr.32	s0, [r4]	@, c_73->position
 1584              	@ src/b2d_lite.c:219: 		struct Vec2 r1 = diffVec2(c->position, a->body1->position);
 219:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
ARM GAS  /tmp/ccPfsSwR.s 			page 37


 1585              		.loc 1 219 20 view .LVU370
 1586 006e F0EE607A 		vmov.f32	s15, s1	@ tmp325,
 1587              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1588              		.loc 1 220 20 view .LVU371
 1589 0072 D4ED010A 		vldr.32	s1, [r4, #4]	@, c_73->position
 1590 0076 93ED001A 		vldr.32	s2, [r3]	@, _6->position
 1591 007a D3ED011A 		vldr.32	s3, [r3, #4]	@, _6->position
 1592              	@ src/b2d_lite.c:219: 		struct Vec2 r1 = diffVec2(c->position, a->body1->position);
 219:src/b2d_lite.c **** 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 1593              		.loc 1 219 20 view .LVU372
 1594 007e 8DED007A 		vstr.32	s14, [sp]	@ tmp324, r1
 1595 0082 CDED017A 		vstr.32	s15, [sp, #4]	@ tmp325, r1
 220:src/b2d_lite.c **** 
 1596              		.loc 1 220 3 is_stmt 1 view .LVU373
 1597              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1598              		.loc 1 220 20 is_stmt 0 view .LVU374
 1599 0086 FFF7FEFF 		bl	diffVec2		@
 1600              	.LVL75:
 1601 008a B0EE407A 		vmov.f32	s14, s0	@ tmp326,
 1602              	@ src/b2d_lite.c:223: 		float rn1 = Dot(r1, c->normal);
 223:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 1603              		.loc 1 223 15 view .LVU375
 1604 008e 94ED021A 		vldr.32	s2, [r4, #8]	@, c_73->normal
 1605              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1606              		.loc 1 220 20 view .LVU376
 1607 0092 F0EE607A 		vmov.f32	s15, s1	@ tmp327,
 1608              	@ src/b2d_lite.c:223: 		float rn1 = Dot(r1, c->normal);
 223:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 1609              		.loc 1 223 15 view .LVU377
 1610 0096 D4ED031A 		vldr.32	s3, [r4, #12]	@, c_73->normal
 1611 009a DDED010A 		vldr.32	s1, [sp, #4]	@, r1
 1612 009e 9DED000A 		vldr.32	s0, [sp]	@, r1
 1613              	@ src/b2d_lite.c:220: 		struct Vec2 r2 = diffVec2(c->position, a->body2->position);
 220:src/b2d_lite.c **** 
 1614              		.loc 1 220 20 view .LVU378
 1615 00a2 8DED027A 		vstr.32	s14, [sp, #8]	@ tmp326, r2
 1616 00a6 CDED037A 		vstr.32	s15, [sp, #12]	@ tmp327, r2
 223:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 1617              		.loc 1 223 3 is_stmt 1 view .LVU379
 1618              	@ src/b2d_lite.c:223: 		float rn1 = Dot(r1, c->normal);
 223:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 1619              		.loc 1 223 15 is_stmt 0 view .LVU380
 1620 00aa FFF7FEFF 		bl	Dot		@
 1621              	.LVL76:
 1622              	@ src/b2d_lite.c:224: 		float rn2 = Dot(r2, c->normal);
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 1623              		.loc 1 224 15 view .LVU381
 1624 00ae 94ED021A 		vldr.32	s2, [r4, #8]	@, c_73->normal
 1625              	@ src/b2d_lite.c:223: 		float rn1 = Dot(r1, c->normal);
 223:src/b2d_lite.c **** 		float rn2 = Dot(r2, c->normal);
 1626              		.loc 1 223 15 view .LVU382
 1627 00b2 F0EE408A 		vmov.f32	s17, s0	@ tmp328,
 1628              	@ src/b2d_lite.c:224: 		float rn2 = Dot(r2, c->normal);
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
ARM GAS  /tmp/ccPfsSwR.s 			page 38


 1629              		.loc 1 224 15 view .LVU383
 1630 00b6 D4ED031A 		vldr.32	s3, [r4, #12]	@, c_73->normal
 1631 00ba DDED030A 		vldr.32	s1, [sp, #12]	@, r2
 1632              	.LVL77:
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 1633              		.loc 1 224 3 is_stmt 1 view .LVU384
 1634              	@ src/b2d_lite.c:224: 		float rn2 = Dot(r2, c->normal);
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 1635              		.loc 1 224 15 is_stmt 0 view .LVU385
 1636 00be 9DED020A 		vldr.32	s0, [sp, #8]	@, r2
 1637              	.LVL78:
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 1638              		.loc 1 224 15 view .LVU386
 1639 00c2 FFF7FEFF 		bl	Dot		@
 1640              	.LVL79:
 1641              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1642              		.loc 1 226 32 view .LVU387
 1643 00c6 9DED001A 		vldr.32	s2, [sp]	@ r1, r1
 1644 00ca DDED011A 		vldr.32	s3, [sp, #4]	@ r1, r1
 1645              	@ src/b2d_lite.c:224: 		float rn2 = Dot(r2, c->normal);
 224:src/b2d_lite.c **** 		float kNormal = a->body1->invMass + a->body2->invMass;
 1646              		.loc 1 224 15 view .LVU388
 1647 00ce B0EE40BA 		vmov.f32	s22, s0	@ rn2, tmp329
 1648              	.LVL80:
 225:src/b2d_lite.c **** 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (Dot(r2, r2) - rn2 * rn2
 1649              		.loc 1 225 3 is_stmt 1 view .LVU389
 1650              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1651              		.loc 1 226 32 is_stmt 0 view .LVU390
 1652 00d2 B0EE410A 		vmov.f32	s0, s2	@,
 1653              	.LVL81:
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1654              		.loc 1 226 32 view .LVU391
 1655 00d6 F0EE610A 		vmov.f32	s1, s3	@,
 1656              	@ src/b2d_lite.c:225: 		float kNormal = a->body1->invMass + a->body2->invMass;
 225:src/b2d_lite.c **** 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (Dot(r2, r2) - rn2 * rn2
 1657              		.loc 1 225 47 view .LVU392
 1658 00da D5E92132 		ldrd	r3, r2, [r5, #132]	@ _7, a_72(D)->body2, a,
 1659              	@ src/b2d_lite.c:225: 		float kNormal = a->body1->invMass + a->body2->invMass;
 225:src/b2d_lite.c **** 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (Dot(r2, r2) - rn2 * rn2
 1660              		.loc 1 225 9 view .LVU393
 1661 00de 92ED0D8A 		vldr.32	s16, [r2, #52]	@ _9->invMass, _9->invMass
 1662 00e2 D3ED0D7A 		vldr.32	s15, [r3, #52]	@ _7->invMass, _7->invMass
 1663              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1664              		.loc 1 226 22 view .LVU394
 1665 00e6 93ED0FCA 		vldr.32	s24, [r3, #60]	@ _11, _7->invI
 1666              	@ src/b2d_lite.c:225: 		float kNormal = a->body1->invMass + a->body2->invMass;
 225:src/b2d_lite.c **** 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (Dot(r2, r2) - rn2 * rn2
 1667              		.loc 1 225 9 view .LVU395
 1668 00ea 38EE278A 		vadd.f32	s16, s16, s15	@ kNormal, _9->invMass, _7->invMass
 1669              	.LVL82:
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1670              		.loc 1 226 3 is_stmt 1 view .LVU396
 1671              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
ARM GAS  /tmp/ccPfsSwR.s 			page 39


 1672              		.loc 1 226 32 is_stmt 0 view .LVU397
 1673 00ee FFF7FEFF 		bl	Dot		@
 1674              	.LVL83:
 1675              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1676              		.loc 1 226 44 view .LVU398
 1677 00f2 A8EEE80A 		vfms.f32	s0, s17, s17	@ tmp330, rn1, rn1
 1678              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1679              		.loc 1 226 77 view .LVU399
 1680 00f6 DDED031A 		vldr.32	s3, [sp, #12]	@ r2, r2
 1681 00fa 9DED021A 		vldr.32	s2, [sp, #8]	@ r2, r2
 1682              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1683              		.loc 1 226 67 view .LVU400
 1684 00fe D5F88830 		ldr	r3, [r5, #136]	@ a_72(D)->body2, a_72(D)->body2
 1685              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1686              		.loc 1 226 77 view .LVU401
 1687 0102 F0EE610A 		vmov.f32	s1, s3	@,
 1688              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1689              		.loc 1 226 67 view .LVU402
 1690 0106 D3ED0F8A 		vldr.32	s17, [r3, #60]	@ _17, _16->invI
 1691              	.LVL84:
 1692              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1693              		.loc 1 226 44 view .LVU403
 1694 010a F0EE40BA 		vmov.f32	s23, s0	@ _14, tmp330
 1695              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1696              		.loc 1 226 77 view .LVU404
 1697 010e B0EE410A 		vmov.f32	s0, s2	@,
 1698 0112 FFF7FEFF 		bl	Dot		@
 1699              	.LVL85:
 1700              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1701              		.loc 1 226 89 view .LVU405
 1702 0116 F0EE407A 		vmov.f32	s15, s0	@ tmp331, tmp331
 1703              	@ src/b2d_lite.c:229: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 229:src/b2d_lite.c **** 		float rt1 = Dot(r1, tangent);
 1704              		.loc 1 229 25 view .LVU406
 1705 011a D4ED030A 		vldr.32	s1, [r4, #12]	@, c_73->normal
 1706 011e B7EE001A 		vmov.f32	s2, #1.0e+0	@,
 1707 0122 94ED020A 		vldr.32	s0, [r4, #8]	@, c_73->normal
 1708              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1709              		.loc 1 226 89 view .LVU407
 1710 0126 EBEE4B7A 		vfms.f32	s15, s22, s22	@ tmp331, rn2, rn2
 1711              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1712              		.loc 1 226 74 view .LVU408
 1713 012a 68EEA78A 		vmul.f32	s17, s17, s15	@ tmp228, _17, _20
 1714              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1715              		.loc 1 226 57 view .LVU409
 1716 012e ECEE2B8A 		vfma.f32	s17, s24, s23	@ _83, _11, _14
ARM GAS  /tmp/ccPfsSwR.s 			page 40


 1717              	.LVL86:
 227:src/b2d_lite.c **** 
 1718              		.loc 1 227 3 is_stmt 1 view .LVU410
 1719              	@ src/b2d_lite.c:226: 		kNormal += a->body1->invI * (Dot(r1, r1) - rn1 * rn1) + a->body2->invI * (D
 226:src/b2d_lite.c **** 		c->massNormal = 1.0f / kNormal;
 1720              		.loc 1 226 11 is_stmt 0 view .LVU411
 1721 0132 38EE288A 		vadd.f32	s16, s16, s17	@ kNormal, kNormal, _83
 1722              	.LVL87:
 1723              	@ src/b2d_lite.c:227: 		c->massNormal = 1.0f / kNormal;
 227:src/b2d_lite.c **** 
 1724              		.loc 1 227 24 view .LVU412
 1725 0136 C9EE087A 		vdiv.f32	s15, s18, s16	@ tmp230, tmp231, kNormal
 1726              	@ src/b2d_lite.c:227: 		c->massNormal = 1.0f / kNormal;
 227:src/b2d_lite.c **** 
 1727              		.loc 1 227 17 view .LVU413
 1728 013a C4ED0C7A 		vstr.32	s15, [r4, #48]	@ tmp230, MEM[base: c_73, offset: 48B]
 229:src/b2d_lite.c **** 		float rt1 = Dot(r1, tangent);
 1729              		.loc 1 229 3 is_stmt 1 view .LVU414
 1730              	@ src/b2d_lite.c:229: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 229:src/b2d_lite.c **** 		float rt1 = Dot(r1, tangent);
 1731              		.loc 1 229 25 is_stmt 0 view .LVU415
 1732 013e FFF7FEFF 		bl	Crossvs		@
 1733              	.LVL88:
 1734 0142 B0EE401A 		vmov.f32	s2, s0	@ tmp332,
 1735 0146 F0EE601A 		vmov.f32	s3, s1	@ tmp333,
 1736              	@ src/b2d_lite.c:230: 		float rt1 = Dot(r1, tangent);
 230:src/b2d_lite.c **** 		float rt2 = Dot(r2, tangent);
 1737              		.loc 1 230 15 view .LVU416
 1738 014a 9DED000A 		vldr.32	s0, [sp]	@, r1
 1739 014e DDED010A 		vldr.32	s1, [sp, #4]	@, r1
 1740              	@ src/b2d_lite.c:229: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 229:src/b2d_lite.c **** 		float rt1 = Dot(r1, tangent);
 1741              		.loc 1 229 25 view .LVU417
 1742 0152 8DED041A 		vstr.32	s2, [sp, #16]	@ tmp234, tangent
 1743 0156 CDED051A 		vstr.32	s3, [sp, #20]	@ tmp235, tangent
 230:src/b2d_lite.c **** 		float rt2 = Dot(r2, tangent);
 1744              		.loc 1 230 3 is_stmt 1 view .LVU418
 1745              	@ src/b2d_lite.c:230: 		float rt1 = Dot(r1, tangent);
 230:src/b2d_lite.c **** 		float rt2 = Dot(r2, tangent);
 1746              		.loc 1 230 15 is_stmt 0 view .LVU419
 1747 015a FFF7FEFF 		bl	Dot		@
 1748              	.LVL89:
 1749              	@ src/b2d_lite.c:231: 		float rt2 = Dot(r2, tangent);
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 1750              		.loc 1 231 15 view .LVU420
 1751 015e 9DED041A 		vldr.32	s2, [sp, #16]	@, tangent
 1752              	@ src/b2d_lite.c:230: 		float rt1 = Dot(r1, tangent);
 230:src/b2d_lite.c **** 		float rt2 = Dot(r2, tangent);
 1753              		.loc 1 230 15 view .LVU421
 1754 0162 F0EE408A 		vmov.f32	s17, s0	@ tmp334,
 1755              	@ src/b2d_lite.c:231: 		float rt2 = Dot(r2, tangent);
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 1756              		.loc 1 231 15 view .LVU422
 1757 0166 DDED051A 		vldr.32	s3, [sp, #20]	@, tangent
 1758 016a DDED030A 		vldr.32	s1, [sp, #12]	@, r2
 1759              	.LVL90:
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
ARM GAS  /tmp/ccPfsSwR.s 			page 41


 1760              		.loc 1 231 3 is_stmt 1 view .LVU423
 1761              	@ src/b2d_lite.c:231: 		float rt2 = Dot(r2, tangent);
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 1762              		.loc 1 231 15 is_stmt 0 view .LVU424
 1763 016e 9DED020A 		vldr.32	s0, [sp, #8]	@, r2
 1764              	.LVL91:
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 1765              		.loc 1 231 15 view .LVU425
 1766 0172 FFF7FEFF 		bl	Dot		@
 1767              	.LVL92:
 1768              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1769              		.loc 1 233 33 view .LVU426
 1770 0176 9DED001A 		vldr.32	s2, [sp]	@ r1, r1
 1771 017a DDED011A 		vldr.32	s3, [sp, #4]	@ r1, r1
 1772              	@ src/b2d_lite.c:231: 		float rt2 = Dot(r2, tangent);
 231:src/b2d_lite.c **** 		float kTangent = a->body1->invMass + a->body2->invMass;
 1773              		.loc 1 231 15 view .LVU427
 1774 017e B0EE40BA 		vmov.f32	s22, s0	@ rt2, tmp335
 1775              	.LVL93:
 232:src/b2d_lite.c **** 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (Dot(r2, r2) - rt2 * rt
 1776              		.loc 1 232 3 is_stmt 1 view .LVU428
 1777              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1778              		.loc 1 233 33 is_stmt 0 view .LVU429
 1779 0182 B0EE410A 		vmov.f32	s0, s2	@,
 1780              	.LVL94:
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1781              		.loc 1 233 33 view .LVU430
 1782 0186 F0EE610A 		vmov.f32	s1, s3	@,
 1783              	@ src/b2d_lite.c:232: 		float kTangent = a->body1->invMass + a->body2->invMass;
 232:src/b2d_lite.c **** 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (Dot(r2, r2) - rt2 * rt
 1784              		.loc 1 232 48 view .LVU431
 1785 018a D5E92132 		ldrd	r3, r2, [r5, #132]	@ _23, a_72(D)->body2, a,
 1786              	@ src/b2d_lite.c:232: 		float kTangent = a->body1->invMass + a->body2->invMass;
 232:src/b2d_lite.c **** 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (Dot(r2, r2) - rt2 * rt
 1787              		.loc 1 232 9 view .LVU432
 1788 018e D3ED0D7A 		vldr.32	s15, [r3, #52]	@ _23->invMass, _23->invMass
 1789 0192 92ED0D8A 		vldr.32	s16, [r2, #52]	@ _25->invMass, _25->invMass
 1790              	.LVL95:
 1791              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1792              		.loc 1 233 23 view .LVU433
 1793 0196 93ED0FCA 		vldr.32	s24, [r3, #60]	@ _27, _23->invI
 1794              	@ src/b2d_lite.c:232: 		float kTangent = a->body1->invMass + a->body2->invMass;
 232:src/b2d_lite.c **** 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (Dot(r2, r2) - rt2 * rt
 1795              		.loc 1 232 9 view .LVU434
 1796 019a 38EE278A 		vadd.f32	s16, s16, s15	@ kTangent, _25->invMass, _23->invMass
 1797              	.LVL96:
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1798              		.loc 1 233 3 is_stmt 1 view .LVU435
 1799              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1800              		.loc 1 233 33 is_stmt 0 view .LVU436
 1801 019e FFF7FEFF 		bl	Dot		@
 1802              	.LVL97:
 1803              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
ARM GAS  /tmp/ccPfsSwR.s 			page 42


 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1804              		.loc 1 233 45 view .LVU437
 1805 01a2 A8EEE80A 		vfms.f32	s0, s17, s17	@ tmp336, rt1, rt1
 1806              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1807              		.loc 1 233 78 view .LVU438
 1808 01a6 9DED021A 		vldr.32	s2, [sp, #8]	@ r2, r2
 1809 01aa DDED031A 		vldr.32	s3, [sp, #12]	@ r2, r2
 1810              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1811              		.loc 1 233 68 view .LVU439
 1812 01ae D5F88830 		ldr	r3, [r5, #136]	@ a_72(D)->body2, a_72(D)->body2
 1813              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1814              		.loc 1 233 78 view .LVU440
 1815 01b2 F0EE610A 		vmov.f32	s1, s3	@,
 1816              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1817              		.loc 1 233 68 view .LVU441
 1818 01b6 D3ED0F8A 		vldr.32	s17, [r3, #60]	@ _33, _32->invI
 1819              	.LVL98:
 1820              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1821              		.loc 1 233 45 view .LVU442
 1822 01ba F0EE40BA 		vmov.f32	s23, s0	@ _30, tmp336
 1823              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1824              		.loc 1 233 78 view .LVU443
 1825 01be B0EE410A 		vmov.f32	s0, s2	@,
 1826 01c2 FFF7FEFF 		bl	Dot		@
 1827              	.LVL99:
 1828 01c6 F0EE407A 		vmov.f32	s15, s0	@ tmp337,
 1829              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 1830              		.loc 1 236 38 view .LVU444
 1831 01ca D4ED080A 		vldr.32	s1, [r4, #32]	@ MEM[base: c_73, offset: 32B], MEM[base: c_73, offset: 32B]
 1832 01ce B0EE4A0A 		vmov.f32	s0, s20	@, tmp321
 1833              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1834              		.loc 1 233 90 view .LVU445
 1835 01d2 EBEE4B7A 		vfms.f32	s15, s22, s22	@ _36, rt2, rt2
 1836              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 1837              		.loc 1 236 38 view .LVU446
 1838 01d6 70EEAA0A 		vadd.f32	s1, s1, s21	@, MEM[base: c_73, offset: 32B], tmp264
 1839              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1840              		.loc 1 233 75 view .LVU447
 1841 01da 68EEA78A 		vmul.f32	s17, s17, s15	@ tmp258, _33, _36
 1842              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1843              		.loc 1 233 58 view .LVU448
 1844 01de ECEE2B8A 		vfma.f32	s17, s24, s23	@ _94, _27, _30
 1845              	.LVL100:
 234:src/b2d_lite.c **** 
 1846              		.loc 1 234 3 is_stmt 1 view .LVU449
 1847              	@ src/b2d_lite.c:233: 		kTangent += a->body1->invI * (Dot(r1, r1) - rt1 * rt1) + a->body2->invI * (
 233:src/b2d_lite.c **** 		c->massTangent = 1.0f /  kTangent;
 1848              		.loc 1 233 12 is_stmt 0 view .LVU450
ARM GAS  /tmp/ccPfsSwR.s 			page 43


 1849 01e2 38EE288A 		vadd.f32	s16, s16, s17	@ kTangent, kTangent, _94
 1850              	.LVL101:
 1851              	@ src/b2d_lite.c:234: 		c->massTangent = 1.0f /  kTangent;
 234:src/b2d_lite.c **** 
 1852              		.loc 1 234 25 view .LVU451
 1853 01e6 C9EE087A 		vdiv.f32	s15, s18, s16	@ tmp260, tmp231, kTangent
 1854              	@ src/b2d_lite.c:234: 		c->massTangent = 1.0f /  kTangent;
 234:src/b2d_lite.c **** 
 1855              		.loc 1 234 18 view .LVU452
 1856 01ea C4ED0D7A 		vstr.32	s15, [r4, #52]	@ tmp260, MEM[base: c_73, offset: 52B]
 1857              		.loc 1 236 3 is_stmt 1 view .LVU453
 1858              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 1859              		.loc 1 236 38 is_stmt 0 view .LVU454
 1860 01ee FFF7FEFF 		bl	Min		@
 1861              	.LVL102:
 1862              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 1863              		.loc 1 236 36 view .LVU455
 1864 01f2 29EE800A 		vmul.f32	s0, s19, s0	@ tmp266, _40, tmp338
 1865              	@ src/b2d_lite.c:238: 		if (accumulateImpulses)
 237:src/b2d_lite.c **** 
 238:src/b2d_lite.c **** 		if (accumulateImpulses)
 1866              		.loc 1 238 6 view .LVU456
 1867 01f6 3B68     		ldr	r3, [r7]	@ accumulateImpulses, accumulateImpulses
 1868              	@ src/b2d_lite.c:236: 		c->bias = -k_biasFactor * inv_dt * Min(0.0f, c->separation + k_allowedPenet
 236:src/b2d_lite.c **** 
 1869              		.loc 1 236 11 view .LVU457
 1870 01f8 84ED0E0A 		vstr.32	s0, [r4, #56]	@ tmp266, MEM[base: c_73, offset: 56B]
 1871              		.loc 1 238 3 is_stmt 1 view .LVU458
 1872              	@ src/b2d_lite.c:238: 		if (accumulateImpulses)
 1873              		.loc 1 238 6 is_stmt 0 view .LVU459
 1874 01fc 002B     		cmp	r3, #0	@ accumulateImpulses
 1875 01fe 3FF41DAF 		beq	.L85	@
 1876              	.LBB94:
 239:src/b2d_lite.c **** 		{
 240:src/b2d_lite.c **** 			// Apply normal + friction impulse
 241:src/b2d_lite.c **** 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, tangent));
 1877              		.loc 1 241 4 is_stmt 1 view .LVU460
 1878              	@ src/b2d_lite.c:241: 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, ta
 1879              		.loc 1 241 20 is_stmt 0 view .LVU461
 1880 0202 D4ED020A 		vldr.32	s1, [r4, #8]	@, c_73->normal
 1881              	.LBE94:
 1882              	.LBE97:
 1883              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 215:src/b2d_lite.c **** 	{
 1884              		.loc 1 215 38 view .LVU462
 1885 0206 0136     		adds	r6, r6, #1	@ i, i,
 1886              	.LVL103:
 1887              	.LBB98:
 1888              	.LBB95:
 1889              	@ src/b2d_lite.c:241: 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, ta
 1890              		.loc 1 241 20 view .LVU463
 1891 0208 94ED090A 		vldr.32	s0, [r4, #36]	@, MEM[base: c_73, offset: 36B]
 1892 020c 4034     		adds	r4, r4, #64	@ ivtmp.135, ivtmp.135,
 1893              	.LVL104:
 1894              		.loc 1 241 20 view .LVU464
 1895 020e 14ED0D1A 		vldr.32	s2, [r4, #-52]	@, c_73->normal
 1896 0212 FFF7FEFF 		bl	scaledVec2		@
ARM GAS  /tmp/ccPfsSwR.s 			page 44


 1897              	.LVL105:
 1898 0216 B0EE407A 		vmov.f32	s14, s0	@ tmp339,
 1899 021a F0EE607A 		vmov.f32	s15, s1	@ tmp340,
 1900 021e 14ED060A 		vldr.32	s0, [r4, #-24]	@, MEM[base: c_73, offset: 40B]
 1901 0222 DDED040A 		vldr.32	s1, [sp, #16]	@, tangent
 1902 0226 9DED051A 		vldr.32	s2, [sp, #20]	@, tangent
 1903 022a 8DED087A 		vstr.32	s14, [sp, #32]	@ tmp339, D.7766
 1904 022e CDED097A 		vstr.32	s15, [sp, #36]	@ tmp340, D.7766
 1905 0232 FFF7FEFF 		bl	scaledVec2		@
 1906              	.LVL106:
 1907 0236 F0EE601A 		vmov.f32	s3, s1	@ tmp342,
 1908 023a DDED090A 		vldr.32	s1, [sp, #36]	@, D.7766
 1909 023e B0EE401A 		vmov.f32	s2, s0	@ tmp341,
 1910 0242 9DED080A 		vldr.32	s0, [sp, #32]	@, D.7766
 1911 0246 CDED0B1A 		vstr.32	s3, [sp, #44]	@ tmp278, D.7767
 1912 024a 8DED0A1A 		vstr.32	s2, [sp, #40]	@ tmp277, D.7767
 1913 024e FFF7FEFF 		bl	sumVec2		@
 1914              	.LVL107:
 1915              	@ src/b2d_lite.c:243: 			subfromVec2(&a->body1->velocity, scaledVec2(a->body1->invMass, P));
 242:src/b2d_lite.c **** 
 243:src/b2d_lite.c **** 			subfromVec2(&a->body1->velocity, scaledVec2(a->body1->invMass, P));
 1916              		.loc 1 243 18 view .LVU465
 1917 0252 D5F88480 		ldr	r8, [r5, #132]	@ _48, a_72(D)->body1
 1918              	@ src/b2d_lite.c:241: 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, ta
 241:src/b2d_lite.c **** 
 1919              		.loc 1 241 20 view .LVU466
 1920 0256 B0EE601A 		vmov.f32	s2, s1	@ tmp284, tmp344
 1921 025a F0EE400A 		vmov.f32	s1, s0	@ tmp283, tmp343
 1922              	@ src/b2d_lite.c:243: 			subfromVec2(&a->body1->velocity, scaledVec2(a->body1->invMass, P));
 1923              		.loc 1 243 4 view .LVU467
 1924 025e 98ED0D0A 		vldr.32	s0, [r8, #52]	@, _48->invMass
 1925              	@ src/b2d_lite.c:241: 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, ta
 241:src/b2d_lite.c **** 
 1926              		.loc 1 241 20 view .LVU468
 1927 0262 8DED071A 		vstr.32	s2, [sp, #28]	@ tmp284, P
 1928              		.loc 1 243 4 is_stmt 1 view .LVU469
 1929              	@ src/b2d_lite.c:241: 			struct Vec2 P = sumVec2(scaledVec2(c->Pn, c->normal), scaledVec2(c->Pt, ta
 241:src/b2d_lite.c **** 
 1930              		.loc 1 241 20 is_stmt 0 view .LVU470
 1931 0266 CDED060A 		vstr.32	s1, [sp, #24]	@ tmp283, P
 1932              	@ src/b2d_lite.c:243: 			subfromVec2(&a->body1->velocity, scaledVec2(a->body1->invMass, P));
 1933              		.loc 1 243 4 view .LVU471
 1934 026a FFF7FEFF 		bl	scaledVec2		@
 1935              	.LVL108:
 1936 026e 08F10C00 		add	r0, r8, #12	@, _48,
 1937 0272 8DED0C0A 		vstr.32	s0, [sp, #48]	@ tmp345, D.7768
 1938 0276 CDED0D0A 		vstr.32	s1, [sp, #52]	@ tmp346, D.7768
 1939 027a FFF7FEFF 		bl	subfromVec2		@
 1940              	.LVL109:
 244:src/b2d_lite.c **** 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1941              		.loc 1 244 4 is_stmt 1 view .LVU472
 1942              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1943              		.loc 1 244 41 is_stmt 0 view .LVU473
 1944 027e D5F88430 		ldr	r3, [r5, #132]	@ a_72(D)->body1, a_72(D)->body1
 1945              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1946              		.loc 1 244 50 view .LVU474
 1947 0282 DDED071A 		vldr.32	s3, [sp, #28]	@, P
ARM GAS  /tmp/ccPfsSwR.s 			page 45


 1948 0286 9DED061A 		vldr.32	s2, [sp, #24]	@, P
 1949 028a DDED010A 		vldr.32	s1, [sp, #4]	@, r1
 1950 028e 9DED000A 		vldr.32	s0, [sp]	@, r1
 1951              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1952              		.loc 1 244 41 view .LVU475
 1953 0292 93ED0F8A 		vldr.32	s16, [r3, #60]	@ _52, _51->invI
 1954              	.LVL110:
 1955              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1956              		.loc 1 244 50 view .LVU476
 1957 0296 FFF7FEFF 		bl	Crossvv		@
 1958              	.LVL111:
 1959              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1960              		.loc 1 244 5 view .LVU477
 1961 029a D5F88430 		ldr	r3, [r5, #132]	@ _54, a_72(D)->body1
 1962              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1963              		.loc 1 244 50 view .LVU478
 1964 029e B0EE407A 		vmov.f32	s14, s0	@ tmp347,
 1965              	@ src/b2d_lite.c:246: 			addtoVec2(&a->body2->velocity, scaledVec2(a->body2->invMass, P));
 245:src/b2d_lite.c **** 
 246:src/b2d_lite.c **** 			addtoVec2(&a->body2->velocity, scaledVec2(a->body2->invMass, P));
 1966              		.loc 1 246 16 view .LVU479
 1967 02a2 D5F88880 		ldr	r8, [r5, #136]	@ _57, a_72(D)->body2
 1968              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 244:src/b2d_lite.c **** 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1969              		.loc 1 244 30 view .LVU480
 1970 02a6 D3ED057A 		vldr.32	s15, [r3, #20]	@ _54->angularVelocity, _54->angularVelocity
 1971              	@ src/b2d_lite.c:246: 			addtoVec2(&a->body2->velocity, scaledVec2(a->body2->invMass, P));
 1972              		.loc 1 246 4 view .LVU481
 1973 02aa 98ED0D0A 		vldr.32	s0, [r8, #52]	@, _57->invMass
 1974              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 244:src/b2d_lite.c **** 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1975              		.loc 1 244 30 view .LVU482
 1976 02ae E8EE477A 		vfms.f32	s15, s16, s14	@ _56, _52, tmp347
 1977              	@ src/b2d_lite.c:246: 			addtoVec2(&a->body2->velocity, scaledVec2(a->body2->invMass, P));
 1978              		.loc 1 246 4 view .LVU483
 1979 02b2 DDED060A 		vldr.32	s1, [sp, #24]	@, P
 1980 02b6 9DED071A 		vldr.32	s2, [sp, #28]	@, P
 1981              	@ src/b2d_lite.c:244: 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 244:src/b2d_lite.c **** 			a->body1->angularVelocity -= a->body1->invI * Crossvv(r1, P);
 1982              		.loc 1 244 30 view .LVU484
 1983 02ba C3ED057A 		vstr.32	s15, [r3, #20]	@ _56, _54->angularVelocity
 1984              		.loc 1 246 4 is_stmt 1 view .LVU485
 1985 02be FFF7FEFF 		bl	scaledVec2		@
 1986              	.LVL112:
 1987 02c2 08F10C00 		add	r0, r8, #12	@, _57,
 1988 02c6 8DED0E0A 		vstr.32	s0, [sp, #56]	@ tmp348, D.7770
 1989 02ca CDED0F0A 		vstr.32	s1, [sp, #60]	@ tmp349, D.7770
 1990 02ce FFF7FEFF 		bl	addtoVec2		@
 1991              	.LVL113:
 247:src/b2d_lite.c **** 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 1992              		.loc 1 247 4 view .LVU486
 1993              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 1994              		.loc 1 247 41 is_stmt 0 view .LVU487
 1995 02d2 D5F88830 		ldr	r3, [r5, #136]	@ a_72(D)->body2, a_72(D)->body2
 1996              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 1997              		.loc 1 247 50 view .LVU488
 1998 02d6 9DED061A 		vldr.32	s2, [sp, #24]	@, P
ARM GAS  /tmp/ccPfsSwR.s 			page 46


 1999 02da DDED071A 		vldr.32	s3, [sp, #28]	@, P
 2000 02de 9DED020A 		vldr.32	s0, [sp, #8]	@, r2
 2001 02e2 DDED030A 		vldr.32	s1, [sp, #12]	@, r2
 2002              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 2003              		.loc 1 247 41 view .LVU489
 2004 02e6 93ED0F8A 		vldr.32	s16, [r3, #60]	@ _61, _60->invI
 2005              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 2006              		.loc 1 247 50 view .LVU490
 2007 02ea FFF7FEFF 		bl	Crossvv		@
 2008              	.LVL114:
 2009              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 2010              		.loc 1 247 5 view .LVU491
 2011 02ee D5F88830 		ldr	r3, [r5, #136]	@ _63, a_72(D)->body2
 2012              	@ src/b2d_lite.c:247: 			a->body2->angularVelocity += a->body2->invI * Crossvv(r2, P);
 2013              		.loc 1 247 30 view .LVU492
 2014 02f2 D3ED057A 		vldr.32	s15, [r3, #20]	@ _63->angularVelocity, _63->angularVelocity
 2015 02f6 E8EE007A 		vfma.f32	s15, s16, s0	@ _65, _61, tmp350
 2016 02fa C3ED057A 		vstr.32	s15, [r3, #20]	@ _65, _63->angularVelocity
 2017              	.LBE95:
 2018              	.LBE98:
 215:src/b2d_lite.c **** 	{
 2019              		.loc 1 215 38 is_stmt 1 view .LVU493
 2020              	.LVL115:
 215:src/b2d_lite.c **** 	{
 2021              		.loc 1 215 18 view .LVU494
 2022              	@ src/b2d_lite.c:215: 	for (int i = 0; i < a->numContacts; ++i)
 215:src/b2d_lite.c **** 	{
 2023              		.loc 1 215 2 is_stmt 0 view .LVU495
 2024 02fe D5F88030 		ldr	r3, [r5, #128]	@ a_72(D)->numContacts, a_72(D)->numContacts
 2025 0302 B342     		cmp	r3, r6	@ a_72(D)->numContacts, i
 2026 0304 3FF7A1AE 		bgt	.L86		@,
 2027              	.LVL116:
 2028              	.L82:
 215:src/b2d_lite.c **** 	{
 2029              		.loc 1 215 2 view .LVU496
 2030              	.LBE99:
 2031              	@ src/b2d_lite.c:250: }
 248:src/b2d_lite.c **** 		}
 249:src/b2d_lite.c **** 	}
 250:src/b2d_lite.c **** }
 2032              		.loc 1 250 1 view .LVU497
 2033 0308 10B0     		add	sp, sp, #64	@,,
 2034              	.LCFI31:
 2035              		.cfi_def_cfa_offset 64
 2036              		@ sp needed	@
 2037 030a BDEC0A8B 		vldm	sp!, {d8-d12}	@,
 2038              	.LCFI32:
 2039              		.cfi_restore 88
 2040              		.cfi_restore 89
 2041              		.cfi_restore 86
 2042              		.cfi_restore 87
 2043              		.cfi_restore 84
 2044              		.cfi_restore 85
 2045              		.cfi_restore 82
 2046              		.cfi_restore 83
 2047              		.cfi_restore 80
 2048              		.cfi_restore 81
ARM GAS  /tmp/ccPfsSwR.s 			page 47


 2049              		.cfi_def_cfa_offset 24
 2050 030e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 2051              	.L95:
 2052 0312 00BF     		.align	2
 2053              	.L94:
 2054 0314 00000000 		.word	.LANCHOR1
 2055 0318 CDCC4C3E 		.word	1045220557
 2056 031c 00000000 		.word	0
 2057 0320 00000000 		.word	.LANCHOR2
 2058 0324 0AD7233C 		.word	1008981770
 2059              		.cfi_endproc
 2060              	.LFE9:
 2061              		.size	PreStep, .-PreStep
 2062              		.section	.text.ApplyImpulse,"ax",%progbits
 2063              		.align	1
 2064              		.p2align 4,,15
 2065              		.global	ApplyImpulse
 2066              		.syntax unified
 2067              		.thumb
 2068              		.thumb_func
 2069              		.fpu fpv5-sp-d16
 2070              		.type	ApplyImpulse, %function
 2071              	ApplyImpulse:
 2072              	.LVL117:
 2073              	.LFB10:
 251:src/b2d_lite.c **** 
 252:src/b2d_lite.c **** void ApplyImpulse(struct Arbiter *a)
 253:src/b2d_lite.c **** {
 2074              		.loc 1 253 1 is_stmt 1 view -0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 128
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
 254:src/b2d_lite.c **** 	struct Body* b1 = a->body1;
 2078              		.loc 1 254 2 view .LVU499
 2079              	@ src/b2d_lite.c:253: {
 253:src/b2d_lite.c **** 	struct Body* b1 = a->body1;
 2080              		.loc 1 253 1 is_stmt 0 view .LVU500
 2081 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 2082              	.LCFI33:
 2083              		.cfi_def_cfa_offset 36
 2084              		.cfi_offset 4, -36
 2085              		.cfi_offset 5, -32
 2086              		.cfi_offset 6, -28
 2087              		.cfi_offset 7, -24
 2088              		.cfi_offset 8, -20
 2089              		.cfi_offset 9, -16
 2090              		.cfi_offset 10, -12
 2091              		.cfi_offset 11, -8
 2092              		.cfi_offset 14, -4
 2093              	@ src/b2d_lite.c:254: 	struct Body* b1 = a->body1;
 2094              		.loc 1 254 15 view .LVU501
 2095 0004 D0E92035 		ldrd	r3, r5, [r0, #128]	@ a_53(D)->numContacts, b1, a,
 2096              	.LVL118:
 255:src/b2d_lite.c **** 	struct Body* b2 = a->body2;
 2097              		.loc 1 255 2 is_stmt 1 view .LVU502
 2098              	@ src/b2d_lite.c:253: {
 253:src/b2d_lite.c **** 	struct Body* b1 = a->body1;
ARM GAS  /tmp/ccPfsSwR.s 			page 48


 2099              		.loc 1 253 1 is_stmt 0 view .LVU503
 2100 0008 2DED048B 		vpush.64	{d8, d9}	@
 2101              	.LCFI34:
 2102              		.cfi_def_cfa_offset 52
 2103              		.cfi_offset 80, -52
 2104              		.cfi_offset 81, -48
 2105              		.cfi_offset 82, -44
 2106              		.cfi_offset 83, -40
 2107              	.LBB100:
 2108              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 256:src/b2d_lite.c **** 
 257:src/b2d_lite.c **** 	for (int i = 0; i < a->numContacts; ++i)
 2109              		.loc 1 257 2 view .LVU504
 2110 000c 002B     		cmp	r3, #0	@ a_53(D)->numContacts,
 2111              	.LBE100:
 2112              	@ src/b2d_lite.c:253: {
 253:src/b2d_lite.c **** 	struct Body* b1 = a->body1;
 2113              		.loc 1 253 1 view .LVU505
 2114 000e A1B0     		sub	sp, sp, #132	@,,
 2115              	.LCFI35:
 2116              		.cfi_def_cfa_offset 184
 2117              	@ src/b2d_lite.c:255: 	struct Body* b2 = a->body2;
 255:src/b2d_lite.c **** 	struct Body* b2 = a->body2;
 2118              		.loc 1 255 15 view .LVU506
 2119 0010 D0F88860 		ldr	r6, [r0, #136]	@ b2, a_53(D)->body2
 2120              	.LVL119:
 2121              		.loc 1 257 2 is_stmt 1 view .LVU507
 2122              	.LBB110:
 2123              		.loc 1 257 7 view .LVU508
 2124              		.loc 1 257 18 view .LVU509
 2125              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 2126              		.loc 1 257 2 is_stmt 0 view .LVU510
 2127 0014 40F3BD81 		ble	.L96		@,
 2128 0018 8046     		mov	r8, r0	@ a, tmp331
 2129 001a 05F10C0B 		add	fp, r5, #12	@ pretmp_125, b1,
 2130 001e 06F10C0A 		add	r10, r6, #12	@ pretmp_127, b2,
 2131 0022 0446     		mov	r4, r0	@ ivtmp.143, a
 2132              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 2133              		.loc 1 257 11 view .LVU511
 2134 0024 0027     		movs	r7, #0	@ i,
 2135 0026 DFF87893 		ldr	r9, .L107+4	@ tmp328,
 2136              	.LBB101:
 2137              	@ src/b2d_lite.c:281: 			dPn = Max(dPn, 0.0f);
 258:src/b2d_lite.c **** 	{
 259:src/b2d_lite.c **** 		struct Contact* c = a->contacts + i;
 260:src/b2d_lite.c **** 		c->r1 = diffVec2(c->position, b1->position);
 261:src/b2d_lite.c **** 		c->r2 = diffVec2(c->position, b2->position);
 262:src/b2d_lite.c **** 
 263:src/b2d_lite.c **** 		// Relative velocity at contact
 264:src/b2d_lite.c **** 		struct Vec2 dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 265:src/b2d_lite.c ****                                   sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 266:src/b2d_lite.c **** 
 267:src/b2d_lite.c **** 		// Compute normal impulse
 268:src/b2d_lite.c **** 		float vn = Dot(dv, c->normal);
 269:src/b2d_lite.c **** 
 270:src/b2d_lite.c **** 		float dPn = c->massNormal * (-vn + c->bias);
 271:src/b2d_lite.c **** 
ARM GAS  /tmp/ccPfsSwR.s 			page 49


 272:src/b2d_lite.c **** 		if (accumulateImpulses)
 273:src/b2d_lite.c **** 		{
 274:src/b2d_lite.c **** 			// Clamp the accumulated impulse
 275:src/b2d_lite.c **** 			float Pn0 = c->Pn;
 276:src/b2d_lite.c **** 			c->Pn = Max(Pn0 + dPn, 0.0f);
 277:src/b2d_lite.c **** 			dPn = c->Pn - Pn0;
 278:src/b2d_lite.c **** 		}
 279:src/b2d_lite.c **** 		else
 280:src/b2d_lite.c **** 		{
 281:src/b2d_lite.c **** 			dPn = Max(dPn, 0.0f);
 2138              		.loc 1 281 10 view .LVU512
 2139 002a DFEDDC8A 		vldr.32	s17, .L107	@ tmp329,
 2140 002e 2BE1     		b	.L102		@
 2141              	.LVL120:
 2142              	.L106:
 2143              	.LBB102:
 275:src/b2d_lite.c **** 			c->Pn = Max(Pn0 + dPn, 0.0f);
 2144              		.loc 1 275 4 is_stmt 1 view .LVU513
 2145              	@ src/b2d_lite.c:275: 			float Pn0 = c->Pn;
 275:src/b2d_lite.c **** 			c->Pn = Max(Pn0 + dPn, 0.0f);
 2146              		.loc 1 275 10 is_stmt 0 view .LVU514
 2147 0030 94ED098A 		vldr.32	s16, [r4, #36]	@ Pn0, MEM[base: c_56, offset: 36B]
 2148              	.LVL121:
 276:src/b2d_lite.c **** 			dPn = c->Pn - Pn0;
 2149              		.loc 1 276 4 is_stmt 1 view .LVU515
 2150              	@ src/b2d_lite.c:276: 			c->Pn = Max(Pn0 + dPn, 0.0f);
 276:src/b2d_lite.c **** 			dPn = c->Pn - Pn0;
 2151              		.loc 1 276 12 is_stmt 0 view .LVU516
 2152 0034 F0EE680A 		vmov.f32	s1, s17	@, tmp329
 2153 0038 30EE080A 		vadd.f32	s0, s0, s16	@, dPn, Pn0
 2154              	.LVL122:
 276:src/b2d_lite.c **** 			dPn = c->Pn - Pn0;
 2155              		.loc 1 276 12 view .LVU517
 2156 003c FFF7FEFF 		bl	Max		@
 2157              	.LVL123:
 2158              	@ src/b2d_lite.c:277: 			dPn = c->Pn - Pn0;
 277:src/b2d_lite.c **** 		}
 2159              		.loc 1 277 8 view .LVU518
 2160 0040 30EE488A 		vsub.f32	s16, s0, s16	@ dPn, _11, Pn0
 2161              	.LVL124:
 2162              	@ src/b2d_lite.c:276: 			c->Pn = Max(Pn0 + dPn, 0.0f);
 276:src/b2d_lite.c **** 			dPn = c->Pn - Pn0;
 2163              		.loc 1 276 10 view .LVU519
 2164 0044 84ED090A 		vstr.32	s0, [r4, #36]	@ _11, MEM[base: c_56, offset: 36B]
 277:src/b2d_lite.c **** 		}
 2165              		.loc 1 277 4 is_stmt 1 view .LVU520
 2166              	.LVL125:
 2167              	.L99:
 277:src/b2d_lite.c **** 		}
 2168              		.loc 1 277 4 is_stmt 0 view .LVU521
 2169              	.LBE102:
 282:src/b2d_lite.c **** 		}
 283:src/b2d_lite.c **** 
 284:src/b2d_lite.c **** 		// Apply contact impulse
 285:src/b2d_lite.c **** 		struct Vec2 Pn = scaledVec2(dPn, c->normal);
 2170              		.loc 1 285 3 is_stmt 1 view .LVU522
 2171              	@ src/b2d_lite.c:285: 		struct Vec2 Pn = scaledVec2(dPn, c->normal);
ARM GAS  /tmp/ccPfsSwR.s 			page 50


 2172              		.loc 1 285 20 is_stmt 0 view .LVU523
 2173 0048 B0EE480A 		vmov.f32	s0, s16	@, dPn
 2174 004c D4ED020A 		vldr.32	s1, [r4, #8]	@, c_56->normal
 2175 0050 94ED031A 		vldr.32	s2, [r4, #12]	@, c_56->normal
 2176 0054 FFF7FEFF 		bl	scaledVec2		@
 2177              	.LVL126:
 2178 0058 B0EE601A 		vmov.f32	s2, s1	@ tmp227, tmp350
 2179 005c F0EE407A 		vmov.f32	s15, s0	@ tmp349,
 2180              	@ src/b2d_lite.c:287:         subfromVec2(&b1->velocity, scaledVec2(b1->invMass, Pn));
 286:src/b2d_lite.c **** 
 287:src/b2d_lite.c ****         subfromVec2(&b1->velocity, scaledVec2(b1->invMass, Pn));
 2181              		.loc 1 287 9 view .LVU524
 2182 0060 95ED0D0A 		vldr.32	s0, [r5, #52]	@, b1_54->invMass
 2183              	@ src/b2d_lite.c:285: 		struct Vec2 Pn = scaledVec2(dPn, c->normal);
 285:src/b2d_lite.c **** 
 2184              		.loc 1 285 20 view .LVU525
 2185 0064 8DED031A 		vstr.32	s2, [sp, #12]	@ tmp227, Pn
 2186              		.loc 1 287 9 is_stmt 1 view .LVU526
 2187 0068 F0EE670A 		vmov.f32	s1, s15	@, tmp226
 2188              	@ src/b2d_lite.c:285: 		struct Vec2 Pn = scaledVec2(dPn, c->normal);
 285:src/b2d_lite.c **** 
 2189              		.loc 1 285 20 is_stmt 0 view .LVU527
 2190 006c CDED027A 		vstr.32	s15, [sp, #8]	@ tmp226, Pn
 2191              	@ src/b2d_lite.c:287:         subfromVec2(&b1->velocity, scaledVec2(b1->invMass, Pn));
 2192              		.loc 1 287 9 view .LVU528
 2193 0070 FFF7FEFF 		bl	scaledVec2		@
 2194              	.LVL127:
 2195 0074 5846     		mov	r0, fp	@, pretmp_125
 2196 0076 8DED100A 		vstr.32	s0, [sp, #64]	@ tmp351, D.7779
 2197 007a CDED110A 		vstr.32	s1, [sp, #68]	@ tmp352, D.7779
 2198 007e FFF7FEFF 		bl	subfromVec2		@
 2199              	.LVL128:
 288:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2200              		.loc 1 288 3 is_stmt 1 view .LVU529
 2201              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2202              		.loc 1 288 37 is_stmt 0 view .LVU530
 2203 0082 DDED031A 		vldr.32	s3, [sp, #12]	@, Pn
 2204 0086 9DED021A 		vldr.32	s2, [sp, #8]	@, Pn
 2205 008a D4ED050A 		vldr.32	s1, [r4, #20]	@, c_56->r1
 2206 008e 94ED040A 		vldr.32	s0, [r4, #16]	@, c_56->r1
 2207              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2208              		.loc 1 288 28 view .LVU531
 2209 0092 95ED0F9A 		vldr.32	s18, [r5, #60]	@ _14, b1_54->invI
 2210              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2211              		.loc 1 288 37 view .LVU532
 2212 0096 FFF7FEFF 		bl	Crossvv		@
 2213              	.LVL129:
 2214              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2215              		.loc 1 288 23 view .LVU533
 2216 009a D5ED057A 		vldr.32	s15, [r5, #20]	@ b1_54->angularVelocity, b1_54->angularVelocity
 2217              	@ src/b2d_lite.c:290:         addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pn));
 289:src/b2d_lite.c **** 
 290:src/b2d_lite.c ****         addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pn));
 2218              		.loc 1 290 9 view .LVU534
 2219 009e DDED020A 		vldr.32	s1, [sp, #8]	@, Pn
 2220              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 288:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
ARM GAS  /tmp/ccPfsSwR.s 			page 51


 2221              		.loc 1 288 23 view .LVU535
 2222 00a2 E9EE407A 		vfms.f32	s15, s18, s0	@ _17, _14, tmp353
 2223              	@ src/b2d_lite.c:290:         addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pn));
 2224              		.loc 1 290 9 view .LVU536
 2225 00a6 9DED031A 		vldr.32	s2, [sp, #12]	@, Pn
 2226 00aa 96ED0D0A 		vldr.32	s0, [r6, #52]	@, b2_55->invMass
 2227              	@ src/b2d_lite.c:288: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 288:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pn);
 2228              		.loc 1 288 23 view .LVU537
 2229 00ae C5ED057A 		vstr.32	s15, [r5, #20]	@ _17, b1_54->angularVelocity
 2230              		.loc 1 290 9 is_stmt 1 view .LVU538
 2231 00b2 FFF7FEFF 		bl	scaledVec2		@
 2232              	.LVL130:
 2233 00b6 5046     		mov	r0, r10	@, pretmp_127
 2234 00b8 8DED120A 		vstr.32	s0, [sp, #72]	@ tmp354, D.7781
 2235 00bc CDED130A 		vstr.32	s1, [sp, #76]	@ tmp355, D.7781
 2236 00c0 FFF7FEFF 		bl	addtoVec2		@
 2237              	.LVL131:
 291:src/b2d_lite.c **** 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2238              		.loc 1 291 3 view .LVU539
 2239              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2240              		.loc 1 291 37 is_stmt 0 view .LVU540
 2241 00c4 DDED031A 		vldr.32	s3, [sp, #12]	@, Pn
 2242 00c8 9DED021A 		vldr.32	s2, [sp, #8]	@, Pn
 2243 00cc D4ED070A 		vldr.32	s1, [r4, #28]	@, c_56->r2
 2244 00d0 94ED060A 		vldr.32	s0, [r4, #24]	@, c_56->r2
 2245              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2246              		.loc 1 291 28 view .LVU541
 2247 00d4 96ED0F9A 		vldr.32	s18, [r6, #60]	@ _20, b2_55->invI
 2248              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2249              		.loc 1 291 37 view .LVU542
 2250 00d8 FFF7FEFF 		bl	Crossvv		@
 2251              	.LVL132:
 2252              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2253              		.loc 1 291 23 view .LVU543
 2254 00dc D6ED057A 		vldr.32	s15, [r6, #20]	@ b2_55->angularVelocity, b2_55->angularVelocity
 2255              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 292:src/b2d_lite.c **** 
 293:src/b2d_lite.c **** 		// Relative velocity at contact
 294:src/b2d_lite.c **** 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 2256              		.loc 1 294 8 view .LVU544
 2257 00e0 D4ED060A 		vldr.32	s1, [r4, #24]	@, c_56->r2
 2258              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 291:src/b2d_lite.c **** 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2259              		.loc 1 291 23 view .LVU545
 2260 00e4 E9EE007A 		vfma.f32	s15, s18, s0	@ b2_55->angularVelocity, _20, tmp356
 2261              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 2262              		.loc 1 294 8 view .LVU546
 2263 00e8 94ED071A 		vldr.32	s2, [r4, #28]	@, c_56->r2
 2264              	@ src/b2d_lite.c:291: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 291:src/b2d_lite.c **** 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pn);
 2265              		.loc 1 291 23 view .LVU547
 2266 00ec B0EE670A 		vmov.f32	s0, s15	@ _23, b2_55->angularVelocity
 2267 00f0 C6ED057A 		vstr.32	s15, [r6, #20]	@ _23, b2_55->angularVelocity
 2268              		.loc 1 294 3 is_stmt 1 view .LVU548
 2269              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 2270              		.loc 1 294 8 is_stmt 0 view .LVU549
ARM GAS  /tmp/ccPfsSwR.s 			page 52


 2271 00f4 FFF7FEFF 		bl	Crosssv		@
 2272              	.LVL133:
 2273 00f8 F0EE601A 		vmov.f32	s3, s1	@ tmp358,
 2274 00fc D6ED040A 		vldr.32	s1, [r6, #16]	@, b2_55->velocity
 2275 0100 B0EE401A 		vmov.f32	s2, s0	@ tmp357,
 2276 0104 96ED030A 		vldr.32	s0, [r6, #12]	@, b2_55->velocity
 2277 0108 CDED151A 		vstr.32	s3, [sp, #84]	@ tmp256, D.7783
 2278 010c 8DED141A 		vstr.32	s2, [sp, #80]	@ tmp255, D.7783
 2279 0110 FFF7FEFF 		bl	sumVec2		@
 2280              	.LVL134:
 2281 0114 B0EE407A 		vmov.f32	s14, s0	@ tmp359,
 2282 0118 95ED050A 		vldr.32	s0, [r5, #20]	@, b1_54->angularVelocity
 2283 011c F0EE607A 		vmov.f32	s15, s1	@ tmp360,
 2284 0120 D4ED040A 		vldr.32	s1, [r4, #16]	@, c_56->r1
 2285 0124 94ED051A 		vldr.32	s2, [r4, #20]	@, c_56->r1
 2286 0128 8DED167A 		vstr.32	s14, [sp, #88]	@ tmp359, D.7784
 2287 012c CDED177A 		vstr.32	s15, [sp, #92]	@ tmp360, D.7784
 2288 0130 FFF7FEFF 		bl	Crosssv		@
 2289              	.LVL135:
 2290 0134 F0EE601A 		vmov.f32	s3, s1	@ tmp362,
 2291 0138 D5ED040A 		vldr.32	s1, [r5, #16]	@, b1_54->velocity
 2292 013c B0EE401A 		vmov.f32	s2, s0	@ tmp266, tmp361
 2293 0140 95ED030A 		vldr.32	s0, [r5, #12]	@, b1_54->velocity
 2294 0144 CDED191A 		vstr.32	s3, [sp, #100]	@ tmp267, D.7785
 2295 0148 8DED181A 		vstr.32	s2, [sp, #96]	@ tmp266, D.7785
 2296 014c FFF7FEFF 		bl	sumVec2		@
 2297              	.LVL136:
 2298 0150 F0EE601A 		vmov.f32	s3, s1	@ tmp364,
 2299 0154 DDED170A 		vldr.32	s1, [sp, #92]	@, D.7784
 2300 0158 B0EE401A 		vmov.f32	s2, s0	@ tmp363,
 2301 015c 9DED160A 		vldr.32	s0, [sp, #88]	@, D.7784
 2302 0160 CDED1B1A 		vstr.32	s3, [sp, #108]	@ tmp273, D.7786
 2303 0164 8DED1A1A 		vstr.32	s2, [sp, #104]	@ tmp272, D.7786
 2304 0168 FFF7FEFF 		bl	diffVec2		@
 2305              	.LVL137:
 2306 016c F0EE607A 		vmov.f32	s15, s1	@ tmp366,
 2307              	@ src/b2d_lite.c:297: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 295:src/b2d_lite.c ****                       sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 296:src/b2d_lite.c **** 
 297:src/b2d_lite.c **** 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 2308              		.loc 1 297 25 view .LVU550
 2309 0170 D4ED030A 		vldr.32	s1, [r4, #12]	@, c_56->normal
 2310              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 294:src/b2d_lite.c ****                       sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2311              		.loc 1 294 8 view .LVU551
 2312 0174 B0EE407A 		vmov.f32	s14, s0	@ tmp365,
 2313              	@ src/b2d_lite.c:297: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 2314              		.loc 1 297 25 view .LVU552
 2315 0178 94ED020A 		vldr.32	s0, [r4, #8]	@, c_56->normal
 2316 017c B7EE001A 		vmov.f32	s2, #1.0e+0	@,
 2317              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 294:src/b2d_lite.c ****                       sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2318              		.loc 1 294 8 view .LVU553
 2319 0180 CDED017A 		vstr.32	s15, [sp, #4]	@ tmp366, dv
 2320              		.loc 1 297 3 is_stmt 1 view .LVU554
 2321              	@ src/b2d_lite.c:294: 		dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity, c->r2)),
 294:src/b2d_lite.c ****                       sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
ARM GAS  /tmp/ccPfsSwR.s 			page 53


 2322              		.loc 1 294 8 is_stmt 0 view .LVU555
 2323 0184 8DED007A 		vstr.32	s14, [sp]	@ tmp365, dv
 2324              	@ src/b2d_lite.c:297: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 2325              		.loc 1 297 25 view .LVU556
 2326 0188 FFF7FEFF 		bl	Crossvs		@
 2327              	.LVL138:
 2328 018c B0EE401A 		vmov.f32	s2, s0	@ tmp367,
 2329              	@ src/b2d_lite.c:298: 		float vt = Dot(dv, tangent);
 298:src/b2d_lite.c **** 		float vt = Dot(dv, tangent);
 2330              		.loc 1 298 14 view .LVU557
 2331 0190 9DED000A 		vldr.32	s0, [sp]	@, dv
 2332              	@ src/b2d_lite.c:297: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 297:src/b2d_lite.c **** 		float vt = Dot(dv, tangent);
 2333              		.loc 1 297 25 view .LVU558
 2334 0194 F0EE601A 		vmov.f32	s3, s1	@ tmp368,
 2335              	@ src/b2d_lite.c:298: 		float vt = Dot(dv, tangent);
 2336              		.loc 1 298 14 view .LVU559
 2337 0198 DDED010A 		vldr.32	s1, [sp, #4]	@, dv
 2338              	@ src/b2d_lite.c:297: 		struct Vec2 tangent = Crossvs(c->normal, 1.0f);
 297:src/b2d_lite.c **** 		float vt = Dot(dv, tangent);
 2339              		.loc 1 297 25 view .LVU560
 2340 019c 8DED041A 		vstr.32	s2, [sp, #16]	@ tmp282, tangent
 2341 01a0 CDED051A 		vstr.32	s3, [sp, #20]	@ tmp283, tangent
 2342              		.loc 1 298 3 is_stmt 1 view .LVU561
 2343              	@ src/b2d_lite.c:298: 		float vt = Dot(dv, tangent);
 2344              		.loc 1 298 14 is_stmt 0 view .LVU562
 2345 01a4 FFF7FEFF 		bl	Dot		@
 2346              	.LVL139:
 299:src/b2d_lite.c **** 		float dPt = c->massTangent * (-vt);
 2347              		.loc 1 299 3 is_stmt 1 view .LVU563
 2348              	@ src/b2d_lite.c:299: 		float dPt = c->massTangent * (-vt);
 2349              		.loc 1 299 9 is_stmt 0 view .LVU564
 2350 01a8 D4ED0D7A 		vldr.32	s15, [r4, #52]	@ MEM[base: c_56, offset: 52B], MEM[base: c_56, offset: 52B]
 2351              	@ src/b2d_lite.c:301: 		if (accumulateImpulses)
 300:src/b2d_lite.c **** 
 301:src/b2d_lite.c **** 		if (accumulateImpulses)
 2352              		.loc 1 301 6 view .LVU565
 2353 01ac D9F80030 		ldr	r3, [r9]	@ accumulateImpulses, accumulateImpulses
 2354              	@ src/b2d_lite.c:299: 		float dPt = c->massTangent * (-vt);
 299:src/b2d_lite.c **** 		float dPt = c->massTangent * (-vt);
 2355              		.loc 1 299 9 view .LVU566
 2356 01b0 20EE670A 		vnmul.f32	s0, s0, s15	@ dPt, tmp369, MEM[base: c_56, offset: 52B]
 2357              	.LVL140:
 2358              		.loc 1 301 3 is_stmt 1 view .LVU567
 2359              	.LBB103:
 2360              	@ src/b2d_lite.c:304: 			float maxPt = a->friction * c->Pn;
 302:src/b2d_lite.c **** 		{
 303:src/b2d_lite.c **** 			// Compute friction impulse
 304:src/b2d_lite.c **** 			float maxPt = a->friction * c->Pn;
 2361              		.loc 1 304 10 is_stmt 0 view .LVU568
 2362 01b4 98ED231A 		vldr.32	s2, [r8, #140]	@ a_53(D)->friction, a_53(D)->friction
 2363              	.LBE103:
 2364              	@ src/b2d_lite.c:301: 		if (accumulateImpulses)
 301:src/b2d_lite.c **** 		{
 2365              		.loc 1 301 6 view .LVU569
 2366 01b8 002B     		cmp	r3, #0	@ accumulateImpulses
 2367 01ba 00F0E380 		beq	.L100	@
ARM GAS  /tmp/ccPfsSwR.s 			page 54


 2368              	.LBB104:
 2369              		.loc 1 304 4 is_stmt 1 view .LVU570
 2370              	@ src/b2d_lite.c:304: 			float maxPt = a->friction * c->Pn;
 2371              		.loc 1 304 10 is_stmt 0 view .LVU571
 2372 01be D4ED097A 		vldr.32	s15, [r4, #36]	@ MEM[base: c_56, offset: 36B], MEM[base: c_56, offset: 36B]
 2373              	@ src/b2d_lite.c:307: 			float oldTangentImpulse = c->Pt;
 305:src/b2d_lite.c **** 
 306:src/b2d_lite.c **** 			// Clamp friction
 307:src/b2d_lite.c **** 			float oldTangentImpulse = c->Pt;
 2374              		.loc 1 307 10 view .LVU572
 2375 01c2 94ED0A8A 		vldr.32	s16, [r4, #40]	@ oldTangentImpulse, MEM[base: c_56, offset: 40B]
 2376              	.LVL141:
 2377              	@ src/b2d_lite.c:304: 			float maxPt = a->friction * c->Pn;
 304:src/b2d_lite.c **** 
 2378              		.loc 1 304 10 view .LVU573
 2379 01c6 21EE271A 		vmul.f32	s2, s2, s15	@ maxPt, a_53(D)->friction, MEM[base: c_56, offset: 36B]
 2380              	.LVL142:
 2381              		.loc 1 307 4 is_stmt 1 view .LVU574
 308:src/b2d_lite.c **** 			c->Pt = Clamp(oldTangentImpulse + dPt, -maxPt, maxPt);
 2382              		.loc 1 308 4 view .LVU575
 2383              	@ src/b2d_lite.c:308: 			c->Pt = Clamp(oldTangentImpulse + dPt, -maxPt, maxPt);
 2384              		.loc 1 308 12 is_stmt 0 view .LVU576
 2385 01ca 30EE080A 		vadd.f32	s0, s0, s16	@, dPt, oldTangentImpulse
 2386              	.LVL143:
 2387              		.loc 1 308 12 view .LVU577
 2388 01ce F1EE410A 		vneg.f32	s1, s2	@,
 2389 01d2 FFF7FEFF 		bl	Clamp		@
 2390              	.LVL144:
 2391              	@ src/b2d_lite.c:308: 			c->Pt = Clamp(oldTangentImpulse + dPt, -maxPt, maxPt);
 2392              		.loc 1 308 10 view .LVU578
 2393 01d6 84ED0A0A 		vstr.32	s0, [r4, #40]	@ _32, MEM[base: c_56, offset: 40B]
 309:src/b2d_lite.c **** 			dPt = c->Pt - oldTangentImpulse;
 2394              		.loc 1 309 4 is_stmt 1 view .LVU579
 2395              	@ src/b2d_lite.c:309: 			dPt = c->Pt - oldTangentImpulse;
 2396              		.loc 1 309 8 is_stmt 0 view .LVU580
 2397 01da 30EE480A 		vsub.f32	s0, s0, s16	@ dPt, _32, oldTangentImpulse
 2398              	.LVL145:
 2399              	.L101:
 2400              		.loc 1 309 8 view .LVU581
 2401              	.LBE104:
 310:src/b2d_lite.c **** 		}
 311:src/b2d_lite.c **** 		else
 312:src/b2d_lite.c **** 		{
 313:src/b2d_lite.c **** 			float maxPt = a->friction * dPn;
 314:src/b2d_lite.c **** 			dPt = Clamp(dPt, -maxPt, maxPt);
 315:src/b2d_lite.c **** 		}
 316:src/b2d_lite.c **** 
 317:src/b2d_lite.c **** 		// Apply contact impulse
 318:src/b2d_lite.c **** 		struct Vec2 Pt = scaledVec2(dPt, tangent);
 2402              		.loc 1 318 3 is_stmt 1 discriminator 2 view .LVU582
 2403              	@ src/b2d_lite.c:318: 		struct Vec2 Pt = scaledVec2(dPt, tangent);
 2404              		.loc 1 318 20 is_stmt 0 discriminator 2 view .LVU583
 2405 01de DDED040A 		vldr.32	s1, [sp, #16]	@, tangent
 2406              	.LBE101:
 2407              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 257:src/b2d_lite.c **** 	{
 2408              		.loc 1 257 38 discriminator 2 view .LVU584
ARM GAS  /tmp/ccPfsSwR.s 			page 55


 2409 01e2 0137     		adds	r7, r7, #1	@ i, i,
 2410              	.LVL146:
 2411              	.LBB106:
 2412              	@ src/b2d_lite.c:318: 		struct Vec2 Pt = scaledVec2(dPt, tangent);
 2413              		.loc 1 318 20 discriminator 2 view .LVU585
 2414 01e4 9DED051A 		vldr.32	s2, [sp, #20]	@, tangent
 2415 01e8 4034     		adds	r4, r4, #64	@ ivtmp.143, ivtmp.143,
 2416              	.LVL147:
 2417              		.loc 1 318 20 discriminator 2 view .LVU586
 2418 01ea FFF7FEFF 		bl	scaledVec2		@
 2419              	.LVL148:
 2420              		.loc 1 318 20 discriminator 2 view .LVU587
 2421 01ee F0EE407A 		vmov.f32	s15, s0	@ tmp372,
 2422 01f2 B0EE601A 		vmov.f32	s2, s1	@ tmp301, tmp373
 2423              	@ src/b2d_lite.c:320: 		subfromVec2(&b1->velocity, scaledVec2(b1->invMass, Pt));
 319:src/b2d_lite.c **** 
 320:src/b2d_lite.c **** 		subfromVec2(&b1->velocity, scaledVec2(b1->invMass, Pt));
 2424              		.loc 1 320 3 discriminator 2 view .LVU588
 2425 01f6 95ED0D0A 		vldr.32	s0, [r5, #52]	@, b1_54->invMass
 2426 01fa F0EE670A 		vmov.f32	s1, s15	@, tmp300
 2427              	@ src/b2d_lite.c:318: 		struct Vec2 Pt = scaledVec2(dPt, tangent);
 318:src/b2d_lite.c **** 
 2428              		.loc 1 318 20 discriminator 2 view .LVU589
 2429 01fe CDED067A 		vstr.32	s15, [sp, #24]	@ tmp300, Pt
 2430 0202 8DED071A 		vstr.32	s2, [sp, #28]	@ tmp301, Pt
 2431              		.loc 1 320 3 is_stmt 1 discriminator 2 view .LVU590
 2432 0206 FFF7FEFF 		bl	scaledVec2		@
 2433              	.LVL149:
 2434 020a 5846     		mov	r0, fp	@, pretmp_125
 2435 020c 8DED1C0A 		vstr.32	s0, [sp, #112]	@ tmp374, D.7790
 2436 0210 CDED1D0A 		vstr.32	s1, [sp, #116]	@ tmp375, D.7790
 2437 0214 FFF7FEFF 		bl	subfromVec2		@
 2438              	.LVL150:
 321:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2439              		.loc 1 321 3 discriminator 2 view .LVU591
 2440              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2441              		.loc 1 321 37 is_stmt 0 discriminator 2 view .LVU592
 2442 0218 DDED071A 		vldr.32	s3, [sp, #28]	@, Pt
 2443 021c 54ED0B0A 		vldr.32	s1, [r4, #-44]	@, c_56->r1
 2444 0220 9DED061A 		vldr.32	s2, [sp, #24]	@, Pt
 2445 0224 14ED0C0A 		vldr.32	s0, [r4, #-48]	@, c_56->r1
 2446              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2447              		.loc 1 321 28 discriminator 2 view .LVU593
 2448 0228 95ED0F8A 		vldr.32	s16, [r5, #60]	@ _36, b1_54->invI
 2449              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2450              		.loc 1 321 37 discriminator 2 view .LVU594
 2451 022c FFF7FEFF 		bl	Crossvv		@
 2452              	.LVL151:
 2453              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2454              		.loc 1 321 23 discriminator 2 view .LVU595
 2455 0230 D5ED057A 		vldr.32	s15, [r5, #20]	@ b1_54->angularVelocity, b1_54->angularVelocity
 2456              	@ src/b2d_lite.c:323: 		addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pt));
 322:src/b2d_lite.c **** 
 323:src/b2d_lite.c **** 		addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pt));
 2457              		.loc 1 323 3 discriminator 2 view .LVU596
 2458 0234 DDED060A 		vldr.32	s1, [sp, #24]	@, Pt
 2459              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
ARM GAS  /tmp/ccPfsSwR.s 			page 56


 321:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2460              		.loc 1 321 23 discriminator 2 view .LVU597
 2461 0238 E8EE407A 		vfms.f32	s15, s16, s0	@ _39, _36, tmp376
 2462              	@ src/b2d_lite.c:323: 		addtoVec2(&b2->velocity, scaledVec2(b2->invMass, Pt));
 2463              		.loc 1 323 3 discriminator 2 view .LVU598
 2464 023c 9DED071A 		vldr.32	s2, [sp, #28]	@, Pt
 2465 0240 96ED0D0A 		vldr.32	s0, [r6, #52]	@, b2_55->invMass
 2466              	@ src/b2d_lite.c:321: 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 321:src/b2d_lite.c **** 		b1->angularVelocity -= b1->invI * Crossvv(c->r1, Pt);
 2467              		.loc 1 321 23 discriminator 2 view .LVU599
 2468 0244 C5ED057A 		vstr.32	s15, [r5, #20]	@ _39, b1_54->angularVelocity
 2469              		.loc 1 323 3 is_stmt 1 discriminator 2 view .LVU600
 2470 0248 FFF7FEFF 		bl	scaledVec2		@
 2471              	.LVL152:
 2472 024c 5046     		mov	r0, r10	@, pretmp_127
 2473 024e 8DED1E0A 		vstr.32	s0, [sp, #120]	@ tmp377, D.7792
 2474 0252 CDED1F0A 		vstr.32	s1, [sp, #124]	@ tmp378, D.7792
 2475 0256 FFF7FEFF 		bl	addtoVec2		@
 2476              	.LVL153:
 324:src/b2d_lite.c **** 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2477              		.loc 1 324 3 discriminator 2 view .LVU601
 2478              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2479              		.loc 1 324 37 is_stmt 0 discriminator 2 view .LVU602
 2480 025a 14ED0A0A 		vldr.32	s0, [r4, #-40]	@, c_56->r2
 2481 025e 54ED090A 		vldr.32	s1, [r4, #-36]	@, c_56->r2
 2482 0262 9DED061A 		vldr.32	s2, [sp, #24]	@, Pt
 2483 0266 DDED071A 		vldr.32	s3, [sp, #28]	@, Pt
 2484              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2485              		.loc 1 324 28 discriminator 2 view .LVU603
 2486 026a 96ED0F8A 		vldr.32	s16, [r6, #60]	@ _41, b2_55->invI
 2487              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2488              		.loc 1 324 37 discriminator 2 view .LVU604
 2489 026e FFF7FEFF 		bl	Crossvv		@
 2490              	.LVL154:
 2491              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2492              		.loc 1 324 23 discriminator 2 view .LVU605
 2493 0272 D6ED057A 		vldr.32	s15, [r6, #20]	@ b2_55->angularVelocity, b2_55->angularVelocity
 2494              	.LBE106:
 2495              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 257:src/b2d_lite.c **** 	{
 2496              		.loc 1 257 2 discriminator 2 view .LVU606
 2497 0276 D8F88030 		ldr	r3, [r8, #128]	@ a_53(D)->numContacts, a_53(D)->numContacts
 2498              	.LBB107:
 2499              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2500              		.loc 1 324 23 discriminator 2 view .LVU607
 2501 027a E8EE007A 		vfma.f32	s15, s16, s0	@ _44, _41, tmp379
 2502              	.LBE107:
 2503              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 257:src/b2d_lite.c **** 	{
 2504              		.loc 1 257 2 discriminator 2 view .LVU608
 2505 027e BB42     		cmp	r3, r7	@ a_53(D)->numContacts, i
 2506              	.LBB108:
 2507              	@ src/b2d_lite.c:324: 		b2->angularVelocity += b2->invI * Crossvv(c->r2, Pt);
 2508              		.loc 1 324 23 discriminator 2 view .LVU609
 2509 0280 C6ED057A 		vstr.32	s15, [r6, #20]	@ _44, b2_55->angularVelocity
 2510              	.LBE108:
 257:src/b2d_lite.c **** 	{
ARM GAS  /tmp/ccPfsSwR.s 			page 57


 2511              		.loc 1 257 38 is_stmt 1 discriminator 2 view .LVU610
 2512              	.LVL155:
 257:src/b2d_lite.c **** 	{
 2513              		.loc 1 257 18 discriminator 2 view .LVU611
 2514              	@ src/b2d_lite.c:257: 	for (int i = 0; i < a->numContacts; ++i)
 257:src/b2d_lite.c **** 	{
 2515              		.loc 1 257 2 is_stmt 0 discriminator 2 view .LVU612
 2516 0284 40F38580 		ble	.L96		@,
 2517              	.LVL156:
 2518              	.L102:
 2519              	.LBB109:
 259:src/b2d_lite.c **** 		c->r1 = diffVec2(c->position, b1->position);
 2520              		.loc 1 259 3 is_stmt 1 view .LVU613
 260:src/b2d_lite.c **** 		c->r2 = diffVec2(c->position, b2->position);
 2521              		.loc 1 260 3 view .LVU614
 2522              	@ src/b2d_lite.c:260: 		c->r1 = diffVec2(c->position, b1->position);
 260:src/b2d_lite.c **** 		c->r2 = diffVec2(c->position, b2->position);
 2523              		.loc 1 260 11 is_stmt 0 view .LVU615
 2524 0288 94ED000A 		vldr.32	s0, [r4]	@, c_56->position
 2525 028c D4ED010A 		vldr.32	s1, [r4, #4]	@, c_56->position
 2526 0290 95ED001A 		vldr.32	s2, [r5]	@, b1_54->position
 2527 0294 D5ED011A 		vldr.32	s3, [r5, #4]	@, b1_54->position
 2528 0298 FFF7FEFF 		bl	diffVec2		@
 2529              	.LVL157:
 2530              	@ src/b2d_lite.c:261: 		c->r2 = diffVec2(c->position, b2->position);
 261:src/b2d_lite.c **** 
 2531              		.loc 1 261 11 view .LVU616
 2532 029c 96ED001A 		vldr.32	s2, [r6]	@, b2_55->position
 2533              	@ src/b2d_lite.c:260: 		c->r1 = diffVec2(c->position, b1->position);
 260:src/b2d_lite.c **** 		c->r2 = diffVec2(c->position, b2->position);
 2534              		.loc 1 260 11 view .LVU617
 2535 02a0 84ED040A 		vstr.32	s0, [r4, #16]	@ tmp332, c_56->r1
 2536              	@ src/b2d_lite.c:261: 		c->r2 = diffVec2(c->position, b2->position);
 261:src/b2d_lite.c **** 
 2537              		.loc 1 261 11 view .LVU618
 2538 02a4 94ED000A 		vldr.32	s0, [r4]	@, c_56->position
 2539 02a8 D6ED011A 		vldr.32	s3, [r6, #4]	@, b2_55->position
 2540              	@ src/b2d_lite.c:260: 		c->r1 = diffVec2(c->position, b1->position);
 260:src/b2d_lite.c **** 		c->r2 = diffVec2(c->position, b2->position);
 2541              		.loc 1 260 11 view .LVU619
 2542 02ac C4ED050A 		vstr.32	s1, [r4, #20]	@ tmp333, c_56->r1
 261:src/b2d_lite.c **** 
 2543              		.loc 1 261 3 is_stmt 1 view .LVU620
 2544              	@ src/b2d_lite.c:261: 		c->r2 = diffVec2(c->position, b2->position);
 261:src/b2d_lite.c **** 
 2545              		.loc 1 261 11 is_stmt 0 view .LVU621
 2546 02b0 D4ED010A 		vldr.32	s1, [r4, #4]	@, c_56->position
 2547 02b4 FFF7FEFF 		bl	diffVec2		@
 2548              	.LVL158:
 2549 02b8 F0EE407A 		vmov.f32	s15, s0	@ tmp334,
 2550 02bc B0EE601A 		vmov.f32	s2, s1	@ tmp183, tmp335
 2551              	@ src/b2d_lite.c:264: 		struct Vec2 dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity
 264:src/b2d_lite.c ****                                   sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2552              		.loc 1 264 20 view .LVU622
 2553 02c0 96ED050A 		vldr.32	s0, [r6, #20]	@, b2_55->angularVelocity
 2554 02c4 F0EE670A 		vmov.f32	s1, s15	@, tmp182
 2555              	@ src/b2d_lite.c:261: 		c->r2 = diffVec2(c->position, b2->position);
ARM GAS  /tmp/ccPfsSwR.s 			page 58


 261:src/b2d_lite.c **** 
 2556              		.loc 1 261 11 view .LVU623
 2557 02c8 C4ED067A 		vstr.32	s15, [r4, #24]	@ tmp182, c_56->r2
 2558 02cc 84ED071A 		vstr.32	s2, [r4, #28]	@ tmp183, c_56->r2
 264:src/b2d_lite.c ****                                   sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2559              		.loc 1 264 3 is_stmt 1 view .LVU624
 2560              	@ src/b2d_lite.c:264: 		struct Vec2 dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity
 264:src/b2d_lite.c ****                                   sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2561              		.loc 1 264 20 is_stmt 0 view .LVU625
 2562 02d0 FFF7FEFF 		bl	Crosssv		@
 2563              	.LVL159:
 2564 02d4 B0EE401A 		vmov.f32	s2, s0	@ tmp336,
 2565 02d8 F0EE601A 		vmov.f32	s3, s1	@ tmp337,
 2566 02dc 96ED030A 		vldr.32	s0, [r6, #12]	@, b2_55->velocity
 2567 02e0 D6ED040A 		vldr.32	s1, [r6, #16]	@, b2_55->velocity
 2568 02e4 8DED081A 		vstr.32	s2, [sp, #32]	@ tmp187, D.7772
 2569 02e8 CDED091A 		vstr.32	s3, [sp, #36]	@ tmp188, D.7772
 2570 02ec FFF7FEFF 		bl	sumVec2		@
 2571              	.LVL160:
 2572 02f0 B0EE407A 		vmov.f32	s14, s0	@ tmp338,
 2573 02f4 95ED050A 		vldr.32	s0, [r5, #20]	@, b1_54->angularVelocity
 2574 02f8 F0EE607A 		vmov.f32	s15, s1	@ tmp339,
 2575 02fc D4ED040A 		vldr.32	s1, [r4, #16]	@, c_56->r1
 2576 0300 94ED051A 		vldr.32	s2, [r4, #20]	@, c_56->r1
 2577 0304 8DED0A7A 		vstr.32	s14, [sp, #40]	@ tmp338, D.7773
 2578 0308 CDED0B7A 		vstr.32	s15, [sp, #44]	@ tmp339, D.7773
 2579 030c FFF7FEFF 		bl	Crosssv		@
 2580              	.LVL161:
 2581 0310 F0EE601A 		vmov.f32	s3, s1	@ tmp341,
 2582 0314 D5ED040A 		vldr.32	s1, [r5, #16]	@, b1_54->velocity
 2583 0318 B0EE401A 		vmov.f32	s2, s0	@ tmp198, tmp340
 2584 031c 95ED030A 		vldr.32	s0, [r5, #12]	@, b1_54->velocity
 2585 0320 CDED0D1A 		vstr.32	s3, [sp, #52]	@ tmp199, D.7774
 2586 0324 8DED0C1A 		vstr.32	s2, [sp, #48]	@ tmp198, D.7774
 2587 0328 FFF7FEFF 		bl	sumVec2		@
 2588              	.LVL162:
 2589 032c B0EE401A 		vmov.f32	s2, s0	@ tmp342,
 2590 0330 9DED0A0A 		vldr.32	s0, [sp, #40]	@, D.7773
 2591 0334 F0EE601A 		vmov.f32	s3, s1	@ tmp343,
 2592 0338 DDED0B0A 		vldr.32	s1, [sp, #44]	@, D.7773
 2593 033c 8DED0E1A 		vstr.32	s2, [sp, #56]	@ tmp204, D.7775
 2594 0340 CDED0F1A 		vstr.32	s3, [sp, #60]	@ tmp205, D.7775
 2595 0344 FFF7FEFF 		bl	diffVec2		@
 2596              	.LVL163:
 2597              	@ src/b2d_lite.c:268: 		float vn = Dot(dv, c->normal);
 268:src/b2d_lite.c **** 
 2598              		.loc 1 268 14 view .LVU626
 2599 0348 94ED021A 		vldr.32	s2, [r4, #8]	@, c_56->normal
 2600 034c D4ED031A 		vldr.32	s3, [r4, #12]	@, c_56->normal
 2601              	@ src/b2d_lite.c:264: 		struct Vec2 dv = diffVec2(sumVec2(b2->velocity, Crosssv(b2->angularVelocity
 264:src/b2d_lite.c ****                                   sumVec2(b1->velocity, Crosssv(b1->angularVelocity, c->r1)));
 2602              		.loc 1 264 20 view .LVU627
 2603 0350 8DED000A 		vstr.32	s0, [sp]	@ tmp344, dv
 2604 0354 CDED010A 		vstr.32	s1, [sp, #4]	@ tmp345, dv
 268:src/b2d_lite.c **** 
 2605              		.loc 1 268 3 is_stmt 1 view .LVU628
 2606              	@ src/b2d_lite.c:268: 		float vn = Dot(dv, c->normal);
ARM GAS  /tmp/ccPfsSwR.s 			page 59


 268:src/b2d_lite.c **** 
 2607              		.loc 1 268 14 is_stmt 0 view .LVU629
 2608 0358 FFF7FEFF 		bl	Dot		@
 2609              	.LVL164:
 270:src/b2d_lite.c **** 
 2610              		.loc 1 270 3 is_stmt 1 view .LVU630
 2611              	@ src/b2d_lite.c:270: 		float dPn = c->massNormal * (-vn + c->bias);
 270:src/b2d_lite.c **** 
 2612              		.loc 1 270 36 is_stmt 0 view .LVU631
 2613 035c D4ED0E7A 		vldr.32	s15, [r4, #56]	@ MEM[base: c_56, offset: 56B], MEM[base: c_56, offset: 56B]
 2614              	@ src/b2d_lite.c:270: 		float dPn = c->massNormal * (-vn + c->bias);
 270:src/b2d_lite.c **** 
 2615              		.loc 1 270 9 view .LVU632
 2616 0360 94ED0C7A 		vldr.32	s14, [r4, #48]	@ MEM[base: c_56, offset: 48B], MEM[base: c_56, offset: 48B]
 2617              	@ src/b2d_lite.c:270: 		float dPn = c->massNormal * (-vn + c->bias);
 270:src/b2d_lite.c **** 
 2618              		.loc 1 270 36 view .LVU633
 2619 0364 37EEC00A 		vsub.f32	s0, s15, s0	@ tmp216, MEM[base: c_56, offset: 56B], tmp346
 2620              	.LVL165:
 2621              	@ src/b2d_lite.c:272: 		if (accumulateImpulses)
 272:src/b2d_lite.c **** 		{
 2622              		.loc 1 272 6 view .LVU634
 2623 0368 D9F80030 		ldr	r3, [r9]	@ accumulateImpulses, accumulateImpulses
 2624              	@ src/b2d_lite.c:270: 		float dPn = c->massNormal * (-vn + c->bias);
 270:src/b2d_lite.c **** 
 2625              		.loc 1 270 9 view .LVU635
 2626 036c 20EE070A 		vmul.f32	s0, s0, s14	@ dPn, tmp216, MEM[base: c_56, offset: 48B]
 2627              	.LVL166:
 272:src/b2d_lite.c **** 		{
 2628              		.loc 1 272 3 is_stmt 1 view .LVU636
 2629              	@ src/b2d_lite.c:272: 		if (accumulateImpulses)
 272:src/b2d_lite.c **** 		{
 2630              		.loc 1 272 6 is_stmt 0 view .LVU637
 2631 0370 002B     		cmp	r3, #0	@ accumulateImpulses
 2632 0372 7FF45DAE 		bne	.L106	@
 281:src/b2d_lite.c **** 		}
 2633              		.loc 1 281 4 is_stmt 1 view .LVU638
 2634              	@ src/b2d_lite.c:281: 			dPn = Max(dPn, 0.0f);
 281:src/b2d_lite.c **** 		}
 2635              		.loc 1 281 10 is_stmt 0 view .LVU639
 2636 0376 F0EE680A 		vmov.f32	s1, s17	@, tmp329
 2637 037a FFF7FEFF 		bl	Max		@
 2638              	.LVL167:
 281:src/b2d_lite.c **** 		}
 2639              		.loc 1 281 10 view .LVU640
 2640 037e B0EE408A 		vmov.f32	s16, s0	@ dPn, tmp348
 2641              	.LVL168:
 281:src/b2d_lite.c **** 		}
 2642              		.loc 1 281 10 view .LVU641
 2643 0382 61E6     		b	.L99		@
 2644              	.LVL169:
 2645              	.L100:
 2646              	.LBB105:
 313:src/b2d_lite.c **** 			dPt = Clamp(dPt, -maxPt, maxPt);
 2647              		.loc 1 313 4 is_stmt 1 view .LVU642
 2648              	@ src/b2d_lite.c:313: 			float maxPt = a->friction * dPn;
 313:src/b2d_lite.c **** 			dPt = Clamp(dPt, -maxPt, maxPt);
ARM GAS  /tmp/ccPfsSwR.s 			page 60


 2649              		.loc 1 313 10 is_stmt 0 view .LVU643
 2650 0384 28EE011A 		vmul.f32	s2, s16, s2	@ maxPt, dPn, a_53(D)->friction
 2651              	.LVL170:
 314:src/b2d_lite.c **** 		}
 2652              		.loc 1 314 4 is_stmt 1 view .LVU644
 2653              	@ src/b2d_lite.c:314: 			dPt = Clamp(dPt, -maxPt, maxPt);
 314:src/b2d_lite.c **** 		}
 2654              		.loc 1 314 10 is_stmt 0 view .LVU645
 2655 0388 F1EE410A 		vneg.f32	s1, s2	@,
 2656 038c FFF7FEFF 		bl	Clamp		@
 2657              	.LVL171:
 314:src/b2d_lite.c **** 		}
 2658              		.loc 1 314 10 view .LVU646
 2659 0390 25E7     		b	.L101		@
 2660              	.LVL172:
 2661              	.L96:
 314:src/b2d_lite.c **** 		}
 2662              		.loc 1 314 10 view .LVU647
 2663              	.LBE105:
 2664              	.LBE109:
 2665              	.LBE110:
 2666              	@ src/b2d_lite.c:326: }
 325:src/b2d_lite.c **** 	}
 326:src/b2d_lite.c **** }
 2667              		.loc 1 326 1 view .LVU648
 2668 0392 21B0     		add	sp, sp, #132	@,,
 2669              	.LCFI36:
 2670              		.cfi_def_cfa_offset 52
 2671              		@ sp needed	@
 2672 0394 BDEC048B 		vldm	sp!, {d8-d9}	@,
 2673              	.LCFI37:
 2674              		.cfi_restore 82
 2675              		.cfi_restore 83
 2676              		.cfi_restore 80
 2677              		.cfi_restore 81
 2678              		.cfi_def_cfa_offset 36
 2679 0398 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 2680              	.LVL173:
 2681              	.L108:
 2682              		.loc 1 326 1 view .LVU649
 2683              		.align	2
 2684              	.L107:
 2685 039c 00000000 		.word	0
 2686 03a0 00000000 		.word	.LANCHOR2
 2687              		.cfi_endproc
 2688              	.LFE10:
 2689              		.size	ApplyImpulse, .-ApplyImpulse
 2690              		.section	.text.Step,"ax",%progbits
 2691              		.align	1
 2692              		.p2align 4,,15
 2693              		.global	Step
 2694              		.syntax unified
 2695              		.thumb
 2696              		.thumb_func
 2697              		.fpu fpv5-sp-d16
 2698              		.type	Step, %function
 2699              	Step:
ARM GAS  /tmp/ccPfsSwR.s 			page 61


 2700              	.LVL174:
 2701              	.LFB11:
 327:src/b2d_lite.c **** 
 328:src/b2d_lite.c **** void Step(float dt)
 329:src/b2d_lite.c **** {
 2702              		.loc 1 329 1 is_stmt 1 view -0
 2703              		.cfi_startproc
 2704              		@ args = 0, pretend = 0, frame = 32
 2705              		@ frame_needed = 0, uses_anonymous_args = 0
 330:src/b2d_lite.c **** 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2706              		.loc 1 330 2 view .LVU651
 2707              	@ src/b2d_lite.c:330: 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2708              		.loc 1 330 39 is_stmt 0 view .LVU652
 2709 0000 B5EEC00A 		vcmpe.f32	s0, #0	@ dt
 2710              	@ src/b2d_lite.c:329: {
 329:src/b2d_lite.c **** 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2711              		.loc 1 329 1 view .LVU653
 2712 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}	@
 2713              	.LCFI38:
 2714              		.cfi_def_cfa_offset 28
 2715              		.cfi_offset 4, -28
 2716              		.cfi_offset 5, -24
 2717              		.cfi_offset 6, -20
 2718              		.cfi_offset 7, -16
 2719              		.cfi_offset 8, -12
 2720              		.cfi_offset 9, -8
 2721              		.cfi_offset 14, -4
 2722              	@ src/b2d_lite.c:330: 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2723              		.loc 1 330 39 view .LVU654
 2724 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2725              	@ src/b2d_lite.c:329: {
 329:src/b2d_lite.c **** 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2726              		.loc 1 329 1 view .LVU655
 2727 000c 2DED028B 		vpush.64	{d8}	@
 2728              	.LCFI39:
 2729              		.cfi_def_cfa_offset 36
 2730              		.cfi_offset 80, -36
 2731              		.cfi_offset 81, -32
 2732 0010 B0EE408A 		vmov.f32	s16, s0	@ dt, tmp208
 2733 0014 89B0     		sub	sp, sp, #36	@,,
 2734              	.LCFI40:
 2735              		.cfi_def_cfa_offset 72
 2736              	@ src/b2d_lite.c:330: 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2737              		.loc 1 330 39 view .LVU656
 2738 0016 40F3A880 		ble	.L131		@,
 2739              	@ src/b2d_lite.c:330: 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 2740              		.loc 1 330 39 discriminator 1 view .LVU657
 2741 001a F7EE007A 		vmov.f32	s15, #1.0e+0	@ tmp149,
 2742 001e C7EE808A 		vdiv.f32	s17, s15, s0	@ iftmp.23_26, tmp149, dt
 2743              	.L110:
 2744              	.LVL175:
 331:src/b2d_lite.c **** 
 332:src/b2d_lite.c **** 	// Determine overlapping bodies and update contact points.
 333:src/b2d_lite.c **** 	BroadPhase();
 2745              		.loc 1 333 2 is_stmt 1 discriminator 4 view .LVU658
 2746              	.LBB111:
 2747              	@ src/b2d_lite.c:336: 	for (int i = 0; i < g_numBodies; ++i)
ARM GAS  /tmp/ccPfsSwR.s 			page 62


 334:src/b2d_lite.c **** 
 335:src/b2d_lite.c **** 	// Integrate forces.
 336:src/b2d_lite.c **** 	for (int i = 0; i < g_numBodies; ++i)
 2748              		.loc 1 336 20 is_stmt 0 discriminator 4 view .LVU659
 2749 0022 534F     		ldr	r7, .L133	@ tmp206,
 2750              	.LBE111:
 2751              	@ src/b2d_lite.c:333: 	BroadPhase();
 333:src/b2d_lite.c **** 
 2752              		.loc 1 333 2 discriminator 4 view .LVU660
 2753 0024 FFF7FEFF 		bl	BroadPhase		@
 2754              	.LVL176:
 2755              		.loc 1 336 2 is_stmt 1 discriminator 4 view .LVU661
 2756              	.LBB114:
 2757              		.loc 1 336 7 discriminator 4 view .LVU662
 2758              		.loc 1 336 18 discriminator 4 view .LVU663
 2759              	@ src/b2d_lite.c:336: 	for (int i = 0; i < g_numBodies; ++i)
 2760              		.loc 1 336 2 is_stmt 0 discriminator 4 view .LVU664
 2761 0028 3B68     		ldr	r3, [r7]	@ g_numBodies, g_numBodies
 2762 002a 002B     		cmp	r3, #0	@ g_numBodies,
 2763 002c 46DD     		ble	.L112		@,
 2764 002e 514E     		ldr	r6, .L133+4	@ ivtmp.170,
 2765              	@ src/b2d_lite.c:336: 	for (int i = 0; i < g_numBodies; ++i)
 2766              		.loc 1 336 11 view .LVU665
 2767 0030 0025     		movs	r5, #0	@ i,
 2768              	.LBB112:
 2769              	@ src/b2d_lite.c:343: 		addtoVec2(&b->velocity, scaledVec2(dt, sumVec2(gravity, scaledVec2(b->invMa
 337:src/b2d_lite.c **** 	{
 338:src/b2d_lite.c **** 		struct Body* b = g_bodies[i];
 339:src/b2d_lite.c **** 
 340:src/b2d_lite.c **** 		if (b->invMass == 0.0f)
 341:src/b2d_lite.c **** 			continue;
 342:src/b2d_lite.c **** 
 343:src/b2d_lite.c **** 		addtoVec2(&b->velocity, scaledVec2(dt, sumVec2(gravity, scaledVec2(b->invMass, b->force))));
 2770              		.loc 1 343 3 view .LVU666
 2771 0032 DFF85081 		ldr	r8, .L133+20	@ tmp207,
 2772              	.LVL177:
 2773              	.L114:
 338:src/b2d_lite.c **** 
 2774              		.loc 1 338 3 is_stmt 1 view .LVU667
 2775              		.loc 1 343 3 view .LVU668
 2776              	@ src/b2d_lite.c:338: 		struct Body* b = g_bodies[i];
 338:src/b2d_lite.c **** 
 2777              		.loc 1 338 16 is_stmt 0 view .LVU669
 2778 0036 56F8044B 		ldr	r4, [r6], #4	@ b, MEM[base: _89, offset: 0B]
 2779              	.LVL178:
 340:src/b2d_lite.c **** 			continue;
 2780              		.loc 1 340 3 is_stmt 1 view .LVU670
 2781              	.LBE112:
 2782              	@ src/b2d_lite.c:336: 	for (int i = 0; i < g_numBodies; ++i)
 336:src/b2d_lite.c **** 	{
 2783              		.loc 1 336 35 is_stmt 0 view .LVU671
 2784 003a 0135     		adds	r5, r5, #1	@ i, i,
 2785              	.LVL179:
 2786              	.LBB113:
 2787              	@ src/b2d_lite.c:340: 		if (b->invMass == 0.0f)
 340:src/b2d_lite.c **** 			continue;
 2788              		.loc 1 340 8 view .LVU672
ARM GAS  /tmp/ccPfsSwR.s 			page 63


 2789 003c 94ED0D0A 		vldr.32	s0, [r4, #52]	@ _1, b_50->invMass
 2790              	@ src/b2d_lite.c:340: 		if (b->invMass == 0.0f)
 340:src/b2d_lite.c **** 			continue;
 2791              		.loc 1 340 6 view .LVU673
 2792 0040 B5EE400A 		vcmp.f32	s0, #0	@ _1
 2793 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2794 0048 35D0     		beq	.L113		@,
 2795              	@ src/b2d_lite.c:343: 		addtoVec2(&b->velocity, scaledVec2(dt, sumVec2(gravity, scaledVec2(b->invMa
 2796              		.loc 1 343 3 view .LVU674
 2797 004a D4ED060A 		vldr.32	s1, [r4, #24]	@, b_50->force
 2798 004e 94ED071A 		vldr.32	s2, [r4, #28]	@, b_50->force
 2799 0052 FFF7FEFF 		bl	scaledVec2		@
 2800              	.LVL180:
 2801 0056 F0EE601A 		vmov.f32	s3, s1	@ tmp210,
 2802 005a B0EE401A 		vmov.f32	s2, s0	@ tmp155, tmp209
 2803 005e 98ED000A 		vldr.32	s0, [r8]	@, gravity
 2804 0062 D8ED010A 		vldr.32	s1, [r8, #4]	@, gravity
 2805 0066 CDED011A 		vstr.32	s3, [sp, #4]	@ tmp156, D.7800
 2806 006a 8DED001A 		vstr.32	s2, [sp]	@ tmp155, D.7800
 2807 006e FFF7FEFF 		bl	sumVec2		@
 2808              	.LVL181:
 2809 0072 F0EE407A 		vmov.f32	s15, s0	@ tmp211,
 2810 0076 B0EE601A 		vmov.f32	s2, s1	@ tmp163, tmp212
 2811 007a B0EE480A 		vmov.f32	s0, s16	@, dt
 2812 007e F0EE670A 		vmov.f32	s1, s15	@, tmp162
 2813 0082 CDED027A 		vstr.32	s15, [sp, #8]	@ tmp162, D.7801
 2814 0086 8DED031A 		vstr.32	s2, [sp, #12]	@ tmp163, D.7801
 2815 008a FFF7FEFF 		bl	scaledVec2		@
 2816              	.LVL182:
 2817 008e 04F10C00 		add	r0, r4, #12	@, b,
 2818 0092 8DED040A 		vstr.32	s0, [sp, #16]	@ tmp213, D.7802
 2819 0096 CDED050A 		vstr.32	s1, [sp, #20]	@ tmp214, D.7802
 2820 009a FFF7FEFF 		bl	addtoVec2		@
 2821              	.LVL183:
 344:src/b2d_lite.c **** 		b->angularVelocity += dt * b->invI * b->torque;
 2822              		.loc 1 344 3 is_stmt 1 view .LVU675
 2823              	@ src/b2d_lite.c:344: 		b->angularVelocity += dt * b->invI * b->torque;
 2824              		.loc 1 344 28 is_stmt 0 view .LVU676
 2825 009e 94ED0F7A 		vldr.32	s14, [r4, #60]	@ b_50->invI, b_50->invI
 2826              	@ src/b2d_lite.c:344: 		b->angularVelocity += dt * b->invI * b->torque;
 2827              		.loc 1 344 22 view .LVU677
 2828 00a2 D4ED057A 		vldr.32	s15, [r4, #20]	@ b_50->angularVelocity, b_50->angularVelocity
 2829              	@ src/b2d_lite.c:344: 		b->angularVelocity += dt * b->invI * b->torque;
 2830              		.loc 1 344 28 view .LVU678
 2831 00a6 28EE077A 		vmul.f32	s14, s16, s14	@ tmp171, dt, b_50->invI
 2832              	@ src/b2d_lite.c:344: 		b->angularVelocity += dt * b->invI * b->torque;
 2833              		.loc 1 344 22 view .LVU679
 2834 00aa D4ED086A 		vldr.32	s13, [r4, #32]	@ b_50->torque, b_50->torque
 2835 00ae E7EE267A 		vfma.f32	s15, s14, s13	@ _8, tmp171, b_50->torque
 2836 00b2 C4ED057A 		vstr.32	s15, [r4, #20]	@ _8, b_50->angularVelocity
 2837              	.L113:
 2838              		.loc 1 344 22 view .LVU680
 2839              	.LBE113:
 336:src/b2d_lite.c **** 	{
 2840              		.loc 1 336 35 is_stmt 1 discriminator 2 view .LVU681
 2841              	.LVL184:
 336:src/b2d_lite.c **** 	{
ARM GAS  /tmp/ccPfsSwR.s 			page 64


 2842              		.loc 1 336 18 discriminator 2 view .LVU682
 2843              	@ src/b2d_lite.c:336: 	for (int i = 0; i < g_numBodies; ++i)
 336:src/b2d_lite.c **** 	{
 2844              		.loc 1 336 2 is_stmt 0 discriminator 2 view .LVU683
 2845 00b6 3B68     		ldr	r3, [r7]	@ g_numBodies, g_numBodies
 2846 00b8 AB42     		cmp	r3, r5	@ g_numBodies, i
 2847 00ba BCDC     		bgt	.L114		@,
 2848              	.LVL185:
 2849              	.L112:
 336:src/b2d_lite.c **** 	{
 2850              		.loc 1 336 2 discriminator 2 view .LVU684
 2851              	.LBE114:
 2852              	.LBB115:
 345:src/b2d_lite.c **** 	}
 346:src/b2d_lite.c **** 
 347:src/b2d_lite.c **** 	// Perform pre-steps.
 348:src/b2d_lite.c ****     
 349:src/b2d_lite.c ****     for (int i=0; i < g_numArbiters; i++)
 2853              		.loc 1 349 19 is_stmt 1 view .LVU685
 2854              	@ src/b2d_lite.c:349:     for (int i=0; i < g_numArbiters; i++)
 2855              		.loc 1 349 21 is_stmt 0 view .LVU686
 2856 00bc 2E4E     		ldr	r6, .L133+8	@ tmp205,
 2857              	@ src/b2d_lite.c:349:     for (int i=0; i < g_numArbiters; i++)
 2858              		.loc 1 349 5 view .LVU687
 2859 00be 3368     		ldr	r3, [r6]	@ g_numArbiters, g_numArbiters
 2860 00c0 002B     		cmp	r3, #0	@ g_numArbiters,
 2861 00c2 0BDD     		ble	.L115		@,
 2862 00c4 2D4D     		ldr	r5, .L133+12	@ ivtmp.165,
 2863              	@ src/b2d_lite.c:349:     for (int i=0; i < g_numArbiters; i++)
 2864              		.loc 1 349 14 view .LVU688
 2865 00c6 0024     		movs	r4, #0	@ i,
 2866              	.LVL186:
 2867              	.L116:
 350:src/b2d_lite.c ****     {
 351:src/b2d_lite.c ****         PreStep(&g_arbiters[i], inv_dt);
 2868              		.loc 1 351 9 is_stmt 1 discriminator 3 view .LVU689
 2869 00c8 2846     		mov	r0, r5	@, ivtmp.165
 2870 00ca B0EE680A 		vmov.f32	s0, s17	@, iftmp.23_26
 2871 00ce FFF7FEFF 		bl	PreStep		@
 2872              	.LVL187:
 349:src/b2d_lite.c ****     {
 2873              		.loc 1 349 38 discriminator 3 view .LVU690
 2874              	@ src/b2d_lite.c:349:     for (int i=0; i < g_numArbiters; i++)
 349:src/b2d_lite.c ****     {
 2875              		.loc 1 349 39 is_stmt 0 discriminator 3 view .LVU691
 2876 00d2 0134     		adds	r4, r4, #1	@ i, i,
 2877              	.LVL188:
 349:src/b2d_lite.c ****     {
 2878              		.loc 1 349 19 is_stmt 1 discriminator 3 view .LVU692
 2879              	@ src/b2d_lite.c:349:     for (int i=0; i < g_numArbiters; i++)
 349:src/b2d_lite.c ****     {
 2880              		.loc 1 349 5 is_stmt 0 discriminator 3 view .LVU693
 2881 00d4 3368     		ldr	r3, [r6]	@ g_numArbiters, g_numArbiters
 2882 00d6 9035     		adds	r5, r5, #144	@ ivtmp.165, ivtmp.165,
 2883 00d8 A342     		cmp	r3, r4	@ g_numArbiters, i
 2884 00da F5DC     		bgt	.L116		@,
 2885              	.LVL189:
ARM GAS  /tmp/ccPfsSwR.s 			page 65


 2886              	.L115:
 349:src/b2d_lite.c ****     {
 2887              		.loc 1 349 5 discriminator 3 view .LVU694
 2888              	.LBE115:
 2889              	.LBB116:
 352:src/b2d_lite.c ****     }
 353:src/b2d_lite.c **** 
 354:src/b2d_lite.c **** 	// Perform iterations
 355:src/b2d_lite.c **** 	for (int it = 0; it < iterations; ++it)
 2890              		.loc 1 355 19 is_stmt 1 view .LVU695
 2891              	@ src/b2d_lite.c:355: 	for (int it = 0; it < iterations; ++it)
 2892              		.loc 1 355 22 is_stmt 0 view .LVU696
 2893 00dc DFF8A890 		ldr	r9, .L133+24	@ tmp204,
 2894              	@ src/b2d_lite.c:355: 	for (int it = 0; it < iterations; ++it)
 2895              		.loc 1 355 2 view .LVU697
 2896 00e0 D9F80030 		ldr	r3, [r9]	@ iterations, iterations
 2897 00e4 002B     		cmp	r3, #0	@ iterations,
 2898 00e6 14DD     		ble	.L118		@,
 2899              	@ src/b2d_lite.c:355: 	for (int it = 0; it < iterations; ++it)
 2900              		.loc 1 355 11 view .LVU698
 2901 00e8 4FF00008 		mov	r8, #0	@ it,
 2902              	.LVL190:
 2903              	.L117:
 2904              	.LBB117:
 356:src/b2d_lite.c **** 	{
 357:src/b2d_lite.c ****         for (int i=0; i < g_numArbiters; i++)
 2905              		.loc 1 357 23 is_stmt 1 view .LVU699
 2906              	@ src/b2d_lite.c:357:         for (int i=0; i < g_numArbiters; i++)
 2907              		.loc 1 357 9 is_stmt 0 view .LVU700
 2908 00ec 3368     		ldr	r3, [r6]	@ g_numArbiters, g_numArbiters
 2909 00ee 002B     		cmp	r3, #0	@ g_numArbiters,
 2910 00f0 09DD     		ble	.L121		@,
 2911 00f2 224D     		ldr	r5, .L133+12	@ ivtmp.160,
 2912              	@ src/b2d_lite.c:357:         for (int i=0; i < g_numArbiters; i++)
 2913              		.loc 1 357 18 view .LVU701
 2914 00f4 0024     		movs	r4, #0	@ i,
 2915              	.LVL191:
 2916              	.L119:
 358:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2917              		.loc 1 358 13 is_stmt 1 discriminator 3 view .LVU702
 2918 00f6 2846     		mov	r0, r5	@, ivtmp.160
 2919              	@ src/b2d_lite.c:357:         for (int i=0; i < g_numArbiters; i++)
 357:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2920              		.loc 1 357 43 is_stmt 0 discriminator 3 view .LVU703
 2921 00f8 0134     		adds	r4, r4, #1	@ i, i,
 2922              	.LVL192:
 2923              	@ src/b2d_lite.c:358:             ApplyImpulse(&g_arbiters[i]);
 2924              		.loc 1 358 13 discriminator 3 view .LVU704
 2925 00fa FFF7FEFF 		bl	ApplyImpulse		@
 2926              	.LVL193:
 357:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2927              		.loc 1 357 42 is_stmt 1 discriminator 3 view .LVU705
 357:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2928              		.loc 1 357 23 discriminator 3 view .LVU706
 2929              	@ src/b2d_lite.c:357:         for (int i=0; i < g_numArbiters; i++)
 357:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2930              		.loc 1 357 9 is_stmt 0 discriminator 3 view .LVU707
ARM GAS  /tmp/ccPfsSwR.s 			page 66


 2931 00fe 3368     		ldr	r3, [r6]	@ g_numArbiters, g_numArbiters
 2932 0100 9035     		adds	r5, r5, #144	@ ivtmp.160, ivtmp.160,
 2933 0102 A342     		cmp	r3, r4	@ g_numArbiters, i
 2934 0104 F7DC     		bgt	.L119		@,
 2935              	.LVL194:
 2936              	.L121:
 357:src/b2d_lite.c ****             ApplyImpulse(&g_arbiters[i]);
 2937              		.loc 1 357 9 discriminator 3 view .LVU708
 2938              	.LBE117:
 355:src/b2d_lite.c **** 	{
 2939              		.loc 1 355 36 is_stmt 1 view .LVU709
 2940 0106 08F10108 		add	r8, r8, #1	@ it, it,
 2941              	.LVL195:
 355:src/b2d_lite.c **** 	{
 2942              		.loc 1 355 19 view .LVU710
 2943              	@ src/b2d_lite.c:355: 	for (int it = 0; it < iterations; ++it)
 355:src/b2d_lite.c **** 	{
 2944              		.loc 1 355 2 is_stmt 0 view .LVU711
 2945 010a D9F80030 		ldr	r3, [r9]	@ iterations, iterations
 2946 010e 4345     		cmp	r3, r8	@ iterations, it
 2947 0110 ECDC     		bgt	.L117		@,
 2948              	.LVL196:
 2949              	.L118:
 355:src/b2d_lite.c **** 	{
 2950              		.loc 1 355 2 view .LVU712
 2951              	.LBE116:
 2952              	.LBB118:
 359:src/b2d_lite.c **** 	}
 360:src/b2d_lite.c **** 
 361:src/b2d_lite.c **** 	// Integrate Velocities
 362:src/b2d_lite.c **** 	for (int i = 0; i < g_numBodies; ++i)
 2953              		.loc 1 362 18 is_stmt 1 view .LVU713
 2954              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 2955              		.loc 1 362 2 is_stmt 0 view .LVU714
 2956 0112 3B68     		ldr	r3, [r7]	@ g_numBodies, g_numBodies
 2957 0114 002B     		cmp	r3, #0	@ g_numBodies,
 2958 0116 23DD     		ble	.L109		@,
 2959 0118 DFF85880 		ldr	r8, .L133+4	@ ivtmp.157,
 2960              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 2961              		.loc 1 362 11 view .LVU715
 2962 011c 0026     		movs	r6, #0	@ i,
 2963              	.LBB119:
 2964              	@ src/b2d_lite.c:369: 		b->force.x=0;
 363:src/b2d_lite.c **** 	{
 364:src/b2d_lite.c **** 		struct Body* b = g_bodies[i];
 365:src/b2d_lite.c **** 
 366:src/b2d_lite.c **** 		addtoVec2(&b->position, scaledVec2(dt, b->velocity));
 367:src/b2d_lite.c **** 		b->rotation += dt * b->angularVelocity;
 368:src/b2d_lite.c **** 
 369:src/b2d_lite.c **** 		b->force.x=0;
 2965              		.loc 1 369 13 view .LVU716
 2966 011e 0025     		movs	r5, #0	@ tmp199,
 2967              	.LVL197:
 2968              	.L123:
 364:src/b2d_lite.c **** 
 2969              		.loc 1 364 3 is_stmt 1 discriminator 3 view .LVU717
 2970              	@ src/b2d_lite.c:364: 		struct Body* b = g_bodies[i];
ARM GAS  /tmp/ccPfsSwR.s 			page 67


 364:src/b2d_lite.c **** 
 2971              		.loc 1 364 16 is_stmt 0 discriminator 3 view .LVU718
 2972 0120 58F8044B 		ldr	r4, [r8], #4	@ b, MEM[base: _86, offset: 0B]
 2973              	.LVL198:
 366:src/b2d_lite.c **** 		b->rotation += dt * b->angularVelocity;
 2974              		.loc 1 366 3 is_stmt 1 discriminator 3 view .LVU719
 2975 0124 B0EE480A 		vmov.f32	s0, s16	@, dt
 2976              	.LBE119:
 2977              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 362:src/b2d_lite.c **** 	{
 2978              		.loc 1 362 35 is_stmt 0 discriminator 3 view .LVU720
 2979 0128 0136     		adds	r6, r6, #1	@ i, i,
 2980              	.LVL199:
 2981              	.LBB120:
 2982              	@ src/b2d_lite.c:366: 		addtoVec2(&b->position, scaledVec2(dt, b->velocity));
 366:src/b2d_lite.c **** 		b->rotation += dt * b->angularVelocity;
 2983              		.loc 1 366 3 discriminator 3 view .LVU721
 2984 012a D4ED030A 		vldr.32	s1, [r4, #12]	@, b_37->velocity
 2985 012e 94ED041A 		vldr.32	s2, [r4, #16]	@, b_37->velocity
 2986 0132 FFF7FEFF 		bl	scaledVec2		@
 2987              	.LVL200:
 2988 0136 2046     		mov	r0, r4	@, b
 2989 0138 8DED060A 		vstr.32	s0, [sp, #24]	@ tmp215, D.7803
 2990 013c CDED070A 		vstr.32	s1, [sp, #28]	@ tmp216, D.7803
 2991 0140 FFF7FEFF 		bl	addtoVec2		@
 2992              	.LVL201:
 367:src/b2d_lite.c **** 
 2993              		.loc 1 367 3 is_stmt 1 discriminator 3 view .LVU722
 2994              	@ src/b2d_lite.c:367: 		b->rotation += dt * b->angularVelocity;
 367:src/b2d_lite.c **** 
 2995              		.loc 1 367 15 is_stmt 0 discriminator 3 view .LVU723
 2996 0144 D4ED027A 		vldr.32	s15, [r4, #8]	@ b_37->rotation, b_37->rotation
 2997 0148 94ED057A 		vldr.32	s14, [r4, #20]	@ b_37->angularVelocity, b_37->angularVelocity
 2998              	.LBE120:
 2999              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 362:src/b2d_lite.c **** 	{
 3000              		.loc 1 362 2 discriminator 3 view .LVU724
 3001 014c 3B68     		ldr	r3, [r7]	@ g_numBodies, g_numBodies
 3002              	.LBB121:
 3003              	@ src/b2d_lite.c:367: 		b->rotation += dt * b->angularVelocity;
 367:src/b2d_lite.c **** 
 3004              		.loc 1 367 15 discriminator 3 view .LVU725
 3005 014e E7EE087A 		vfma.f32	s15, s14, s16	@ _19, b_37->angularVelocity, dt
 3006              	@ src/b2d_lite.c:369: 		b->force.x=0;
 3007              		.loc 1 369 13 discriminator 3 view .LVU726
 3008 0152 A561     		str	r5, [r4, #24]	@ float	@ tmp199, b_37->force.x
 3009              	.LBE121:
 3010              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 362:src/b2d_lite.c **** 	{
 3011              		.loc 1 362 2 discriminator 3 view .LVU727
 3012 0154 B342     		cmp	r3, r6	@ g_numBodies, i
 3013              	.LBB122:
 3014              	@ src/b2d_lite.c:370: 		b->force.y=0;
 370:src/b2d_lite.c **** 		b->force.y=0;
 3015              		.loc 1 370 13 discriminator 3 view .LVU728
 3016 0156 E561     		str	r5, [r4, #28]	@ float	@ tmp199, b_37->force.y
 3017              	@ src/b2d_lite.c:371: 		b->torque = 0.0f;
ARM GAS  /tmp/ccPfsSwR.s 			page 68


 371:src/b2d_lite.c **** 		b->torque = 0.0f;
 3018              		.loc 1 371 13 discriminator 3 view .LVU729
 3019 0158 2562     		str	r5, [r4, #32]	@ float	@ tmp199, b_37->torque
 3020              	@ src/b2d_lite.c:367: 		b->rotation += dt * b->angularVelocity;
 367:src/b2d_lite.c **** 
 3021              		.loc 1 367 15 discriminator 3 view .LVU730
 3022 015a C4ED027A 		vstr.32	s15, [r4, #8]	@ _19, b_37->rotation
 369:src/b2d_lite.c **** 		b->force.y=0;
 3023              		.loc 1 369 3 is_stmt 1 discriminator 3 view .LVU731
 370:src/b2d_lite.c **** 		b->force.y=0;
 3024              		.loc 1 370 3 discriminator 3 view .LVU732
 3025              		.loc 1 371 3 discriminator 3 view .LVU733
 3026              	.LBE122:
 362:src/b2d_lite.c **** 	{
 3027              		.loc 1 362 35 discriminator 3 view .LVU734
 3028              	.LVL202:
 362:src/b2d_lite.c **** 	{
 3029              		.loc 1 362 18 discriminator 3 view .LVU735
 3030              	@ src/b2d_lite.c:362: 	for (int i = 0; i < g_numBodies; ++i)
 362:src/b2d_lite.c **** 	{
 3031              		.loc 1 362 2 is_stmt 0 discriminator 3 view .LVU736
 3032 015e DFDC     		bgt	.L123		@,
 3033              	.LVL203:
 3034              	.L109:
 362:src/b2d_lite.c **** 	{
 3035              		.loc 1 362 2 discriminator 3 view .LVU737
 3036              	.LBE118:
 3037              	@ src/b2d_lite.c:373: }
 372:src/b2d_lite.c **** 	}
 373:src/b2d_lite.c **** }
 3038              		.loc 1 373 1 view .LVU738
 3039 0160 09B0     		add	sp, sp, #36	@,,
 3040              	.LCFI41:
 3041              		.cfi_remember_state
 3042              		.cfi_def_cfa_offset 36
 3043              		@ sp needed	@
 3044 0162 BDEC028B 		vldm	sp!, {d8}	@
 3045              	.LCFI42:
 3046              		.cfi_restore 80
 3047              		.cfi_restore 81
 3048              		.cfi_def_cfa_offset 28
 3049              	.LVL204:
 3050              		.loc 1 373 1 view .LVU739
 3051 0166 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}	@
 3052              	.LVL205:
 3053              	.L131:
 3054              	.LCFI43:
 3055              		.cfi_restore_state
 3056              	@ src/b2d_lite.c:330: 	float inv_dt = dt > 0.0f ? 1.0f / dt : 0.0f;
 330:src/b2d_lite.c **** 
 3057              		.loc 1 330 39 view .LVU740
 3058 016a DFED058A 		vldr.32	s17, .L133+16	@ iftmp.23_26,
 3059 016e 58E7     		b	.L110		@
 3060              	.L134:
 3061              		.align	2
 3062              	.L133:
 3063 0170 00000000 		.word	g_numBodies
ARM GAS  /tmp/ccPfsSwR.s 			page 69


 3064 0174 00000000 		.word	g_bodies
 3065 0178 00000000 		.word	g_numArbiters
 3066 017c 00000000 		.word	g_arbiters
 3067 0180 00000000 		.word	0
 3068 0184 00000000 		.word	gravity
 3069 0188 00000000 		.word	iterations
 3070              		.cfi_endproc
 3071              	.LFE11:
 3072              		.size	Step, .-Step
 3073              		.section	.text.initBody,"ax",%progbits
 3074              		.align	1
 3075              		.p2align 4,,15
 3076              		.global	initBody
 3077              		.syntax unified
 3078              		.thumb
 3079              		.thumb_func
 3080              		.fpu fpv5-sp-d16
 3081              		.type	initBody, %function
 3082              	initBody:
 3083              	.LVL206:
 3084              	.LFB12:
 374:src/b2d_lite.c **** 
 375:src/b2d_lite.c **** void initBody(struct Body* b, struct Vec2 w, float m)
 376:src/b2d_lite.c **** {
 3085              		.loc 1 376 1 is_stmt 1 view -0
 3086              		.cfi_startproc
 3087              		@ args = 0, pretend = 0, frame = 8
 3088              		@ frame_needed = 0, uses_anonymous_args = 0
 3089              		@ link register save eliminated.
 377:src/b2d_lite.c ****         
 378:src/b2d_lite.c ****     b->position.x=0;
 3090              		.loc 1 378 5 view .LVU742
 3091              	@ src/b2d_lite.c:392: 	if (b->mass < FLT_MAX)
 379:src/b2d_lite.c ****     b->position.y=0;
 380:src/b2d_lite.c ****     b->rotation=0;
 381:src/b2d_lite.c ****     b->velocity.x=0;
 382:src/b2d_lite.c ****     b->velocity.y=0;
 383:src/b2d_lite.c ****     b->angularVelocity=0;
 384:src/b2d_lite.c ****     b->force.x=0;
 385:src/b2d_lite.c ****     b->force.y=0;
 386:src/b2d_lite.c ****     b->torque=0.0f;
 387:src/b2d_lite.c ****     b->friction=0.2f;
 388:src/b2d_lite.c **** 
 389:src/b2d_lite.c ****     b->width = w;
 390:src/b2d_lite.c ****     b->mass = m;
 391:src/b2d_lite.c **** 
 392:src/b2d_lite.c **** 	if (b->mass < FLT_MAX)
 3092              		.loc 1 392 5 is_stmt 0 view .LVU743
 3093 0000 DFED247A 		vldr.32	s15, .L142	@ tmp134,
 3094              	@ src/b2d_lite.c:378:     b->position.x=0;
 378:src/b2d_lite.c ****     b->position.y=0;
 3095              		.loc 1 378 18 view .LVU744
 3096 0004 0022     		movs	r2, #0	@ tmp122,
 3097              	@ src/b2d_lite.c:387:     b->friction=0.2f;
 387:src/b2d_lite.c **** 
 3098              		.loc 1 387 16 view .LVU745
 3099 0006 2449     		ldr	r1, .L142+4	@ tmp131,
ARM GAS  /tmp/ccPfsSwR.s 			page 70


 3100              	@ src/b2d_lite.c:376: {
 376:src/b2d_lite.c ****         
 3101              		.loc 1 376 1 view .LVU746
 3102 0008 0346     		mov	r3, r0	@ b, tmp145
 3103              	@ src/b2d_lite.c:392: 	if (b->mass < FLT_MAX)
 3104              		.loc 1 392 5 view .LVU747
 3105 000a B4EEE71A 		vcmpe.f32	s2, s15	@ m, tmp134
 3106              	@ src/b2d_lite.c:376: {
 376:src/b2d_lite.c ****         
 3107              		.loc 1 376 1 view .LVU748
 3108 000e 10B4     		push	{r4}	@
 3109              	.LCFI44:
 3110              		.cfi_def_cfa_offset 4
 3111              		.cfi_offset 4, -4
 3112 0010 83B0     		sub	sp, sp, #12	@,,
 3113              	.LCFI45:
 3114              		.cfi_def_cfa_offset 16
 3115              	@ src/b2d_lite.c:387:     b->friction=0.2f;
 387:src/b2d_lite.c **** 
 3116              		.loc 1 387 16 view .LVU749
 3117 0012 C162     		str	r1, [r0, #44]	@ float	@ tmp131, b_12(D)->friction
 3118              	@ src/b2d_lite.c:392: 	if (b->mass < FLT_MAX)
 3119              		.loc 1 392 5 view .LVU750
 3120 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3121              	@ src/b2d_lite.c:378:     b->position.x=0;
 378:src/b2d_lite.c ****     b->position.y=0;
 3122              		.loc 1 378 18 view .LVU751
 3123 0018 0260     		str	r2, [r0]	@ float	@ tmp122, b_12(D)->position.x
 379:src/b2d_lite.c ****     b->rotation=0;
 3124              		.loc 1 379 5 is_stmt 1 view .LVU752
 3125              	@ src/b2d_lite.c:389:     b->width = w;
 389:src/b2d_lite.c ****     b->mass = m;
 3126              		.loc 1 389 14 is_stmt 0 view .LVU753
 3127 001a 02A9     		add	r1, sp, #8	@ tmp149,,
 3128              	@ src/b2d_lite.c:379:     b->position.y=0;
 379:src/b2d_lite.c ****     b->rotation=0;
 3129              		.loc 1 379 18 view .LVU754
 3130 001c 4260     		str	r2, [r0, #4]	@ float	@ tmp122, b_12(D)->position.y
 380:src/b2d_lite.c ****     b->velocity.x=0;
 3131              		.loc 1 380 5 is_stmt 1 view .LVU755
 3132              	@ src/b2d_lite.c:380:     b->rotation=0;
 380:src/b2d_lite.c ****     b->velocity.x=0;
 3133              		.loc 1 380 16 is_stmt 0 view .LVU756
 3134 001e 8260     		str	r2, [r0, #8]	@ float	@ tmp122, b_12(D)->rotation
 381:src/b2d_lite.c ****     b->velocity.y=0;
 3135              		.loc 1 381 5 is_stmt 1 view .LVU757
 3136              	@ src/b2d_lite.c:389:     b->width = w;
 389:src/b2d_lite.c ****     b->mass = m;
 3137              		.loc 1 389 14 is_stmt 0 view .LVU758
 3138 0020 00F12404 		add	r4, r0, #36	@ tmp132, b,
 3139              	@ src/b2d_lite.c:381:     b->velocity.x=0;
 381:src/b2d_lite.c ****     b->velocity.y=0;
 3140              		.loc 1 381 18 view .LVU759
 3141 0024 C260     		str	r2, [r0, #12]	@ float	@ tmp122, b_12(D)->velocity.x
 382:src/b2d_lite.c ****     b->angularVelocity=0;
 3142              		.loc 1 382 5 is_stmt 1 view .LVU760
 3143              	@ src/b2d_lite.c:382:     b->velocity.y=0;
ARM GAS  /tmp/ccPfsSwR.s 			page 71


 382:src/b2d_lite.c ****     b->angularVelocity=0;
 3144              		.loc 1 382 18 is_stmt 0 view .LVU761
 3145 0026 0261     		str	r2, [r0, #16]	@ float	@ tmp122, b_12(D)->velocity.y
 383:src/b2d_lite.c ****     b->force.x=0;
 3146              		.loc 1 383 5 is_stmt 1 view .LVU762
 3147              	@ src/b2d_lite.c:383:     b->angularVelocity=0;
 383:src/b2d_lite.c ****     b->force.x=0;
 3148              		.loc 1 383 23 is_stmt 0 view .LVU763
 3149 0028 4261     		str	r2, [r0, #20]	@ float	@ tmp122, b_12(D)->angularVelocity
 384:src/b2d_lite.c ****     b->force.y=0;
 3150              		.loc 1 384 5 is_stmt 1 view .LVU764
 3151              	@ src/b2d_lite.c:384:     b->force.x=0;
 384:src/b2d_lite.c ****     b->force.y=0;
 3152              		.loc 1 384 15 is_stmt 0 view .LVU765
 3153 002a 8261     		str	r2, [r0, #24]	@ float	@ tmp122, b_12(D)->force.x
 385:src/b2d_lite.c ****     b->torque=0.0f;
 3154              		.loc 1 385 5 is_stmt 1 view .LVU766
 3155              	@ src/b2d_lite.c:385:     b->force.y=0;
 385:src/b2d_lite.c ****     b->torque=0.0f;
 3156              		.loc 1 385 15 is_stmt 0 view .LVU767
 3157 002c C261     		str	r2, [r0, #28]	@ float	@ tmp122, b_12(D)->force.y
 386:src/b2d_lite.c ****     b->friction=0.2f;
 3158              		.loc 1 386 5 is_stmt 1 view .LVU768
 3159              	@ src/b2d_lite.c:386:     b->torque=0.0f;
 386:src/b2d_lite.c ****     b->friction=0.2f;
 3160              		.loc 1 386 14 is_stmt 0 view .LVU769
 3161 002e 0262     		str	r2, [r0, #32]	@ float	@ tmp122, b_12(D)->torque
 387:src/b2d_lite.c **** 
 3162              		.loc 1 387 5 is_stmt 1 view .LVU770
 389:src/b2d_lite.c ****     b->mass = m;
 3163              		.loc 1 389 5 view .LVU771
 3164              	@ src/b2d_lite.c:376: {
 376:src/b2d_lite.c ****         
 3165              		.loc 1 376 1 is_stmt 0 view .LVU772
 3166 0030 8DED000A 		vstr.32	s0, [sp]	@ tmp146, w
 3167 0034 CDED010A 		vstr.32	s1, [sp, #4]	@ tmp147, w
 3168              	@ src/b2d_lite.c:389:     b->width = w;
 389:src/b2d_lite.c ****     b->mass = m;
 3169              		.loc 1 389 14 view .LVU773
 3170 0038 11E90300 		ldmdb	r1, {r0, r1}	@ tmp149,,
 3171              	.LVL207:
 389:src/b2d_lite.c ****     b->mass = m;
 3172              		.loc 1 389 14 view .LVU774
 3173 003c 84E80300 		stm	r4, {r0, r1}	@ tmp132,,
 390:src/b2d_lite.c **** 
 3174              		.loc 1 390 5 is_stmt 1 view .LVU775
 3175              	@ src/b2d_lite.c:390:     b->mass = m;
 390:src/b2d_lite.c **** 
 3176              		.loc 1 390 13 is_stmt 0 view .LVU776
 3177 0040 83ED0C1A 		vstr.32	s2, [r3, #48]	@ m, b_12(D)->mass
 3178              		.loc 1 392 2 is_stmt 1 view .LVU777
 3179              	@ src/b2d_lite.c:392: 	if (b->mass < FLT_MAX)
 3180              		.loc 1 392 5 is_stmt 0 view .LVU778
 3181 0044 1DD5     		bpl	.L140		@,
 393:src/b2d_lite.c **** 	{
 394:src/b2d_lite.c **** 		b->invMass = 1.0f / b->mass;
 3182              		.loc 1 394 3 is_stmt 1 view .LVU779
ARM GAS  /tmp/ccPfsSwR.s 			page 72


 3183              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 395:src/b2d_lite.c **** 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0f;
 3184              		.loc 1 395 55 is_stmt 0 view .LVU780
 3185 0046 D3ED0A7A 		vldr.32	s15, [r3, #40]	@ _4, b_12(D)->width.y
 3186              	@ src/b2d_lite.c:394: 		b->invMass = 1.0f / b->mass;
 394:src/b2d_lite.c **** 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0f;
 3187              		.loc 1 394 21 view .LVU781
 3188 004a B7EE007A 		vmov.f32	s14, #1.0e+0	@ tmp136,
 3189              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3190              		.loc 1 395 29 view .LVU782
 3191 004e D3ED096A 		vldr.32	s13, [r3, #36]	@ _2, b_12(D)->width.x
 3192              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3193              		.loc 1 395 72 view .LVU783
 3194 0052 F2EE085A 		vmov.f32	s11, #1.2e+1	@ tmp139,
 3195              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3196              		.loc 1 395 58 view .LVU784
 3197 0056 67EEA77A 		vmul.f32	s15, s15, s15	@ tmp137, _4, _4
 3198              	@ src/b2d_lite.c:394: 		b->invMass = 1.0f / b->mass;
 394:src/b2d_lite.c **** 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0f;
 3199              		.loc 1 394 21 view .LVU785
 3200 005a 87EE016A 		vdiv.f32	s12, s14, s2	@ tmp135, tmp136, m
 3201              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3202              		.loc 1 395 45 view .LVU786
 3203 005e E6EEA67A 		vfma.f32	s15, s13, s13	@ _6, _2, _2
 3204              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3205              		.loc 1 395 18 view .LVU787
 3206 0062 27EE811A 		vmul.f32	s2, s15, s2	@ tmp138, _6, m
 3207              	.LVL208:
 3208              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 3209              		.loc 1 395 72 view .LVU788
 3210 0066 C1EE257A 		vdiv.f32	s15, s2, s11	@ _8, tmp138, tmp139
 3211              	@ src/b2d_lite.c:394: 		b->invMass = 1.0f / b->mass;
 394:src/b2d_lite.c **** 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0f;
 3212              		.loc 1 394 14 view .LVU789
 3213 006a 83ED0D6A 		vstr.32	s12, [r3, #52]	@ tmp135, b_12(D)->invMass
 3214              		.loc 1 395 3 is_stmt 1 view .LVU790
 3215              	@ src/b2d_lite.c:396: 		b->invI = 1.0f / b->I;
 396:src/b2d_lite.c **** 		b->invI = 1.0f / b->I;
 3216              		.loc 1 396 18 is_stmt 0 view .LVU791
 3217 006e C7EE276A 		vdiv.f32	s13, s14, s15	@ tmp140, tmp136, _8
 3218              	@ src/b2d_lite.c:395: 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0
 395:src/b2d_lite.c **** 		b->I = b->mass * (b->width.x * b->width.x + b->width.y * b->width.y) / 12.0f;
 3219              		.loc 1 395 8 view .LVU792
 3220 0072 C3ED0E7A 		vstr.32	s15, [r3, #56]	@ _8, b_12(D)->I
 3221              		.loc 1 396 3 is_stmt 1 view .LVU793
 3222              	@ src/b2d_lite.c:396: 		b->invI = 1.0f / b->I;
 3223              		.loc 1 396 11 is_stmt 0 view .LVU794
 3224 0076 C3ED0F6A 		vstr.32	s13, [r3, #60]	@ tmp140, b_12(D)->invI
 3225              	@ src/b2d_lite.c:404: }    
 397:src/b2d_lite.c **** 	}
 398:src/b2d_lite.c **** 	else
 399:src/b2d_lite.c **** 	{
 400:src/b2d_lite.c **** 		b->invMass = 0.0f;
 401:src/b2d_lite.c **** 		b->I = FLT_MAX;
 402:src/b2d_lite.c **** 		b->invI = 0.0f;
 403:src/b2d_lite.c **** 	}
 404:src/b2d_lite.c **** }    
ARM GAS  /tmp/ccPfsSwR.s 			page 73


 3226              		.loc 1 404 1 view .LVU795
 3227 007a 03B0     		add	sp, sp, #12	@,,
 3228              	.LCFI46:
 3229              		.cfi_remember_state
 3230              		.cfi_def_cfa_offset 4
 3231              		@ sp needed	@
 3232 007c 5DF8044B 		ldr	r4, [sp], #4	@,
 3233              	.LCFI47:
 3234              		.cfi_restore 4
 3235              		.cfi_def_cfa_offset 0
 3236 0080 7047     		bx	lr	@
 3237              	.LVL209:
 3238              	.L140:
 3239              	.LCFI48:
 3240              		.cfi_restore_state
 400:src/b2d_lite.c **** 		b->I = FLT_MAX;
 3241              		.loc 1 400 3 is_stmt 1 view .LVU796
 3242              	@ src/b2d_lite.c:400: 		b->invMass = 0.0f;
 400:src/b2d_lite.c **** 		b->I = FLT_MAX;
 3243              		.loc 1 400 14 is_stmt 0 view .LVU797
 3244 0082 5A63     		str	r2, [r3, #52]	@ float	@ tmp122, b_12(D)->invMass
 401:src/b2d_lite.c **** 		b->invI = 0.0f;
 3245              		.loc 1 401 3 is_stmt 1 view .LVU798
 3246              	@ src/b2d_lite.c:401: 		b->I = FLT_MAX;
 401:src/b2d_lite.c **** 		b->invI = 0.0f;
 3247              		.loc 1 401 8 is_stmt 0 view .LVU799
 3248 0084 C3ED0E7A 		vstr.32	s15, [r3, #56]	@ tmp134, b_12(D)->I
 402:src/b2d_lite.c **** 	}
 3249              		.loc 1 402 3 is_stmt 1 view .LVU800
 3250              	@ src/b2d_lite.c:402: 		b->invI = 0.0f;
 402:src/b2d_lite.c **** 	}
 3251              		.loc 1 402 11 is_stmt 0 view .LVU801
 3252 0088 DA63     		str	r2, [r3, #60]	@ float	@ tmp122, b_12(D)->invI
 3253              	@ src/b2d_lite.c:404: }    
 3254              		.loc 1 404 1 view .LVU802
 3255 008a 03B0     		add	sp, sp, #12	@,,
 3256              	.LCFI49:
 3257              		.cfi_def_cfa_offset 4
 3258              		@ sp needed	@
 3259 008c 5DF8044B 		ldr	r4, [sp], #4	@,
 3260              	.LCFI50:
 3261              		.cfi_restore 4
 3262              		.cfi_def_cfa_offset 0
 3263 0090 7047     		bx	lr	@
 3264              	.L143:
 3265 0092 00BF     		.align	2
 3266              	.L142:
 3267 0094 FFFF7F7F 		.word	2139095039
 3268 0098 CDCC4C3E 		.word	1045220557
 3269              		.cfi_endproc
 3270              	.LFE12:
 3271              		.size	initBody, .-initBody
 3272              		.section	.text.addBody,"ax",%progbits
 3273              		.align	1
 3274              		.p2align 4,,15
 3275              		.global	addBody
 3276              		.syntax unified
ARM GAS  /tmp/ccPfsSwR.s 			page 74


 3277              		.thumb
 3278              		.thumb_func
 3279              		.fpu fpv5-sp-d16
 3280              		.type	addBody, %function
 3281              	addBody:
 3282              	.LVL210:
 3283              	.LFB13:
 405:src/b2d_lite.c **** 
 406:src/b2d_lite.c **** void addBody(struct Body *b)
 407:src/b2d_lite.c **** {
 3284              		.loc 1 407 1 is_stmt 1 view -0
 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 0
 3287              		@ frame_needed = 0, uses_anonymous_args = 0
 3288              		@ link register save eliminated.
 408:src/b2d_lite.c ****     g_bodies[g_numBodies]=b;
 3289              		.loc 1 408 5 view .LVU804
 3290              	@ src/b2d_lite.c:408:     g_bodies[g_numBodies]=b;
 3291              		.loc 1 408 13 is_stmt 0 view .LVU805
 3292 0000 054B     		ldr	r3, .L146	@ tmp113,
 3293 0002 1A68     		ldr	r2, [r3]	@ g_numBodies.29_1, g_numBodies
 3294              	@ src/b2d_lite.c:407: {
 407:src/b2d_lite.c ****     g_bodies[g_numBodies]=b;
 3295              		.loc 1 407 1 view .LVU806
 3296 0004 10B4     		push	{r4}	@
 3297              	.LCFI51:
 3298              		.cfi_def_cfa_offset 4
 3299              		.cfi_offset 4, -4
 3300              	@ src/b2d_lite.c:409:     g_numBodies++;
 409:src/b2d_lite.c ****     g_numBodies++;
 3301              		.loc 1 409 16 view .LVU807
 3302 0006 511C     		adds	r1, r2, #1	@ tmp116, g_numBodies.29_1,
 3303              	@ src/b2d_lite.c:408:     g_bodies[g_numBodies]=b;
 408:src/b2d_lite.c ****     g_bodies[g_numBodies]=b;
 3304              		.loc 1 408 26 view .LVU808
 3305 0008 044C     		ldr	r4, .L146+4	@ tmp114,
 3306              	@ src/b2d_lite.c:409:     g_numBodies++;
 3307              		.loc 1 409 16 view .LVU809
 3308 000a 1960     		str	r1, [r3]	@ tmp116, g_numBodies
 3309              	@ src/b2d_lite.c:408:     g_bodies[g_numBodies]=b;
 408:src/b2d_lite.c ****     g_bodies[g_numBodies]=b;
 3310              		.loc 1 408 26 view .LVU810
 3311 000c 44F82200 		str	r0, [r4, r2, lsl #2]	@ tmp117, g_bodies
 3312              		.loc 1 409 5 is_stmt 1 view .LVU811
 3313              	@ src/b2d_lite.c:410: }
 410:src/b2d_lite.c **** }
 3314              		.loc 1 410 1 is_stmt 0 view .LVU812
 3315 0010 5DF8044B 		ldr	r4, [sp], #4	@,
 3316              	.LCFI52:
 3317              		.cfi_restore 4
 3318              		.cfi_def_cfa_offset 0
 3319 0014 7047     		bx	lr	@
 3320              	.L147:
 3321 0016 00BF     		.align	2
 3322              	.L146:
 3323 0018 00000000 		.word	g_numBodies
 3324 001c 00000000 		.word	g_bodies
ARM GAS  /tmp/ccPfsSwR.s 			page 75


 3325              		.cfi_endproc
 3326              	.LFE13:
 3327              		.size	addBody, .-addBody
 3328              		.section	.text.getBody,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 4,,15
 3331              		.global	getBody
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-sp-d16
 3336              		.type	getBody, %function
 3337              	getBody:
 3338              	.LVL211:
 3339              	.LFB14:
 411:src/b2d_lite.c **** 
 412:src/b2d_lite.c **** struct Body* getBody(int i)
 413:src/b2d_lite.c **** {
 3340              		.loc 1 413 1 is_stmt 1 view -0
 3341              		.cfi_startproc
 3342              		@ args = 0, pretend = 0, frame = 0
 3343              		@ frame_needed = 0, uses_anonymous_args = 0
 3344              		@ link register save eliminated.
 414:src/b2d_lite.c ****     return g_bodies[i];
 3345              		.loc 1 414 5 view .LVU814
 3346              	@ src/b2d_lite.c:414:     return g_bodies[i];
 3347              		.loc 1 414 20 is_stmt 0 view .LVU815
 3348 0000 014B     		ldr	r3, .L149	@ tmp113,
 3349              	@ src/b2d_lite.c:415: }
 415:src/b2d_lite.c **** }
 3350              		.loc 1 415 1 view .LVU816
 3351 0002 53F82000 		ldr	r0, [r3, r0, lsl #2]	@, g_bodies
 3352              	.LVL212:
 3353              		.loc 1 415 1 view .LVU817
 3354 0006 7047     		bx	lr	@
 3355              	.L150:
 3356              		.align	2
 3357              	.L149:
 3358 0008 00000000 		.word	g_bodies
 3359              		.cfi_endproc
 3360              	.LFE14:
 3361              		.size	getBody, .-getBody
 3362              		.global	positionCorrection
 3363              		.global	warmStarting
 3364              		.global	accumulateImpulses
 3365              		.comm	iterations,4,4
 3366              		.comm	gravity,8,4
 3367              		.comm	g_numArbiters,4,4
 3368              		.comm	g_arbiterKeys,800,4
 3369              		.comm	g_arbiters,14400,4
 3370              		.comm	g_numBodies,4,4
 3371              		.comm	g_bodies,400,4
 3372              		.section	.data.accumulateImpulses,"aw"
 3373              		.align	2
 3374              		.set	.LANCHOR2,. + 0
 3375              		.type	accumulateImpulses, %object
 3376              		.size	accumulateImpulses, 4
ARM GAS  /tmp/ccPfsSwR.s 			page 76


 3377              	accumulateImpulses:
 3378 0000 01000000 		.word	1
 3379              		.section	.data.positionCorrection,"aw"
 3380              		.align	2
 3381              		.set	.LANCHOR1,. + 0
 3382              		.type	positionCorrection, %object
 3383              		.size	positionCorrection, 4
 3384              	positionCorrection:
 3385 0000 01000000 		.word	1
 3386              		.section	.data.warmStarting,"aw"
 3387              		.align	2
 3388              		.set	.LANCHOR0,. + 0
 3389              		.type	warmStarting, %object
 3390              		.size	warmStarting, 4
 3391              	warmStarting:
 3392 0000 01000000 		.word	1
 3393              		.text
 3394              	.Letext0:
 3395              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3396              		.file 3 "/usr/include/newlib/sys/_types.h"
 3397              		.file 4 "/usr/include/newlib/sys/reent.h"
 3398              		.file 5 "/usr/include/newlib/sys/lock.h"
 3399              		.file 6 "/usr/include/newlib/math.h"
 3400              		.file 7 "/usr/include/newlib/stdlib.h"
 3401              		.file 8 "src/mathutils.h"
 3402              		.file 9 "src/collide.h"
 3403              		.file 10 "<built-in>"
 3404              		.section	.debug_info,"",%progbits
 3405              	.Ldebug_info0:
 3406 0000 4B1B0000 		.4byte	0x1b4b
 3407 0004 0200     		.2byte	0x2
 3408 0006 00000000 		.4byte	.Ldebug_abbrev0
 3409 000a 04       		.byte	0x4
 3410 000b 01       		.uleb128 0x1
 3411 000c 5E070000 		.4byte	.LASF171
 3412 0010 0C       		.byte	0xc
 3413 0011 00000000 		.4byte	.LASF172
 3414 0015 9B020000 		.4byte	.LASF173
 3415 0019 10030000 		.4byte	.Ldebug_ranges0+0x310
 3416 001d 00000000 		.4byte	0
 3417 0021 00000000 		.4byte	0
 3418 0025 00000000 		.4byte	.Ldebug_line0
 3419 0029 02       		.uleb128 0x2
 3420 002a 04       		.byte	0x4
 3421 002b 04       		.byte	0x4
 3422 002c 83010000 		.4byte	.LASF0
 3423 0030 02       		.uleb128 0x2
 3424 0031 01       		.byte	0x1
 3425 0032 06       		.byte	0x6
 3426 0033 4B070000 		.4byte	.LASF1
 3427 0037 02       		.uleb128 0x2
 3428 0038 01       		.byte	0x1
 3429 0039 08       		.byte	0x8
 3430 003a 8F060000 		.4byte	.LASF2
 3431 003e 02       		.uleb128 0x2
 3432 003f 02       		.byte	0x2
 3433 0040 05       		.byte	0x5
ARM GAS  /tmp/ccPfsSwR.s 			page 77


 3434 0041 06050000 		.4byte	.LASF3
 3435 0045 02       		.uleb128 0x2
 3436 0046 02       		.byte	0x2
 3437 0047 07       		.byte	0x7
 3438 0048 51080000 		.4byte	.LASF4
 3439 004c 02       		.uleb128 0x2
 3440 004d 04       		.byte	0x4
 3441 004e 05       		.byte	0x5
 3442 004f 19050000 		.4byte	.LASF5
 3443 0053 02       		.uleb128 0x2
 3444 0054 04       		.byte	0x4
 3445 0055 07       		.byte	0x7
 3446 0056 17060000 		.4byte	.LASF6
 3447 005a 02       		.uleb128 0x2
 3448 005b 08       		.byte	0x8
 3449 005c 05       		.byte	0x5
 3450 005d F8030000 		.4byte	.LASF7
 3451 0061 02       		.uleb128 0x2
 3452 0062 08       		.byte	0x8
 3453 0063 07       		.byte	0x7
 3454 0064 D0010000 		.4byte	.LASF8
 3455 0068 03       		.uleb128 0x3
 3456 0069 04       		.byte	0x4
 3457 006a 05       		.byte	0x5
 3458 006b 696E7400 		.ascii	"int\000"
 3459 006f 02       		.uleb128 0x2
 3460 0070 04       		.byte	0x4
 3461 0071 07       		.byte	0x7
 3462 0072 6E000000 		.4byte	.LASF9
 3463 0076 02       		.uleb128 0x2
 3464 0077 08       		.byte	0x8
 3465 0078 04       		.byte	0x4
 3466 0079 C2040000 		.4byte	.LASF10
 3467 007d 04       		.uleb128 0x4
 3468 007e 04       		.byte	0x4
 3469 007f 05       		.uleb128 0x5
 3470 0080 47060000 		.4byte	.LASF11
 3471 0084 02       		.byte	0x2
 3472 0085 5E01     		.2byte	0x15e
 3473 0087 17       		.byte	0x17
 3474 0088 6F000000 		.4byte	0x6f
 3475 008c 06       		.uleb128 0x6
 3476 008d 81080000 		.4byte	.LASF12
 3477 0091 03       		.byte	0x3
 3478 0092 2E       		.byte	0x2e
 3479 0093 0E       		.byte	0xe
 3480 0094 4C000000 		.4byte	0x4c
 3481 0098 06       		.uleb128 0x6
 3482 0099 16010000 		.4byte	.LASF13
 3483 009d 03       		.byte	0x3
 3484 009e 74       		.byte	0x74
 3485 009f 0E       		.byte	0xe
 3486 00a0 4C000000 		.4byte	0x4c
 3487 00a4 07       		.uleb128 0x7
 3488 00a5 04       		.byte	0x4
 3489 00a6 03       		.byte	0x3
 3490 00a7 A5       		.byte	0xa5
ARM GAS  /tmp/ccPfsSwR.s 			page 78


 3491 00a8 03       		.byte	0x3
 3492 00a9 C6000000 		.4byte	0xc6
 3493 00ad 08       		.uleb128 0x8
 3494 00ae 8D030000 		.4byte	.LASF14
 3495 00b2 03       		.byte	0x3
 3496 00b3 A7       		.byte	0xa7
 3497 00b4 0C       		.byte	0xc
 3498 00b5 7F000000 		.4byte	0x7f
 3499 00b9 08       		.uleb128 0x8
 3500 00ba 45050000 		.4byte	.LASF15
 3501 00be 03       		.byte	0x3
 3502 00bf A8       		.byte	0xa8
 3503 00c0 13       		.byte	0x13
 3504 00c1 C6000000 		.4byte	0xc6
 3505 00c5 00       		.byte	0
 3506 00c6 09       		.uleb128 0x9
 3507 00c7 37000000 		.4byte	0x37
 3508 00cb D6000000 		.4byte	0xd6
 3509 00cf 0A       		.uleb128 0xa
 3510 00d0 6F000000 		.4byte	0x6f
 3511 00d4 03       		.byte	0x3
 3512 00d5 00       		.byte	0
 3513 00d6 0B       		.uleb128 0xb
 3514 00d7 08       		.byte	0x8
 3515 00d8 03       		.byte	0x3
 3516 00d9 A2       		.byte	0xa2
 3517 00da 09       		.byte	0x9
 3518 00db FE000000 		.4byte	0xfe
 3519 00df 0C       		.uleb128 0xc
 3520 00e0 7B010000 		.4byte	.LASF16
 3521 00e4 03       		.byte	0x3
 3522 00e5 A4       		.byte	0xa4
 3523 00e6 07       		.byte	0x7
 3524 00e7 68000000 		.4byte	0x68
 3525 00eb 02       		.byte	0x2
 3526 00ec 23       		.byte	0x23
 3527 00ed 00       		.uleb128 0
 3528 00ee 0C       		.uleb128 0xc
 3529 00ef E3020000 		.4byte	.LASF17
 3530 00f3 03       		.byte	0x3
 3531 00f4 A9       		.byte	0xa9
 3532 00f5 05       		.byte	0x5
 3533 00f6 A4000000 		.4byte	0xa4
 3534 00fa 02       		.byte	0x2
 3535 00fb 23       		.byte	0x23
 3536 00fc 04       		.uleb128 0x4
 3537 00fd 00       		.byte	0
 3538 00fe 06       		.uleb128 0x6
 3539 00ff 69040000 		.4byte	.LASF18
 3540 0103 03       		.byte	0x3
 3541 0104 AA       		.byte	0xaa
 3542 0105 03       		.byte	0x3
 3543 0106 D6000000 		.4byte	0xd6
 3544 010a 06       		.uleb128 0x6
 3545 010b 1C040000 		.4byte	.LASF19
 3546 010f 04       		.byte	0x4
 3547 0110 16       		.byte	0x16
ARM GAS  /tmp/ccPfsSwR.s 			page 79


 3548 0111 19       		.byte	0x19
 3549 0112 53000000 		.4byte	0x53
 3550 0116 06       		.uleb128 0x6
 3551 0117 C8000000 		.4byte	.LASF20
 3552 011b 05       		.byte	0x5
 3553 011c 0C       		.byte	0xc
 3554 011d 0D       		.byte	0xd
 3555 011e 68000000 		.4byte	0x68
 3556 0122 06       		.uleb128 0x6
 3557 0123 72030000 		.4byte	.LASF21
 3558 0127 04       		.byte	0x4
 3559 0128 23       		.byte	0x23
 3560 0129 1B       		.byte	0x1b
 3561 012a 16010000 		.4byte	0x116
 3562 012e 0D       		.uleb128 0xd
 3563 012f 34010000 		.4byte	.LASF26
 3564 0133 18       		.byte	0x18
 3565 0134 04       		.byte	0x4
 3566 0135 34       		.byte	0x34
 3567 0136 08       		.byte	0x8
 3568 0137 94010000 		.4byte	0x194
 3569 013b 0C       		.uleb128 0xc
 3570 013c C7020000 		.4byte	.LASF22
 3571 0140 04       		.byte	0x4
 3572 0141 36       		.byte	0x36
 3573 0142 13       		.byte	0x13
 3574 0143 94010000 		.4byte	0x194
 3575 0147 02       		.byte	0x2
 3576 0148 23       		.byte	0x23
 3577 0149 00       		.uleb128 0
 3578 014a 0E       		.uleb128 0xe
 3579 014b 5F6B00   		.ascii	"_k\000"
 3580 014e 04       		.byte	0x4
 3581 014f 37       		.byte	0x37
 3582 0150 07       		.byte	0x7
 3583 0151 68000000 		.4byte	0x68
 3584 0155 02       		.byte	0x2
 3585 0156 23       		.byte	0x23
 3586 0157 04       		.uleb128 0x4
 3587 0158 0C       		.uleb128 0xc
 3588 0159 D2050000 		.4byte	.LASF23
 3589 015d 04       		.byte	0x4
 3590 015e 37       		.byte	0x37
 3591 015f 0B       		.byte	0xb
 3592 0160 68000000 		.4byte	0x68
 3593 0164 02       		.byte	0x2
 3594 0165 23       		.byte	0x23
 3595 0166 08       		.uleb128 0x8
 3596 0167 0C       		.uleb128 0xc
 3597 0168 27050000 		.4byte	.LASF24
 3598 016c 04       		.byte	0x4
 3599 016d 37       		.byte	0x37
 3600 016e 14       		.byte	0x14
 3601 016f 68000000 		.4byte	0x68
 3602 0173 02       		.byte	0x2
 3603 0174 23       		.byte	0x23
 3604 0175 0C       		.uleb128 0xc
ARM GAS  /tmp/ccPfsSwR.s 			page 80


 3605 0176 0C       		.uleb128 0xc
 3606 0177 FC010000 		.4byte	.LASF25
 3607 017b 04       		.byte	0x4
 3608 017c 37       		.byte	0x37
 3609 017d 1B       		.byte	0x1b
 3610 017e 68000000 		.4byte	0x68
 3611 0182 02       		.byte	0x2
 3612 0183 23       		.byte	0x23
 3613 0184 10       		.uleb128 0x10
 3614 0185 0E       		.uleb128 0xe
 3615 0186 5F7800   		.ascii	"_x\000"
 3616 0189 04       		.byte	0x4
 3617 018a 38       		.byte	0x38
 3618 018b 0B       		.byte	0xb
 3619 018c 9A010000 		.4byte	0x19a
 3620 0190 02       		.byte	0x2
 3621 0191 23       		.byte	0x23
 3622 0192 14       		.uleb128 0x14
 3623 0193 00       		.byte	0
 3624 0194 0F       		.uleb128 0xf
 3625 0195 04       		.byte	0x4
 3626 0196 2E010000 		.4byte	0x12e
 3627 019a 09       		.uleb128 0x9
 3628 019b 0A010000 		.4byte	0x10a
 3629 019f AA010000 		.4byte	0x1aa
 3630 01a3 0A       		.uleb128 0xa
 3631 01a4 6F000000 		.4byte	0x6f
 3632 01a8 00       		.byte	0
 3633 01a9 00       		.byte	0
 3634 01aa 0D       		.uleb128 0xd
 3635 01ab FB050000 		.4byte	.LASF27
 3636 01af 24       		.byte	0x24
 3637 01b0 04       		.byte	0x4
 3638 01b1 3C       		.byte	0x3c
 3639 01b2 08       		.byte	0x8
 3640 01b3 3F020000 		.4byte	0x23f
 3641 01b7 0C       		.uleb128 0xc
 3642 01b8 64020000 		.4byte	.LASF28
 3643 01bc 04       		.byte	0x4
 3644 01bd 3E       		.byte	0x3e
 3645 01be 09       		.byte	0x9
 3646 01bf 68000000 		.4byte	0x68
 3647 01c3 02       		.byte	0x2
 3648 01c4 23       		.byte	0x23
 3649 01c5 00       		.uleb128 0
 3650 01c6 0C       		.uleb128 0xc
 3651 01c7 89010000 		.4byte	.LASF29
 3652 01cb 04       		.byte	0x4
 3653 01cc 3F       		.byte	0x3f
 3654 01cd 09       		.byte	0x9
 3655 01ce 68000000 		.4byte	0x68
 3656 01d2 02       		.byte	0x2
 3657 01d3 23       		.byte	0x23
 3658 01d4 04       		.uleb128 0x4
 3659 01d5 0C       		.uleb128 0xc
 3660 01d6 67010000 		.4byte	.LASF30
 3661 01da 04       		.byte	0x4
ARM GAS  /tmp/ccPfsSwR.s 			page 81


 3662 01db 40       		.byte	0x40
 3663 01dc 09       		.byte	0x9
 3664 01dd 68000000 		.4byte	0x68
 3665 01e1 02       		.byte	0x2
 3666 01e2 23       		.byte	0x23
 3667 01e3 08       		.uleb128 0x8
 3668 01e4 0C       		.uleb128 0xc
 3669 01e5 3E030000 		.4byte	.LASF31
 3670 01e9 04       		.byte	0x4
 3671 01ea 41       		.byte	0x41
 3672 01eb 09       		.byte	0x9
 3673 01ec 68000000 		.4byte	0x68
 3674 01f0 02       		.byte	0x2
 3675 01f1 23       		.byte	0x23
 3676 01f2 0C       		.uleb128 0xc
 3677 01f3 0C       		.uleb128 0xc
 3678 01f4 B9040000 		.4byte	.LASF32
 3679 01f8 04       		.byte	0x4
 3680 01f9 42       		.byte	0x42
 3681 01fa 09       		.byte	0x9
 3682 01fb 68000000 		.4byte	0x68
 3683 01ff 02       		.byte	0x2
 3684 0200 23       		.byte	0x23
 3685 0201 10       		.uleb128 0x10
 3686 0202 0C       		.uleb128 0xc
 3687 0203 6C050000 		.4byte	.LASF33
 3688 0207 04       		.byte	0x4
 3689 0208 43       		.byte	0x43
 3690 0209 09       		.byte	0x9
 3691 020a 68000000 		.4byte	0x68
 3692 020e 02       		.byte	0x2
 3693 020f 23       		.byte	0x23
 3694 0210 14       		.uleb128 0x14
 3695 0211 0C       		.uleb128 0xc
 3696 0212 43010000 		.4byte	.LASF34
 3697 0216 04       		.byte	0x4
 3698 0217 44       		.byte	0x44
 3699 0218 09       		.byte	0x9
 3700 0219 68000000 		.4byte	0x68
 3701 021d 02       		.byte	0x2
 3702 021e 23       		.byte	0x23
 3703 021f 18       		.uleb128 0x18
 3704 0220 0C       		.uleb128 0xc
 3705 0221 7E020000 		.4byte	.LASF35
 3706 0225 04       		.byte	0x4
 3707 0226 45       		.byte	0x45
 3708 0227 09       		.byte	0x9
 3709 0228 68000000 		.4byte	0x68
 3710 022c 02       		.byte	0x2
 3711 022d 23       		.byte	0x23
 3712 022e 1C       		.uleb128 0x1c
 3713 022f 0C       		.uleb128 0xc
 3714 0230 74040000 		.4byte	.LASF36
 3715 0234 04       		.byte	0x4
 3716 0235 46       		.byte	0x46
 3717 0236 09       		.byte	0x9
 3718 0237 68000000 		.4byte	0x68
ARM GAS  /tmp/ccPfsSwR.s 			page 82


 3719 023b 02       		.byte	0x2
 3720 023c 23       		.byte	0x23
 3721 023d 20       		.uleb128 0x20
 3722 023e 00       		.byte	0
 3723 023f 10       		.uleb128 0x10
 3724 0240 30000000 		.4byte	.LASF37
 3725 0244 0801     		.2byte	0x108
 3726 0246 04       		.byte	0x4
 3727 0247 4F       		.byte	0x4f
 3728 0248 08       		.byte	0x8
 3729 0249 8D020000 		.4byte	0x28d
 3730 024d 0C       		.uleb128 0xc
 3731 024e 43070000 		.4byte	.LASF38
 3732 0252 04       		.byte	0x4
 3733 0253 50       		.byte	0x50
 3734 0254 0A       		.byte	0xa
 3735 0255 8D020000 		.4byte	0x28d
 3736 0259 02       		.byte	0x2
 3737 025a 23       		.byte	0x23
 3738 025b 00       		.uleb128 0
 3739 025c 0C       		.uleb128 0xc
 3740 025d 5E060000 		.4byte	.LASF39
 3741 0261 04       		.byte	0x4
 3742 0262 51       		.byte	0x51
 3743 0263 09       		.byte	0x9
 3744 0264 8D020000 		.4byte	0x28d
 3745 0268 03       		.byte	0x3
 3746 0269 23       		.byte	0x23
 3747 026a 8001     		.uleb128 0x80
 3748 026c 0C       		.uleb128 0xc
 3749 026d 6B080000 		.4byte	.LASF40
 3750 0271 04       		.byte	0x4
 3751 0272 53       		.byte	0x53
 3752 0273 0A       		.byte	0xa
 3753 0274 0A010000 		.4byte	0x10a
 3754 0278 03       		.byte	0x3
 3755 0279 23       		.byte	0x23
 3756 027a 8002     		.uleb128 0x100
 3757 027c 0C       		.uleb128 0xc
 3758 027d BC080000 		.4byte	.LASF41
 3759 0281 04       		.byte	0x4
 3760 0282 56       		.byte	0x56
 3761 0283 0A       		.byte	0xa
 3762 0284 0A010000 		.4byte	0x10a
 3763 0288 03       		.byte	0x3
 3764 0289 23       		.byte	0x23
 3765 028a 8402     		.uleb128 0x104
 3766 028c 00       		.byte	0
 3767 028d 09       		.uleb128 0x9
 3768 028e 7D000000 		.4byte	0x7d
 3769 0292 9D020000 		.4byte	0x29d
 3770 0296 0A       		.uleb128 0xa
 3771 0297 6F000000 		.4byte	0x6f
 3772 029b 1F       		.byte	0x1f
 3773 029c 00       		.byte	0
 3774 029d 10       		.uleb128 0x10
 3775 029e F5040000 		.4byte	.LASF42
ARM GAS  /tmp/ccPfsSwR.s 			page 83


 3776 02a2 9001     		.2byte	0x190
 3777 02a4 04       		.byte	0x4
 3778 02a5 62       		.byte	0x62
 3779 02a6 08       		.byte	0x8
 3780 02a7 E9020000 		.4byte	0x2e9
 3781 02ab 0C       		.uleb128 0xc
 3782 02ac C7020000 		.4byte	.LASF22
 3783 02b0 04       		.byte	0x4
 3784 02b1 63       		.byte	0x63
 3785 02b2 12       		.byte	0x12
 3786 02b3 E9020000 		.4byte	0x2e9
 3787 02b7 02       		.byte	0x2
 3788 02b8 23       		.byte	0x23
 3789 02b9 00       		.uleb128 0
 3790 02ba 0C       		.uleb128 0xc
 3791 02bb 8D020000 		.4byte	.LASF43
 3792 02bf 04       		.byte	0x4
 3793 02c0 64       		.byte	0x64
 3794 02c1 06       		.byte	0x6
 3795 02c2 68000000 		.4byte	0x68
 3796 02c6 02       		.byte	0x2
 3797 02c7 23       		.byte	0x23
 3798 02c8 04       		.uleb128 0x4
 3799 02c9 0C       		.uleb128 0xc
 3800 02ca 1E010000 		.4byte	.LASF44
 3801 02ce 04       		.byte	0x4
 3802 02cf 66       		.byte	0x66
 3803 02d0 09       		.byte	0x9
 3804 02d1 EF020000 		.4byte	0x2ef
 3805 02d5 02       		.byte	0x2
 3806 02d6 23       		.byte	0x23
 3807 02d7 08       		.uleb128 0x8
 3808 02d8 0C       		.uleb128 0xc
 3809 02d9 30000000 		.4byte	.LASF37
 3810 02dd 04       		.byte	0x4
 3811 02de 67       		.byte	0x67
 3812 02df 1E       		.byte	0x1e
 3813 02e0 3F020000 		.4byte	0x23f
 3814 02e4 03       		.byte	0x3
 3815 02e5 23       		.byte	0x23
 3816 02e6 8801     		.uleb128 0x88
 3817 02e8 00       		.byte	0
 3818 02e9 0F       		.uleb128 0xf
 3819 02ea 04       		.byte	0x4
 3820 02eb 9D020000 		.4byte	0x29d
 3821 02ef 09       		.uleb128 0x9
 3822 02f0 FF020000 		.4byte	0x2ff
 3823 02f4 FF020000 		.4byte	0x2ff
 3824 02f8 0A       		.uleb128 0xa
 3825 02f9 6F000000 		.4byte	0x6f
 3826 02fd 1F       		.byte	0x1f
 3827 02fe 00       		.byte	0
 3828 02ff 0F       		.uleb128 0xf
 3829 0300 04       		.byte	0x4
 3830 0301 05030000 		.4byte	0x305
 3831 0305 11       		.uleb128 0x11
 3832 0306 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 84


 3833 0307 0D       		.uleb128 0xd
 3834 0308 CA060000 		.4byte	.LASF45
 3835 030c 08       		.byte	0x8
 3836 030d 04       		.byte	0x4
 3837 030e 7A       		.byte	0x7a
 3838 030f 08       		.byte	0x8
 3839 0310 33030000 		.4byte	0x333
 3840 0314 0C       		.uleb128 0xc
 3841 0315 06040000 		.4byte	.LASF46
 3842 0319 04       		.byte	0x4
 3843 031a 7B       		.byte	0x7b
 3844 031b 11       		.byte	0x11
 3845 031c 33030000 		.4byte	0x333
 3846 0320 02       		.byte	0x2
 3847 0321 23       		.byte	0x23
 3848 0322 00       		.uleb128 0
 3849 0323 0C       		.uleb128 0xc
 3850 0324 74080000 		.4byte	.LASF47
 3851 0328 04       		.byte	0x4
 3852 0329 7C       		.byte	0x7c
 3853 032a 06       		.byte	0x6
 3854 032b 68000000 		.4byte	0x68
 3855 032f 02       		.byte	0x2
 3856 0330 23       		.byte	0x23
 3857 0331 04       		.uleb128 0x4
 3858 0332 00       		.byte	0
 3859 0333 0F       		.uleb128 0xf
 3860 0334 04       		.byte	0x4
 3861 0335 37000000 		.4byte	0x37
 3862 0339 0D       		.uleb128 0xd
 3863 033a F4010000 		.4byte	.LASF48
 3864 033e 68       		.byte	0x68
 3865 033f 04       		.byte	0x4
 3866 0340 BA       		.byte	0xba
 3867 0341 08       		.byte	0x8
 3868 0342 AC040000 		.4byte	0x4ac
 3869 0346 0E       		.uleb128 0xe
 3870 0347 5F7000   		.ascii	"_p\000"
 3871 034a 04       		.byte	0x4
 3872 034b BB       		.byte	0xbb
 3873 034c 12       		.byte	0x12
 3874 034d 33030000 		.4byte	0x333
 3875 0351 02       		.byte	0x2
 3876 0352 23       		.byte	0x23
 3877 0353 00       		.uleb128 0
 3878 0354 0E       		.uleb128 0xe
 3879 0355 5F7200   		.ascii	"_r\000"
 3880 0358 04       		.byte	0x4
 3881 0359 BC       		.byte	0xbc
 3882 035a 07       		.byte	0x7
 3883 035b 68000000 		.4byte	0x68
 3884 035f 02       		.byte	0x2
 3885 0360 23       		.byte	0x23
 3886 0361 04       		.uleb128 0x4
 3887 0362 0E       		.uleb128 0xe
 3888 0363 5F7700   		.ascii	"_w\000"
 3889 0366 04       		.byte	0x4
ARM GAS  /tmp/ccPfsSwR.s 			page 85


 3890 0367 BD       		.byte	0xbd
 3891 0368 07       		.byte	0x7
 3892 0369 68000000 		.4byte	0x68
 3893 036d 02       		.byte	0x2
 3894 036e 23       		.byte	0x23
 3895 036f 08       		.uleb128 0x8
 3896 0370 0C       		.uleb128 0xc
 3897 0371 8C000000 		.4byte	.LASF49
 3898 0375 04       		.byte	0x4
 3899 0376 BE       		.byte	0xbe
 3900 0377 09       		.byte	0x9
 3901 0378 3E000000 		.4byte	0x3e
 3902 037c 02       		.byte	0x2
 3903 037d 23       		.byte	0x23
 3904 037e 0C       		.uleb128 0xc
 3905 037f 0C       		.uleb128 0xc
 3906 0380 3B040000 		.4byte	.LASF50
 3907 0384 04       		.byte	0x4
 3908 0385 BF       		.byte	0xbf
 3909 0386 09       		.byte	0x9
 3910 0387 3E000000 		.4byte	0x3e
 3911 038b 02       		.byte	0x2
 3912 038c 23       		.byte	0x23
 3913 038d 0E       		.uleb128 0xe
 3914 038e 0E       		.uleb128 0xe
 3915 038f 5F626600 		.ascii	"_bf\000"
 3916 0393 04       		.byte	0x4
 3917 0394 C0       		.byte	0xc0
 3918 0395 11       		.byte	0x11
 3919 0396 07030000 		.4byte	0x307
 3920 039a 02       		.byte	0x2
 3921 039b 23       		.byte	0x23
 3922 039c 10       		.uleb128 0x10
 3923 039d 0C       		.uleb128 0xc
 3924 039e 83000000 		.4byte	.LASF51
 3925 03a2 04       		.byte	0x4
 3926 03a3 C1       		.byte	0xc1
 3927 03a4 07       		.byte	0x7
 3928 03a5 68000000 		.4byte	0x68
 3929 03a9 02       		.byte	0x2
 3930 03aa 23       		.byte	0x23
 3931 03ab 18       		.uleb128 0x18
 3932 03ac 0C       		.uleb128 0xc
 3933 03ad 2C010000 		.4byte	.LASF52
 3934 03b1 04       		.byte	0x4
 3935 03b2 C8       		.byte	0xc8
 3936 03b3 0A       		.byte	0xa
 3937 03b4 7D000000 		.4byte	0x7d
 3938 03b8 02       		.byte	0x2
 3939 03b9 23       		.byte	0x23
 3940 03ba 1C       		.uleb128 0x1c
 3941 03bb 0C       		.uleb128 0xc
 3942 03bc DA000000 		.4byte	.LASF53
 3943 03c0 04       		.byte	0x4
 3944 03c1 CA       		.byte	0xca
 3945 03c2 1D       		.byte	0x1d
 3946 03c3 5D060000 		.4byte	0x65d
ARM GAS  /tmp/ccPfsSwR.s 			page 86


 3947 03c7 02       		.byte	0x2
 3948 03c8 23       		.byte	0x23
 3949 03c9 20       		.uleb128 0x20
 3950 03ca 0C       		.uleb128 0xc
 3951 03cb D9040000 		.4byte	.LASF54
 3952 03cf 04       		.byte	0x4
 3953 03d0 CC       		.byte	0xcc
 3954 03d1 1D       		.byte	0x1d
 3955 03d2 88060000 		.4byte	0x688
 3956 03d6 02       		.byte	0x2
 3957 03d7 23       		.byte	0x23
 3958 03d8 24       		.uleb128 0x24
 3959 03d9 0C       		.uleb128 0xc
 3960 03da E0080000 		.4byte	.LASF55
 3961 03de 04       		.byte	0x4
 3962 03df CF       		.byte	0xcf
 3963 03e0 0D       		.byte	0xd
 3964 03e1 AD060000 		.4byte	0x6ad
 3965 03e5 02       		.byte	0x2
 3966 03e6 23       		.byte	0x23
 3967 03e7 28       		.uleb128 0x28
 3968 03e8 0C       		.uleb128 0xc
 3969 03e9 AF030000 		.4byte	.LASF56
 3970 03ed 04       		.byte	0x4
 3971 03ee D0       		.byte	0xd0
 3972 03ef 09       		.byte	0x9
 3973 03f0 C8060000 		.4byte	0x6c8
 3974 03f4 02       		.byte	0x2
 3975 03f5 23       		.byte	0x23
 3976 03f6 2C       		.uleb128 0x2c
 3977 03f7 0E       		.uleb128 0xe
 3978 03f8 5F756200 		.ascii	"_ub\000"
 3979 03fc 04       		.byte	0x4
 3980 03fd D3       		.byte	0xd3
 3981 03fe 11       		.byte	0x11
 3982 03ff 07030000 		.4byte	0x307
 3983 0403 02       		.byte	0x2
 3984 0404 23       		.byte	0x23
 3985 0405 30       		.uleb128 0x30
 3986 0406 0E       		.uleb128 0xe
 3987 0407 5F757000 		.ascii	"_up\000"
 3988 040b 04       		.byte	0x4
 3989 040c D4       		.byte	0xd4
 3990 040d 12       		.byte	0x12
 3991 040e 33030000 		.4byte	0x333
 3992 0412 02       		.byte	0x2
 3993 0413 23       		.byte	0x23
 3994 0414 38       		.uleb128 0x38
 3995 0415 0E       		.uleb128 0xe
 3996 0416 5F757200 		.ascii	"_ur\000"
 3997 041a 04       		.byte	0x4
 3998 041b D5       		.byte	0xd5
 3999 041c 07       		.byte	0x7
 4000 041d 68000000 		.4byte	0x68
 4001 0421 02       		.byte	0x2
 4002 0422 23       		.byte	0x23
 4003 0423 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccPfsSwR.s 			page 87


 4004 0424 0C       		.uleb128 0xc
 4005 0425 00090000 		.4byte	.LASF57
 4006 0429 04       		.byte	0x4
 4007 042a D8       		.byte	0xd8
 4008 042b 11       		.byte	0x11
 4009 042c CE060000 		.4byte	0x6ce
 4010 0430 02       		.byte	0x2
 4011 0431 23       		.byte	0x23
 4012 0432 40       		.uleb128 0x40
 4013 0433 0C       		.uleb128 0xc
 4014 0434 88080000 		.4byte	.LASF58
 4015 0438 04       		.byte	0x4
 4016 0439 D9       		.byte	0xd9
 4017 043a 11       		.byte	0x11
 4018 043b DE060000 		.4byte	0x6de
 4019 043f 02       		.byte	0x2
 4020 0440 23       		.byte	0x23
 4021 0441 43       		.uleb128 0x43
 4022 0442 0E       		.uleb128 0xe
 4023 0443 5F6C6200 		.ascii	"_lb\000"
 4024 0447 04       		.byte	0x4
 4025 0448 DC       		.byte	0xdc
 4026 0449 11       		.byte	0x11
 4027 044a 07030000 		.4byte	0x307
 4028 044e 02       		.byte	0x2
 4029 044f 23       		.byte	0x23
 4030 0450 44       		.uleb128 0x44
 4031 0451 0C       		.uleb128 0xc
 4032 0452 F2050000 		.4byte	.LASF59
 4033 0456 04       		.byte	0x4
 4034 0457 DF       		.byte	0xdf
 4035 0458 07       		.byte	0x7
 4036 0459 68000000 		.4byte	0x68
 4037 045d 02       		.byte	0x2
 4038 045e 23       		.byte	0x23
 4039 045f 4C       		.uleb128 0x4c
 4040 0460 0C       		.uleb128 0xc
 4041 0461 1D020000 		.4byte	.LASF60
 4042 0465 04       		.byte	0x4
 4043 0466 E0       		.byte	0xe0
 4044 0467 0A       		.byte	0xa
 4045 0468 8C000000 		.4byte	0x8c
 4046 046c 02       		.byte	0x2
 4047 046d 23       		.byte	0x23
 4048 046e 50       		.uleb128 0x50
 4049 046f 0C       		.uleb128 0xc
 4050 0470 3F050000 		.4byte	.LASF61
 4051 0474 04       		.byte	0x4
 4052 0475 E3       		.byte	0xe3
 4053 0476 12       		.byte	0x12
 4054 0477 CB040000 		.4byte	0x4cb
 4055 047b 02       		.byte	0x2
 4056 047c 23       		.byte	0x23
 4057 047d 54       		.uleb128 0x54
 4058 047e 0C       		.uleb128 0xc
 4059 047f 09060000 		.4byte	.LASF62
 4060 0483 04       		.byte	0x4
ARM GAS  /tmp/ccPfsSwR.s 			page 88


 4061 0484 E7       		.byte	0xe7
 4062 0485 0C       		.byte	0xc
 4063 0486 22010000 		.4byte	0x122
 4064 048a 02       		.byte	0x2
 4065 048b 23       		.byte	0x23
 4066 048c 58       		.uleb128 0x58
 4067 048d 0C       		.uleb128 0xc
 4068 048e FD040000 		.4byte	.LASF63
 4069 0492 04       		.byte	0x4
 4070 0493 E9       		.byte	0xe9
 4071 0494 0E       		.byte	0xe
 4072 0495 FE000000 		.4byte	0xfe
 4073 0499 02       		.byte	0x2
 4074 049a 23       		.byte	0x23
 4075 049b 5C       		.uleb128 0x5c
 4076 049c 0C       		.uleb128 0xc
 4077 049d B4080000 		.4byte	.LASF64
 4078 04a1 04       		.byte	0x4
 4079 04a2 EA       		.byte	0xea
 4080 04a3 09       		.byte	0x9
 4081 04a4 68000000 		.4byte	0x68
 4082 04a8 02       		.byte	0x2
 4083 04a9 23       		.byte	0x23
 4084 04aa 64       		.uleb128 0x64
 4085 04ab 00       		.byte	0
 4086 04ac 12       		.uleb128 0x12
 4087 04ad 01       		.byte	0x1
 4088 04ae 68000000 		.4byte	0x68
 4089 04b2 CB040000 		.4byte	0x4cb
 4090 04b6 13       		.uleb128 0x13
 4091 04b7 CB040000 		.4byte	0x4cb
 4092 04bb 13       		.uleb128 0x13
 4093 04bc 7D000000 		.4byte	0x7d
 4094 04c0 13       		.uleb128 0x13
 4095 04c1 4B060000 		.4byte	0x64b
 4096 04c5 13       		.uleb128 0x13
 4097 04c6 68000000 		.4byte	0x68
 4098 04ca 00       		.byte	0
 4099 04cb 0F       		.uleb128 0xf
 4100 04cc 04       		.byte	0x4
 4101 04cd D6040000 		.4byte	0x4d6
 4102 04d1 14       		.uleb128 0x14
 4103 04d2 CB040000 		.4byte	0x4cb
 4104 04d6 15       		.uleb128 0x15
 4105 04d7 57070000 		.4byte	.LASF65
 4106 04db 2804     		.2byte	0x428
 4107 04dd 04       		.byte	0x4
 4108 04de 6502     		.2byte	0x265
 4109 04e0 08       		.byte	0x8
 4110 04e1 4B060000 		.4byte	0x64b
 4111 04e5 16       		.uleb128 0x16
 4112 04e6 93000000 		.4byte	.LASF66
 4113 04ea 04       		.byte	0x4
 4114 04eb 6702     		.2byte	0x267
 4115 04ed 07       		.byte	0x7
 4116 04ee 68000000 		.4byte	0x68
 4117 04f2 02       		.byte	0x2
ARM GAS  /tmp/ccPfsSwR.s 			page 89


 4118 04f3 23       		.byte	0x23
 4119 04f4 00       		.uleb128 0
 4120 04f5 16       		.uleb128 0x16
 4121 04f6 E2030000 		.4byte	.LASF67
 4122 04fa 04       		.byte	0x4
 4123 04fb 6C02     		.2byte	0x26c
 4124 04fd 0B       		.byte	0xb
 4125 04fe 40070000 		.4byte	0x740
 4126 0502 02       		.byte	0x2
 4127 0503 23       		.byte	0x23
 4128 0504 04       		.uleb128 0x4
 4129 0505 16       		.uleb128 0x16
 4130 0506 0E010000 		.4byte	.LASF68
 4131 050a 04       		.byte	0x4
 4132 050b 6C02     		.2byte	0x26c
 4133 050d 14       		.byte	0x14
 4134 050e 40070000 		.4byte	0x740
 4135 0512 02       		.byte	0x2
 4136 0513 23       		.byte	0x23
 4137 0514 08       		.uleb128 0x8
 4138 0515 16       		.uleb128 0x16
 4139 0516 EF080000 		.4byte	.LASF69
 4140 051a 04       		.byte	0x4
 4141 051b 6C02     		.2byte	0x26c
 4142 051d 1E       		.byte	0x1e
 4143 051e 40070000 		.4byte	0x740
 4144 0522 02       		.byte	0x2
 4145 0523 23       		.byte	0x23
 4146 0524 0C       		.uleb128 0xc
 4147 0525 16       		.uleb128 0x16
 4148 0526 88020000 		.4byte	.LASF70
 4149 052a 04       		.byte	0x4
 4150 052b 6E02     		.2byte	0x26e
 4151 052d 08       		.byte	0x8
 4152 052e 68000000 		.4byte	0x68
 4153 0532 02       		.byte	0x2
 4154 0533 23       		.byte	0x23
 4155 0534 10       		.uleb128 0x10
 4156 0535 16       		.uleb128 0x16
 4157 0536 33020000 		.4byte	.LASF71
 4158 053a 04       		.byte	0x4
 4159 053b 6F02     		.2byte	0x26f
 4160 053d 08       		.byte	0x8
 4161 053e 79090000 		.4byte	0x979
 4162 0542 02       		.byte	0x2
 4163 0543 23       		.byte	0x23
 4164 0544 14       		.uleb128 0x14
 4165 0545 16       		.uleb128 0x16
 4166 0546 9B080000 		.4byte	.LASF72
 4167 054a 04       		.byte	0x4
 4168 054b 7202     		.2byte	0x272
 4169 054d 07       		.byte	0x7
 4170 054e 68000000 		.4byte	0x68
 4171 0552 02       		.byte	0x2
 4172 0553 23       		.byte	0x23
 4173 0554 30       		.uleb128 0x30
 4174 0555 16       		.uleb128 0x16
ARM GAS  /tmp/ccPfsSwR.s 			page 90


 4175 0556 3B070000 		.4byte	.LASF73
 4176 055a 04       		.byte	0x4
 4177 055b 7302     		.2byte	0x273
 4178 055d 16       		.byte	0x16
 4179 055e 8F090000 		.4byte	0x98f
 4180 0562 02       		.byte	0x2
 4181 0563 23       		.byte	0x23
 4182 0564 34       		.uleb128 0x34
 4183 0565 16       		.uleb128 0x16
 4184 0566 B6030000 		.4byte	.LASF74
 4185 056a 04       		.byte	0x4
 4186 056b 7502     		.2byte	0x275
 4187 056d 07       		.byte	0x7
 4188 056e 68000000 		.4byte	0x68
 4189 0572 02       		.byte	0x2
 4190 0573 23       		.byte	0x23
 4191 0574 38       		.uleb128 0x38
 4192 0575 16       		.uleb128 0x16
 4193 0576 4F040000 		.4byte	.LASF75
 4194 057a 04       		.byte	0x4
 4195 057b 7702     		.2byte	0x277
 4196 057d 0A       		.byte	0xa
 4197 057e A1090000 		.4byte	0x9a1
 4198 0582 02       		.byte	0x2
 4199 0583 23       		.byte	0x23
 4200 0584 3C       		.uleb128 0x3c
 4201 0585 16       		.uleb128 0x16
 4202 0586 4D010000 		.4byte	.LASF76
 4203 058a 04       		.byte	0x4
 4204 058b 7A02     		.2byte	0x27a
 4205 058d 13       		.byte	0x13
 4206 058e 94010000 		.4byte	0x194
 4207 0592 02       		.byte	0x2
 4208 0593 23       		.byte	0x23
 4209 0594 40       		.uleb128 0x40
 4210 0595 16       		.uleb128 0x16
 4211 0596 C6010000 		.4byte	.LASF77
 4212 059a 04       		.byte	0x4
 4213 059b 7B02     		.2byte	0x27b
 4214 059d 07       		.byte	0x7
 4215 059e 68000000 		.4byte	0x68
 4216 05a2 02       		.byte	0x2
 4217 05a3 23       		.byte	0x23
 4218 05a4 44       		.uleb128 0x44
 4219 05a5 16       		.uleb128 0x16
 4220 05a6 FE020000 		.4byte	.LASF78
 4221 05aa 04       		.byte	0x4
 4222 05ab 7C02     		.2byte	0x27c
 4223 05ad 13       		.byte	0x13
 4224 05ae 94010000 		.4byte	0x194
 4225 05b2 02       		.byte	0x2
 4226 05b3 23       		.byte	0x23
 4227 05b4 48       		.uleb128 0x48
 4228 05b5 16       		.uleb128 0x16
 4229 05b6 0C040000 		.4byte	.LASF79
 4230 05ba 04       		.byte	0x4
 4231 05bb 7D02     		.2byte	0x27d
ARM GAS  /tmp/ccPfsSwR.s 			page 91


 4232 05bd 14       		.byte	0x14
 4233 05be A7090000 		.4byte	0x9a7
 4234 05c2 02       		.byte	0x2
 4235 05c3 23       		.byte	0x23
 4236 05c4 4C       		.uleb128 0x4c
 4237 05c5 16       		.uleb128 0x16
 4238 05c6 CA050000 		.4byte	.LASF80
 4239 05ca 04       		.byte	0x4
 4240 05cb 8002     		.2byte	0x280
 4241 05cd 07       		.byte	0x7
 4242 05ce 68000000 		.4byte	0x68
 4243 05d2 02       		.byte	0x2
 4244 05d3 23       		.byte	0x23
 4245 05d4 50       		.uleb128 0x50
 4246 05d5 16       		.uleb128 0x16
 4247 05d6 87060000 		.4byte	.LASF81
 4248 05da 04       		.byte	0x4
 4249 05db 8102     		.2byte	0x281
 4250 05dd 09       		.byte	0x9
 4251 05de 4B060000 		.4byte	0x64b
 4252 05e2 02       		.byte	0x2
 4253 05e3 23       		.byte	0x23
 4254 05e4 54       		.uleb128 0x54
 4255 05e5 16       		.uleb128 0x16
 4256 05e6 C5050000 		.4byte	.LASF82
 4257 05ea 04       		.byte	0x4
 4258 05eb A402     		.2byte	0x2a4
 4259 05ed 07       		.byte	0x7
 4260 05ee 54090000 		.4byte	0x954
 4261 05f2 02       		.byte	0x2
 4262 05f3 23       		.byte	0x23
 4263 05f4 58       		.uleb128 0x58
 4264 05f5 16       		.uleb128 0x16
 4265 05f6 F5040000 		.4byte	.LASF42
 4266 05fa 04       		.byte	0x4
 4267 05fb A802     		.2byte	0x2a8
 4268 05fd 13       		.byte	0x13
 4269 05fe E9020000 		.4byte	0x2e9
 4270 0602 03       		.byte	0x3
 4271 0603 23       		.byte	0x23
 4272 0604 C802     		.uleb128 0x148
 4273 0606 16       		.uleb128 0x16
 4274 0607 61030000 		.4byte	.LASF83
 4275 060b 04       		.byte	0x4
 4276 060c A902     		.2byte	0x2a9
 4277 060e 12       		.byte	0x12
 4278 060f 9D020000 		.4byte	0x29d
 4279 0613 03       		.byte	0x3
 4280 0614 23       		.byte	0x23
 4281 0615 CC02     		.uleb128 0x14c
 4282 0617 16       		.uleb128 0x16
 4283 0618 48030000 		.4byte	.LASF84
 4284 061c 04       		.byte	0x4
 4285 061d AD02     		.2byte	0x2ad
 4286 061f 0C       		.byte	0xc
 4287 0620 B9090000 		.4byte	0x9b9
 4288 0624 03       		.byte	0x3
ARM GAS  /tmp/ccPfsSwR.s 			page 92


 4289 0625 23       		.byte	0x23
 4290 0626 DC05     		.uleb128 0x2dc
 4291 0628 16       		.uleb128 0x16
 4292 0629 FF060000 		.4byte	.LASF85
 4293 062d 04       		.byte	0x4
 4294 062e B202     		.2byte	0x2b2
 4295 0630 10       		.byte	0x10
 4296 0631 FB060000 		.4byte	0x6fb
 4297 0635 03       		.byte	0x3
 4298 0636 23       		.byte	0x23
 4299 0637 E005     		.uleb128 0x2e0
 4300 0639 16       		.uleb128 0x16
 4301 063a 22050000 		.4byte	.LASF86
 4302 063e 04       		.byte	0x4
 4303 063f B402     		.2byte	0x2b4
 4304 0641 0A       		.byte	0xa
 4305 0642 C5090000 		.4byte	0x9c5
 4306 0646 03       		.byte	0x3
 4307 0647 23       		.byte	0x23
 4308 0648 EC05     		.uleb128 0x2ec
 4309 064a 00       		.byte	0
 4310 064b 0F       		.uleb128 0xf
 4311 064c 04       		.byte	0x4
 4312 064d 51060000 		.4byte	0x651
 4313 0651 02       		.uleb128 0x2
 4314 0652 01       		.byte	0x1
 4315 0653 08       		.byte	0x8
 4316 0654 39030000 		.4byte	.LASF87
 4317 0658 14       		.uleb128 0x14
 4318 0659 51060000 		.4byte	0x651
 4319 065d 0F       		.uleb128 0xf
 4320 065e 04       		.byte	0x4
 4321 065f AC040000 		.4byte	0x4ac
 4322 0663 12       		.uleb128 0x12
 4323 0664 01       		.byte	0x1
 4324 0665 68000000 		.4byte	0x68
 4325 0669 82060000 		.4byte	0x682
 4326 066d 13       		.uleb128 0x13
 4327 066e CB040000 		.4byte	0x4cb
 4328 0672 13       		.uleb128 0x13
 4329 0673 7D000000 		.4byte	0x7d
 4330 0677 13       		.uleb128 0x13
 4331 0678 82060000 		.4byte	0x682
 4332 067c 13       		.uleb128 0x13
 4333 067d 68000000 		.4byte	0x68
 4334 0681 00       		.byte	0
 4335 0682 0F       		.uleb128 0xf
 4336 0683 04       		.byte	0x4
 4337 0684 58060000 		.4byte	0x658
 4338 0688 0F       		.uleb128 0xf
 4339 0689 04       		.byte	0x4
 4340 068a 63060000 		.4byte	0x663
 4341 068e 12       		.uleb128 0x12
 4342 068f 01       		.byte	0x1
 4343 0690 98000000 		.4byte	0x98
 4344 0694 AD060000 		.4byte	0x6ad
 4345 0698 13       		.uleb128 0x13
ARM GAS  /tmp/ccPfsSwR.s 			page 93


 4346 0699 CB040000 		.4byte	0x4cb
 4347 069d 13       		.uleb128 0x13
 4348 069e 7D000000 		.4byte	0x7d
 4349 06a2 13       		.uleb128 0x13
 4350 06a3 98000000 		.4byte	0x98
 4351 06a7 13       		.uleb128 0x13
 4352 06a8 68000000 		.4byte	0x68
 4353 06ac 00       		.byte	0
 4354 06ad 0F       		.uleb128 0xf
 4355 06ae 04       		.byte	0x4
 4356 06af 8E060000 		.4byte	0x68e
 4357 06b3 12       		.uleb128 0x12
 4358 06b4 01       		.byte	0x1
 4359 06b5 68000000 		.4byte	0x68
 4360 06b9 C8060000 		.4byte	0x6c8
 4361 06bd 13       		.uleb128 0x13
 4362 06be CB040000 		.4byte	0x4cb
 4363 06c2 13       		.uleb128 0x13
 4364 06c3 7D000000 		.4byte	0x7d
 4365 06c7 00       		.byte	0
 4366 06c8 0F       		.uleb128 0xf
 4367 06c9 04       		.byte	0x4
 4368 06ca B3060000 		.4byte	0x6b3
 4369 06ce 09       		.uleb128 0x9
 4370 06cf 37000000 		.4byte	0x37
 4371 06d3 DE060000 		.4byte	0x6de
 4372 06d7 0A       		.uleb128 0xa
 4373 06d8 6F000000 		.4byte	0x6f
 4374 06dc 02       		.byte	0x2
 4375 06dd 00       		.byte	0
 4376 06de 09       		.uleb128 0x9
 4377 06df 37000000 		.4byte	0x37
 4378 06e3 EE060000 		.4byte	0x6ee
 4379 06e7 0A       		.uleb128 0xa
 4380 06e8 6F000000 		.4byte	0x6f
 4381 06ec 00       		.byte	0
 4382 06ed 00       		.byte	0
 4383 06ee 05       		.uleb128 0x5
 4384 06ef 07020000 		.4byte	.LASF88
 4385 06f3 04       		.byte	0x4
 4386 06f4 2401     		.2byte	0x124
 4387 06f6 1A       		.byte	0x1a
 4388 06f7 39030000 		.4byte	0x339
 4389 06fb 17       		.uleb128 0x17
 4390 06fc DC060000 		.4byte	.LASF89
 4391 0700 0C       		.byte	0xc
 4392 0701 04       		.byte	0x4
 4393 0702 2801     		.2byte	0x128
 4394 0704 08       		.byte	0x8
 4395 0705 3A070000 		.4byte	0x73a
 4396 0709 16       		.uleb128 0x16
 4397 070a C7020000 		.4byte	.LASF22
 4398 070e 04       		.byte	0x4
 4399 070f 2A01     		.2byte	0x12a
 4400 0711 11       		.byte	0x11
 4401 0712 3A070000 		.4byte	0x73a
 4402 0716 02       		.byte	0x2
ARM GAS  /tmp/ccPfsSwR.s 			page 94


 4403 0717 23       		.byte	0x23
 4404 0718 00       		.uleb128 0
 4405 0719 16       		.uleb128 0x16
 4406 071a 40060000 		.4byte	.LASF90
 4407 071e 04       		.byte	0x4
 4408 071f 2B01     		.2byte	0x12b
 4409 0721 07       		.byte	0x7
 4410 0722 68000000 		.4byte	0x68
 4411 0726 02       		.byte	0x2
 4412 0727 23       		.byte	0x23
 4413 0728 04       		.uleb128 0x4
 4414 0729 16       		.uleb128 0x16
 4415 072a 93030000 		.4byte	.LASF91
 4416 072e 04       		.byte	0x4
 4417 072f 2C01     		.2byte	0x12c
 4418 0731 0B       		.byte	0xb
 4419 0732 40070000 		.4byte	0x740
 4420 0736 02       		.byte	0x2
 4421 0737 23       		.byte	0x23
 4422 0738 08       		.uleb128 0x8
 4423 0739 00       		.byte	0
 4424 073a 0F       		.uleb128 0xf
 4425 073b 04       		.byte	0x4
 4426 073c FB060000 		.4byte	0x6fb
 4427 0740 0F       		.uleb128 0xf
 4428 0741 04       		.byte	0x4
 4429 0742 EE060000 		.4byte	0x6ee
 4430 0746 17       		.uleb128 0x17
 4431 0747 BE010000 		.4byte	.LASF92
 4432 074b 0E       		.byte	0xe
 4433 074c 04       		.byte	0x4
 4434 074d 4401     		.2byte	0x144
 4435 074f 08       		.byte	0x8
 4436 0750 85070000 		.4byte	0x785
 4437 0754 16       		.uleb128 0x16
 4438 0755 C4080000 		.4byte	.LASF93
 4439 0759 04       		.byte	0x4
 4440 075a 4501     		.2byte	0x145
 4441 075c 12       		.byte	0x12
 4442 075d 85070000 		.4byte	0x785
 4443 0761 02       		.byte	0x2
 4444 0762 23       		.byte	0x23
 4445 0763 00       		.uleb128 0
 4446 0764 16       		.uleb128 0x16
 4447 0765 16040000 		.4byte	.LASF94
 4448 0769 04       		.byte	0x4
 4449 076a 4601     		.2byte	0x146
 4450 076c 12       		.byte	0x12
 4451 076d 85070000 		.4byte	0x785
 4452 0771 02       		.byte	0x2
 4453 0772 23       		.byte	0x23
 4454 0773 06       		.uleb128 0x6
 4455 0774 16       		.uleb128 0x16
 4456 0775 B5060000 		.4byte	.LASF95
 4457 0779 04       		.byte	0x4
 4458 077a 4701     		.2byte	0x147
 4459 077c 12       		.byte	0x12
ARM GAS  /tmp/ccPfsSwR.s 			page 95


 4460 077d 45000000 		.4byte	0x45
 4461 0781 02       		.byte	0x2
 4462 0782 23       		.byte	0x23
 4463 0783 0C       		.uleb128 0xc
 4464 0784 00       		.byte	0
 4465 0785 09       		.uleb128 0x9
 4466 0786 45000000 		.4byte	0x45
 4467 078a 95070000 		.4byte	0x795
 4468 078e 0A       		.uleb128 0xa
 4469 078f 6F000000 		.4byte	0x6f
 4470 0793 02       		.byte	0x2
 4471 0794 00       		.byte	0
 4472 0795 18       		.uleb128 0x18
 4473 0796 D0       		.byte	0xd0
 4474 0797 04       		.byte	0x4
 4475 0798 8502     		.2byte	0x285
 4476 079a 07       		.byte	0x7
 4477 079b D9080000 		.4byte	0x8d9
 4478 079f 16       		.uleb128 0x16
 4479 07a0 8E080000 		.4byte	.LASF96
 4480 07a4 04       		.byte	0x4
 4481 07a5 8702     		.2byte	0x287
 4482 07a7 18       		.byte	0x18
 4483 07a8 6F000000 		.4byte	0x6f
 4484 07ac 02       		.byte	0x2
 4485 07ad 23       		.byte	0x23
 4486 07ae 00       		.uleb128 0
 4487 07af 16       		.uleb128 0x16
 4488 07b0 0F070000 		.4byte	.LASF97
 4489 07b4 04       		.byte	0x4
 4490 07b5 8802     		.2byte	0x288
 4491 07b7 12       		.byte	0x12
 4492 07b8 4B060000 		.4byte	0x64b
 4493 07bc 02       		.byte	0x2
 4494 07bd 23       		.byte	0x23
 4495 07be 04       		.uleb128 0x4
 4496 07bf 16       		.uleb128 0x16
 4497 07c0 E7010000 		.4byte	.LASF98
 4498 07c4 04       		.byte	0x4
 4499 07c5 8902     		.2byte	0x289
 4500 07c7 10       		.byte	0x10
 4501 07c8 D9080000 		.4byte	0x8d9
 4502 07cc 02       		.byte	0x2
 4503 07cd 23       		.byte	0x23
 4504 07ce 08       		.uleb128 0x8
 4505 07cf 16       		.uleb128 0x16
 4506 07d0 AE050000 		.4byte	.LASF99
 4507 07d4 04       		.byte	0x4
 4508 07d5 8A02     		.2byte	0x28a
 4509 07d7 17       		.byte	0x17
 4510 07d8 AA010000 		.4byte	0x1aa
 4511 07dc 02       		.byte	0x2
 4512 07dd 23       		.byte	0x23
 4513 07de 24       		.uleb128 0x24
 4514 07df 16       		.uleb128 0x16
 4515 07e0 E9030000 		.4byte	.LASF100
 4516 07e4 04       		.byte	0x4
ARM GAS  /tmp/ccPfsSwR.s 			page 96


 4517 07e5 8B02     		.2byte	0x28b
 4518 07e7 0F       		.byte	0xf
 4519 07e8 68000000 		.4byte	0x68
 4520 07ec 02       		.byte	0x2
 4521 07ed 23       		.byte	0x23
 4522 07ee 48       		.uleb128 0x48
 4523 07ef 16       		.uleb128 0x16
 4524 07f0 CA080000 		.4byte	.LASF101
 4525 07f4 04       		.byte	0x4
 4526 07f5 8C02     		.2byte	0x28c
 4527 07f7 2C       		.byte	0x2c
 4528 07f8 61000000 		.4byte	0x61
 4529 07fc 02       		.byte	0x2
 4530 07fd 23       		.byte	0x23
 4531 07fe 50       		.uleb128 0x50
 4532 07ff 16       		.uleb128 0x16
 4533 0800 5D000000 		.4byte	.LASF102
 4534 0804 04       		.byte	0x4
 4535 0805 8D02     		.2byte	0x28d
 4536 0807 1A       		.byte	0x1a
 4537 0808 46070000 		.4byte	0x746
 4538 080c 02       		.byte	0x2
 4539 080d 23       		.byte	0x23
 4540 080e 58       		.uleb128 0x58
 4541 080f 16       		.uleb128 0x16
 4542 0810 2C030000 		.4byte	.LASF103
 4543 0814 04       		.byte	0x4
 4544 0815 8E02     		.2byte	0x28e
 4545 0817 16       		.byte	0x16
 4546 0818 FE000000 		.4byte	0xfe
 4547 081c 02       		.byte	0x2
 4548 081d 23       		.byte	0x23
 4549 081e 68       		.uleb128 0x68
 4550 081f 16       		.uleb128 0x16
 4551 0820 1C070000 		.4byte	.LASF104
 4552 0824 04       		.byte	0x4
 4553 0825 8F02     		.2byte	0x28f
 4554 0827 16       		.byte	0x16
 4555 0828 FE000000 		.4byte	0xfe
 4556 082c 02       		.byte	0x2
 4557 082d 23       		.byte	0x23
 4558 082e 70       		.uleb128 0x70
 4559 082f 16       		.uleb128 0x16
 4560 0830 3E000000 		.4byte	.LASF105
 4561 0834 04       		.byte	0x4
 4562 0835 9002     		.2byte	0x290
 4563 0837 16       		.byte	0x16
 4564 0838 FE000000 		.4byte	0xfe
 4565 083c 02       		.byte	0x2
 4566 083d 23       		.byte	0x23
 4567 083e 78       		.uleb128 0x78
 4568 083f 16       		.uleb128 0x16
 4569 0840 DA050000 		.4byte	.LASF106
 4570 0844 04       		.byte	0x4
 4571 0845 9102     		.2byte	0x291
 4572 0847 10       		.byte	0x10
 4573 0848 E9080000 		.4byte	0x8e9
ARM GAS  /tmp/ccPfsSwR.s 			page 97


 4574 084c 03       		.byte	0x3
 4575 084d 23       		.byte	0x23
 4576 084e 8001     		.uleb128 0x80
 4577 0850 16       		.uleb128 0x16
 4578 0851 62000000 		.4byte	.LASF107
 4579 0855 04       		.byte	0x4
 4580 0856 9202     		.2byte	0x292
 4581 0858 10       		.byte	0x10
 4582 0859 F9080000 		.4byte	0x8f9
 4583 085d 03       		.byte	0x3
 4584 085e 23       		.byte	0x23
 4585 085f 8801     		.uleb128 0x88
 4586 0861 16       		.uleb128 0x16
 4587 0862 9D060000 		.4byte	.LASF108
 4588 0866 04       		.byte	0x4
 4589 0867 9302     		.2byte	0x293
 4590 0869 0F       		.byte	0xf
 4591 086a 68000000 		.4byte	0x68
 4592 086e 03       		.byte	0x3
 4593 086f 23       		.byte	0x23
 4594 0870 A001     		.uleb128 0xa0
 4595 0872 16       		.uleb128 0x16
 4596 0873 E8000000 		.4byte	.LASF109
 4597 0877 04       		.byte	0x4
 4598 0878 9402     		.2byte	0x294
 4599 087a 16       		.byte	0x16
 4600 087b FE000000 		.4byte	0xfe
 4601 087f 03       		.byte	0x3
 4602 0880 23       		.byte	0x23
 4603 0881 A401     		.uleb128 0xa4
 4604 0883 16       		.uleb128 0x16
 4605 0884 52030000 		.4byte	.LASF110
 4606 0888 04       		.byte	0x4
 4607 0889 9502     		.2byte	0x295
 4608 088b 16       		.byte	0x16
 4609 088c FE000000 		.4byte	0xfe
 4610 0890 03       		.byte	0x3
 4611 0891 23       		.byte	0x23
 4612 0892 AC01     		.uleb128 0xac
 4613 0894 16       		.uleb128 0x16
 4614 0895 CD020000 		.4byte	.LASF111
 4615 0899 04       		.byte	0x4
 4616 089a 9602     		.2byte	0x296
 4617 089c 16       		.byte	0x16
 4618 089d FE000000 		.4byte	0xfe
 4619 08a1 03       		.byte	0x3
 4620 08a2 23       		.byte	0x23
 4621 08a3 B401     		.uleb128 0xb4
 4622 08a5 16       		.uleb128 0x16
 4623 08a6 2C040000 		.4byte	.LASF112
 4624 08aa 04       		.byte	0x4
 4625 08ab 9702     		.2byte	0x297
 4626 08ad 16       		.byte	0x16
 4627 08ae FE000000 		.4byte	0xfe
 4628 08b2 03       		.byte	0x3
 4629 08b3 23       		.byte	0x23
 4630 08b4 BC01     		.uleb128 0xbc
ARM GAS  /tmp/ccPfsSwR.s 			page 98


 4631 08b6 16       		.uleb128 0x16
 4632 08b7 1B030000 		.4byte	.LASF113
 4633 08bb 04       		.byte	0x4
 4634 08bc 9802     		.2byte	0x298
 4635 08be 16       		.byte	0x16
 4636 08bf FE000000 		.4byte	0xfe
 4637 08c3 03       		.byte	0x3
 4638 08c4 23       		.byte	0x23
 4639 08c5 C401     		.uleb128 0xc4
 4640 08c7 16       		.uleb128 0x16
 4641 08c8 92040000 		.4byte	.LASF114
 4642 08cc 04       		.byte	0x4
 4643 08cd 9902     		.2byte	0x299
 4644 08cf 08       		.byte	0x8
 4645 08d0 68000000 		.4byte	0x68
 4646 08d4 03       		.byte	0x3
 4647 08d5 23       		.byte	0x23
 4648 08d6 CC01     		.uleb128 0xcc
 4649 08d8 00       		.byte	0
 4650 08d9 09       		.uleb128 0x9
 4651 08da 51060000 		.4byte	0x651
 4652 08de E9080000 		.4byte	0x8e9
 4653 08e2 0A       		.uleb128 0xa
 4654 08e3 6F000000 		.4byte	0x6f
 4655 08e7 19       		.byte	0x19
 4656 08e8 00       		.byte	0
 4657 08e9 09       		.uleb128 0x9
 4658 08ea 51060000 		.4byte	0x651
 4659 08ee F9080000 		.4byte	0x8f9
 4660 08f2 0A       		.uleb128 0xa
 4661 08f3 6F000000 		.4byte	0x6f
 4662 08f7 07       		.byte	0x7
 4663 08f8 00       		.byte	0
 4664 08f9 09       		.uleb128 0x9
 4665 08fa 51060000 		.4byte	0x651
 4666 08fe 09090000 		.4byte	0x909
 4667 0902 0A       		.uleb128 0xa
 4668 0903 6F000000 		.4byte	0x6f
 4669 0907 17       		.byte	0x17
 4670 0908 00       		.byte	0
 4671 0909 18       		.uleb128 0x18
 4672 090a F0       		.byte	0xf0
 4673 090b 04       		.byte	0x4
 4674 090c 9E02     		.2byte	0x29e
 4675 090e 07       		.byte	0x7
 4676 090f 34090000 		.4byte	0x934
 4677 0913 16       		.uleb128 0x16
 4678 0914 A6010000 		.4byte	.LASF115
 4679 0918 04       		.byte	0x4
 4680 0919 A102     		.2byte	0x2a1
 4681 091b 1B       		.byte	0x1b
 4682 091c 34090000 		.4byte	0x934
 4683 0920 02       		.byte	0x2
 4684 0921 23       		.byte	0x23
 4685 0922 00       		.uleb128 0
 4686 0923 16       		.uleb128 0x16
 4687 0924 F7080000 		.4byte	.LASF116
ARM GAS  /tmp/ccPfsSwR.s 			page 99


 4688 0928 04       		.byte	0x4
 4689 0929 A202     		.2byte	0x2a2
 4690 092b 18       		.byte	0x18
 4691 092c 44090000 		.4byte	0x944
 4692 0930 02       		.byte	0x2
 4693 0931 23       		.byte	0x23
 4694 0932 78       		.uleb128 0x78
 4695 0933 00       		.byte	0
 4696 0934 09       		.uleb128 0x9
 4697 0935 33030000 		.4byte	0x333
 4698 0939 44090000 		.4byte	0x944
 4699 093d 0A       		.uleb128 0xa
 4700 093e 6F000000 		.4byte	0x6f
 4701 0942 1D       		.byte	0x1d
 4702 0943 00       		.byte	0
 4703 0944 09       		.uleb128 0x9
 4704 0945 6F000000 		.4byte	0x6f
 4705 0949 54090000 		.4byte	0x954
 4706 094d 0A       		.uleb128 0xa
 4707 094e 6F000000 		.4byte	0x6f
 4708 0952 1D       		.byte	0x1d
 4709 0953 00       		.byte	0
 4710 0954 19       		.uleb128 0x19
 4711 0955 F0       		.byte	0xf0
 4712 0956 04       		.byte	0x4
 4713 0957 8302     		.2byte	0x283
 4714 0959 03       		.byte	0x3
 4715 095a 79090000 		.4byte	0x979
 4716 095e 1A       		.uleb128 0x1a
 4717 095f 57070000 		.4byte	.LASF65
 4718 0963 04       		.byte	0x4
 4719 0964 9A02     		.2byte	0x29a
 4720 0966 0B       		.byte	0xb
 4721 0967 95070000 		.4byte	0x795
 4722 096b 1A       		.uleb128 0x1a
 4723 096c BD050000 		.4byte	.LASF117
 4724 0970 04       		.byte	0x4
 4725 0971 A302     		.2byte	0x2a3
 4726 0973 0B       		.byte	0xb
 4727 0974 09090000 		.4byte	0x909
 4728 0978 00       		.byte	0
 4729 0979 09       		.uleb128 0x9
 4730 097a 51060000 		.4byte	0x651
 4731 097e 89090000 		.4byte	0x989
 4732 0982 0A       		.uleb128 0xa
 4733 0983 6F000000 		.4byte	0x6f
 4734 0987 18       		.byte	0x18
 4735 0988 00       		.byte	0
 4736 0989 1B       		.uleb128 0x1b
 4737 098a D5080000 		.4byte	.LASF204
 4738 098e 01       		.byte	0x1
 4739 098f 0F       		.uleb128 0xf
 4740 0990 04       		.byte	0x4
 4741 0991 89090000 		.4byte	0x989
 4742 0995 1C       		.uleb128 0x1c
 4743 0996 01       		.byte	0x1
 4744 0997 A1090000 		.4byte	0x9a1
ARM GAS  /tmp/ccPfsSwR.s 			page 100


 4745 099b 13       		.uleb128 0x13
 4746 099c CB040000 		.4byte	0x4cb
 4747 09a0 00       		.byte	0
 4748 09a1 0F       		.uleb128 0xf
 4749 09a2 04       		.byte	0x4
 4750 09a3 95090000 		.4byte	0x995
 4751 09a7 0F       		.uleb128 0xf
 4752 09a8 04       		.byte	0x4
 4753 09a9 94010000 		.4byte	0x194
 4754 09ad 1C       		.uleb128 0x1c
 4755 09ae 01       		.byte	0x1
 4756 09af B9090000 		.4byte	0x9b9
 4757 09b3 13       		.uleb128 0x13
 4758 09b4 68000000 		.4byte	0x68
 4759 09b8 00       		.byte	0
 4760 09b9 0F       		.uleb128 0xf
 4761 09ba 04       		.byte	0x4
 4762 09bb BF090000 		.4byte	0x9bf
 4763 09bf 0F       		.uleb128 0xf
 4764 09c0 04       		.byte	0x4
 4765 09c1 AD090000 		.4byte	0x9ad
 4766 09c5 09       		.uleb128 0x9
 4767 09c6 EE060000 		.4byte	0x6ee
 4768 09ca D5090000 		.4byte	0x9d5
 4769 09ce 0A       		.uleb128 0xa
 4770 09cf 6F000000 		.4byte	0x6f
 4771 09d3 02       		.byte	0x2
 4772 09d4 00       		.byte	0
 4773 09d5 1D       		.uleb128 0x1d
 4774 09d6 92010000 		.4byte	.LASF118
 4775 09da 04       		.byte	0x4
 4776 09db 3303     		.2byte	0x333
 4777 09dd 17       		.byte	0x17
 4778 09de CB040000 		.4byte	0x4cb
 4779 09e2 01       		.byte	0x1
 4780 09e3 01       		.byte	0x1
 4781 09e4 1D       		.uleb128 0x1d
 4782 09e5 4C050000 		.4byte	.LASF119
 4783 09e9 04       		.byte	0x4
 4784 09ea 3403     		.2byte	0x334
 4785 09ec 1D       		.byte	0x1d
 4786 09ed D1040000 		.4byte	0x4d1
 4787 09f1 01       		.byte	0x1
 4788 09f2 01       		.byte	0x1
 4789 09f3 14       		.uleb128 0x14
 4790 09f4 29000000 		.4byte	0x29
 4791 09f8 02       		.uleb128 0x2
 4792 09f9 08       		.byte	0x8
 4793 09fa 04       		.byte	0x4
 4794 09fb 7A080000 		.4byte	.LASF120
 4795 09ff 1E       		.uleb128 0x1e
 4796 0a00 E2060000 		.4byte	.LASF205
 4797 0a04 05       		.byte	0x5
 4798 0a05 01       		.byte	0x1
 4799 0a06 30000000 		.4byte	0x30
 4800 0a0a 06       		.byte	0x6
 4801 0a0b 5F02     		.2byte	0x25f
ARM GAS  /tmp/ccPfsSwR.s 			page 101


 4802 0a0d 06       		.byte	0x6
 4803 0a0e 1F0A0000 		.4byte	0xa1f
 4804 0a12 1F       		.uleb128 0x1f
 4805 0a13 97050000 		.4byte	.LASF121
 4806 0a17 7F       		.sleb128 -1
 4807 0a18 20       		.uleb128 0x20
 4808 0a19 0E020000 		.4byte	.LASF122
 4809 0a1d 00       		.byte	0
 4810 0a1e 00       		.byte	0
 4811 0a1f 1D       		.uleb128 0x1d
 4812 0a20 59040000 		.4byte	.LASF123
 4813 0a24 06       		.byte	0x6
 4814 0a25 6802     		.2byte	0x268
 4815 0a27 23       		.byte	0x23
 4816 0a28 FF090000 		.4byte	0x9ff
 4817 0a2c 01       		.byte	0x1
 4818 0a2d 01       		.byte	0x1
 4819 0a2e 21       		.uleb128 0x21
 4820 0a2f 74020000 		.4byte	.LASF124
 4821 0a33 07       		.byte	0x7
 4822 0a34 67       		.byte	0x67
 4823 0a35 0E       		.byte	0xe
 4824 0a36 4B060000 		.4byte	0x64b
 4825 0a3a 01       		.byte	0x1
 4826 0a3b 01       		.byte	0x1
 4827 0a3c 0D       		.uleb128 0xd
 4828 0a3d 29060000 		.4byte	.LASF125
 4829 0a41 08       		.byte	0x8
 4830 0a42 08       		.byte	0x8
 4831 0a43 12       		.byte	0x12
 4832 0a44 08       		.byte	0x8
 4833 0a45 640A0000 		.4byte	0xa64
 4834 0a49 0E       		.uleb128 0xe
 4835 0a4a 7800     		.ascii	"x\000"
 4836 0a4c 08       		.byte	0x8
 4837 0a4d 14       		.byte	0x14
 4838 0a4e 08       		.byte	0x8
 4839 0a4f 29000000 		.4byte	0x29
 4840 0a53 02       		.byte	0x2
 4841 0a54 23       		.byte	0x23
 4842 0a55 00       		.uleb128 0
 4843 0a56 0E       		.uleb128 0xe
 4844 0a57 7900     		.ascii	"y\000"
 4845 0a59 08       		.byte	0x8
 4846 0a5a 14       		.byte	0x14
 4847 0a5b 0B       		.byte	0xb
 4848 0a5c 29000000 		.4byte	0x29
 4849 0a60 02       		.byte	0x2
 4850 0a61 23       		.byte	0x23
 4851 0a62 04       		.uleb128 0x4
 4852 0a63 00       		.byte	0
 4853 0a64 0D       		.uleb128 0xd
 4854 0a65 55010000 		.4byte	.LASF126
 4855 0a69 04       		.byte	0x4
 4856 0a6a 09       		.byte	0x9
 4857 0a6b 09       		.byte	0x9
 4858 0a6c 09       		.byte	0x9
ARM GAS  /tmp/ccPfsSwR.s 			page 102


 4859 0a6d AE0A0000 		.4byte	0xaae
 4860 0a71 0C       		.uleb128 0xc
 4861 0a72 4E060000 		.4byte	.LASF127
 4862 0a76 09       		.byte	0x9
 4863 0a77 0B       		.byte	0xb
 4864 0a78 08       		.byte	0x8
 4865 0a79 51060000 		.4byte	0x651
 4866 0a7d 02       		.byte	0x2
 4867 0a7e 23       		.byte	0x23
 4868 0a7f 00       		.uleb128 0
 4869 0a80 0C       		.uleb128 0xc
 4870 0a81 7B030000 		.4byte	.LASF128
 4871 0a85 09       		.byte	0x9
 4872 0a86 0C       		.byte	0xc
 4873 0a87 08       		.byte	0x8
 4874 0a88 51060000 		.4byte	0x651
 4875 0a8c 02       		.byte	0x2
 4876 0a8d 23       		.byte	0x23
 4877 0a8e 01       		.uleb128 0x1
 4878 0a8f 0C       		.uleb128 0xc
 4879 0a90 56060000 		.4byte	.LASF129
 4880 0a94 09       		.byte	0x9
 4881 0a95 0D       		.byte	0xd
 4882 0a96 08       		.byte	0x8
 4883 0a97 51060000 		.4byte	0x651
 4884 0a9b 02       		.byte	0x2
 4885 0a9c 23       		.byte	0x23
 4886 0a9d 02       		.uleb128 0x2
 4887 0a9e 0C       		.uleb128 0xc
 4888 0a9f 84030000 		.4byte	.LASF130
 4889 0aa3 09       		.byte	0x9
 4890 0aa4 0E       		.byte	0xe
 4891 0aa5 08       		.byte	0x8
 4892 0aa6 51060000 		.4byte	0x651
 4893 0aaa 02       		.byte	0x2
 4894 0aab 23       		.byte	0x23
 4895 0aac 03       		.uleb128 0x3
 4896 0aad 00       		.byte	0
 4897 0aae 22       		.uleb128 0x22
 4898 0aaf 3E020000 		.4byte	.LASF206
 4899 0ab3 04       		.byte	0x4
 4900 0ab4 09       		.byte	0x9
 4901 0ab5 07       		.byte	0x7
 4902 0ab6 07       		.byte	0x7
 4903 0ab7 D20A0000 		.4byte	0xad2
 4904 0abb 23       		.uleb128 0x23
 4905 0abc 6500     		.ascii	"e\000"
 4906 0abe 09       		.byte	0x9
 4907 0abf 0F       		.byte	0xf
 4908 0ac0 04       		.byte	0x4
 4909 0ac1 640A0000 		.4byte	0xa64
 4910 0ac5 08       		.uleb128 0x8
 4911 0ac6 2D020000 		.4byte	.LASF131
 4912 0aca 09       		.byte	0x9
 4913 0acb 10       		.byte	0x10
 4914 0acc 06       		.byte	0x6
 4915 0acd 68000000 		.4byte	0x68
ARM GAS  /tmp/ccPfsSwR.s 			page 103


 4916 0ad1 00       		.byte	0
 4917 0ad2 0D       		.uleb128 0xd
 4918 0ad3 37050000 		.4byte	.LASF132
 4919 0ad7 40       		.byte	0x40
 4920 0ad8 09       		.byte	0x9
 4921 0ad9 13       		.byte	0x13
 4922 0ada 08       		.byte	0x8
 4923 0adb 900B0000 		.4byte	0xb90
 4924 0adf 0C       		.uleb128 0xc
 4925 0ae0 E6080000 		.4byte	.LASF133
 4926 0ae4 09       		.byte	0x9
 4927 0ae5 15       		.byte	0x15
 4928 0ae6 0E       		.byte	0xe
 4929 0ae7 3C0A0000 		.4byte	0xa3c
 4930 0aeb 02       		.byte	0x2
 4931 0aec 23       		.byte	0x23
 4932 0aed 00       		.uleb128 0
 4933 0aee 0C       		.uleb128 0xc
 4934 0aef 6A060000 		.4byte	.LASF134
 4935 0af3 09       		.byte	0x9
 4936 0af4 16       		.byte	0x16
 4937 0af5 0E       		.byte	0xe
 4938 0af6 3C0A0000 		.4byte	0xa3c
 4939 0afa 02       		.byte	0x2
 4940 0afb 23       		.byte	0x23
 4941 0afc 08       		.uleb128 0x8
 4942 0afd 0E       		.uleb128 0xe
 4943 0afe 723100   		.ascii	"r1\000"
 4944 0b01 09       		.byte	0x9
 4945 0b02 17       		.byte	0x17
 4946 0b03 0E       		.byte	0xe
 4947 0b04 3C0A0000 		.4byte	0xa3c
 4948 0b08 02       		.byte	0x2
 4949 0b09 23       		.byte	0x23
 4950 0b0a 10       		.uleb128 0x10
 4951 0b0b 0E       		.uleb128 0xe
 4952 0b0c 723200   		.ascii	"r2\000"
 4953 0b0f 09       		.byte	0x9
 4954 0b10 17       		.byte	0x17
 4955 0b11 12       		.byte	0x12
 4956 0b12 3C0A0000 		.4byte	0xa3c
 4957 0b16 02       		.byte	0x2
 4958 0b17 23       		.byte	0x23
 4959 0b18 18       		.uleb128 0x18
 4960 0b19 0C       		.uleb128 0xc
 4961 0b1a A4030000 		.4byte	.LASF135
 4962 0b1e 09       		.byte	0x9
 4963 0b1f 18       		.byte	0x18
 4964 0b20 08       		.byte	0x8
 4965 0b21 29000000 		.4byte	0x29
 4966 0b25 02       		.byte	0x2
 4967 0b26 23       		.byte	0x23
 4968 0b27 20       		.uleb128 0x20
 4969 0b28 0E       		.uleb128 0xe
 4970 0b29 506E00   		.ascii	"Pn\000"
 4971 0b2c 09       		.byte	0x9
 4972 0b2d 19       		.byte	0x19
ARM GAS  /tmp/ccPfsSwR.s 			page 104


 4973 0b2e 08       		.byte	0x8
 4974 0b2f 29000000 		.4byte	0x29
 4975 0b33 02       		.byte	0x2
 4976 0b34 23       		.byte	0x23
 4977 0b35 24       		.uleb128 0x24
 4978 0b36 0E       		.uleb128 0xe
 4979 0b37 507400   		.ascii	"Pt\000"
 4980 0b3a 09       		.byte	0x9
 4981 0b3b 1A       		.byte	0x1a
 4982 0b3c 08       		.byte	0x8
 4983 0b3d 29000000 		.4byte	0x29
 4984 0b41 02       		.byte	0x2
 4985 0b42 23       		.byte	0x23
 4986 0b43 28       		.uleb128 0x28
 4987 0b44 0E       		.uleb128 0xe
 4988 0b45 506E6200 		.ascii	"Pnb\000"
 4989 0b49 09       		.byte	0x9
 4990 0b4a 1B       		.byte	0x1b
 4991 0b4b 08       		.byte	0x8
 4992 0b4c 29000000 		.4byte	0x29
 4993 0b50 02       		.byte	0x2
 4994 0b51 23       		.byte	0x23
 4995 0b52 2C       		.uleb128 0x2c
 4996 0b53 0C       		.uleb128 0xc
 4997 0b54 71060000 		.4byte	.LASF136
 4998 0b58 09       		.byte	0x9
 4999 0b59 1C       		.byte	0x1c
 5000 0b5a 08       		.byte	0x8
 5001 0b5b 29000000 		.4byte	0x29
 5002 0b5f 02       		.byte	0x2
 5003 0b60 23       		.byte	0x23
 5004 0b61 30       		.uleb128 0x30
 5005 0b62 0C       		.uleb128 0xc
 5006 0b63 06090000 		.4byte	.LASF137
 5007 0b67 09       		.byte	0x9
 5008 0b68 1C       		.byte	0x1c
 5009 0b69 14       		.byte	0x14
 5010 0b6a 29000000 		.4byte	0x29
 5011 0b6e 02       		.byte	0x2
 5012 0b6f 23       		.byte	0x23
 5013 0b70 34       		.uleb128 0x34
 5014 0b71 0C       		.uleb128 0xc
 5015 0b72 B9010000 		.4byte	.LASF138
 5016 0b76 09       		.byte	0x9
 5017 0b77 1D       		.byte	0x1d
 5018 0b78 08       		.byte	0x8
 5019 0b79 29000000 		.4byte	0x29
 5020 0b7d 02       		.byte	0x2
 5021 0b7e 23       		.byte	0x23
 5022 0b7f 38       		.uleb128 0x38
 5023 0b80 0C       		.uleb128 0xc
 5024 0b81 B1040000 		.4byte	.LASF139
 5025 0b85 09       		.byte	0x9
 5026 0b86 1E       		.byte	0x1e
 5027 0b87 14       		.byte	0x14
 5028 0b88 AE0A0000 		.4byte	0xaae
 5029 0b8c 02       		.byte	0x2
ARM GAS  /tmp/ccPfsSwR.s 			page 105


 5030 0b8d 23       		.byte	0x23
 5031 0b8e 3C       		.uleb128 0x3c
 5032 0b8f 00       		.byte	0
 5033 0b90 0D       		.uleb128 0xd
 5034 0b91 2A070000 		.4byte	.LASF140
 5035 0b95 40       		.byte	0x40
 5036 0b96 09       		.byte	0x9
 5037 0b97 21       		.byte	0x21
 5038 0b98 08       		.byte	0x8
 5039 0b99 500C0000 		.4byte	0xc50
 5040 0b9d 0C       		.uleb128 0xc
 5041 0b9e E6080000 		.4byte	.LASF133
 5042 0ba2 09       		.byte	0x9
 5043 0ba3 2B       		.byte	0x2b
 5044 0ba4 0E       		.byte	0xe
 5045 0ba5 3C0A0000 		.4byte	0xa3c
 5046 0ba9 02       		.byte	0x2
 5047 0baa 23       		.byte	0x23
 5048 0bab 00       		.uleb128 0
 5049 0bac 0C       		.uleb128 0xc
 5050 0bad 23010000 		.4byte	.LASF141
 5051 0bb1 09       		.byte	0x9
 5052 0bb2 2C       		.byte	0x2c
 5053 0bb3 08       		.byte	0x8
 5054 0bb4 29000000 		.4byte	0x29
 5055 0bb8 02       		.byte	0x2
 5056 0bb9 23       		.byte	0x23
 5057 0bba 08       		.uleb128 0x8
 5058 0bbb 0C       		.uleb128 0xc
 5059 0bbc 00060000 		.4byte	.LASF142
 5060 0bc0 09       		.byte	0x9
 5061 0bc1 2E       		.byte	0x2e
 5062 0bc2 0E       		.byte	0xe
 5063 0bc3 3C0A0000 		.4byte	0xa3c
 5064 0bc7 02       		.byte	0x2
 5065 0bc8 23       		.byte	0x23
 5066 0bc9 0C       		.uleb128 0xc
 5067 0bca 0C       		.uleb128 0xc
 5068 0bcb BA060000 		.4byte	.LASF143
 5069 0bcf 09       		.byte	0x9
 5070 0bd0 2F       		.byte	0x2f
 5071 0bd1 08       		.byte	0x8
 5072 0bd2 29000000 		.4byte	0x29
 5073 0bd6 02       		.byte	0x2
 5074 0bd7 23       		.byte	0x23
 5075 0bd8 14       		.uleb128 0x14
 5076 0bd9 0C       		.uleb128 0xc
 5077 0bda 01020000 		.4byte	.LASF144
 5078 0bde 09       		.byte	0x9
 5079 0bdf 31       		.byte	0x31
 5080 0be0 0E       		.byte	0xe
 5081 0be1 3C0A0000 		.4byte	0xa3c
 5082 0be5 02       		.byte	0x2
 5083 0be6 23       		.byte	0x23
 5084 0be7 18       		.uleb128 0x18
 5085 0be8 0C       		.uleb128 0xc
 5086 0be9 3C010000 		.4byte	.LASF145
ARM GAS  /tmp/ccPfsSwR.s 			page 106


 5087 0bed 09       		.byte	0x9
 5088 0bee 32       		.byte	0x32
 5089 0bef 08       		.byte	0x8
 5090 0bf0 29000000 		.4byte	0x29
 5091 0bf4 02       		.byte	0x2
 5092 0bf5 23       		.byte	0x23
 5093 0bf6 20       		.uleb128 0x20
 5094 0bf7 0C       		.uleb128 0xc
 5095 0bf8 56020000 		.4byte	.LASF146
 5096 0bfc 09       		.byte	0x9
 5097 0bfd 34       		.byte	0x34
 5098 0bfe 0E       		.byte	0xe
 5099 0bff 3C0A0000 		.4byte	0xa3c
 5100 0c03 02       		.byte	0x2
 5101 0c04 23       		.byte	0x23
 5102 0c05 24       		.uleb128 0x24
 5103 0c06 0C       		.uleb128 0xc
 5104 0c07 4C000000 		.4byte	.LASF147
 5105 0c0b 09       		.byte	0x9
 5106 0c0c 36       		.byte	0x36
 5107 0c0d 08       		.byte	0x8
 5108 0c0e 29000000 		.4byte	0x29
 5109 0c12 02       		.byte	0x2
 5110 0c13 23       		.byte	0x23
 5111 0c14 2C       		.uleb128 0x2c
 5112 0c15 0C       		.uleb128 0xc
 5113 0c16 8D040000 		.4byte	.LASF148
 5114 0c1a 09       		.byte	0x9
 5115 0c1b 37       		.byte	0x37
 5116 0c1c 08       		.byte	0x8
 5117 0c1d 29000000 		.4byte	0x29
 5118 0c21 02       		.byte	0x2
 5119 0c22 23       		.byte	0x23
 5120 0c23 30       		.uleb128 0x30
 5121 0c24 0C       		.uleb128 0xc
 5122 0c25 55000000 		.4byte	.LASF149
 5123 0c29 09       		.byte	0x9
 5124 0c2a 37       		.byte	0x37
 5125 0c2b 0E       		.byte	0xe
 5126 0c2c 29000000 		.4byte	0x29
 5127 0c30 02       		.byte	0x2
 5128 0c31 23       		.byte	0x23
 5129 0c32 34       		.uleb128 0x34
 5130 0c33 0E       		.uleb128 0xe
 5131 0c34 4900     		.ascii	"I\000"
 5132 0c36 09       		.byte	0x9
 5133 0c37 38       		.byte	0x38
 5134 0c38 08       		.byte	0x8
 5135 0c39 29000000 		.4byte	0x29
 5136 0c3d 02       		.byte	0x2
 5137 0c3e 23       		.byte	0x23
 5138 0c3f 38       		.uleb128 0x38
 5139 0c40 0C       		.uleb128 0xc
 5140 0c41 9B040000 		.4byte	.LASF150
 5141 0c45 09       		.byte	0x9
 5142 0c46 38       		.byte	0x38
 5143 0c47 0B       		.byte	0xb
ARM GAS  /tmp/ccPfsSwR.s 			page 107


 5144 0c48 29000000 		.4byte	0x29
 5145 0c4c 02       		.byte	0x2
 5146 0c4d 23       		.byte	0x23
 5147 0c4e 3C       		.uleb128 0x3c
 5148 0c4f 00       		.byte	0
 5149 0c50 0D       		.uleb128 0xd
 5150 0c51 07070000 		.4byte	.LASF151
 5151 0c55 90       		.byte	0x90
 5152 0c56 01       		.byte	0x1
 5153 0c57 14       		.byte	0x14
 5154 0c58 08       		.byte	0x8
 5155 0c59 AD0C0000 		.4byte	0xcad
 5156 0c5d 0C       		.uleb128 0xc
 5157 0c5e 03030000 		.4byte	.LASF152
 5158 0c62 01       		.byte	0x1
 5159 0c63 16       		.byte	0x16
 5160 0c64 11       		.byte	0x11
 5161 0c65 AD0C0000 		.4byte	0xcad
 5162 0c69 02       		.byte	0x2
 5163 0c6a 23       		.byte	0x23
 5164 0c6b 00       		.uleb128 0
 5165 0c6c 0C       		.uleb128 0xc
 5166 0c6d 9A000000 		.4byte	.LASF153
 5167 0c71 01       		.byte	0x1
 5168 0c72 17       		.byte	0x17
 5169 0c73 06       		.byte	0x6
 5170 0c74 68000000 		.4byte	0x68
 5171 0c78 03       		.byte	0x3
 5172 0c79 23       		.byte	0x23
 5173 0c7a 8001     		.uleb128 0x80
 5174 0c7c 0C       		.uleb128 0xc
 5175 0c7d DC030000 		.4byte	.LASF154
 5176 0c81 01       		.byte	0x1
 5177 0c82 19       		.byte	0x19
 5178 0c83 0F       		.byte	0xf
 5179 0c84 BD0C0000 		.4byte	0xcbd
 5180 0c88 03       		.byte	0x3
 5181 0c89 23       		.byte	0x23
 5182 0c8a 8401     		.uleb128 0x84
 5183 0c8c 0C       		.uleb128 0xc
 5184 0c8d 1C000000 		.4byte	.LASF155
 5185 0c91 01       		.byte	0x1
 5186 0c92 1A       		.byte	0x1a
 5187 0c93 0F       		.byte	0xf
 5188 0c94 BD0C0000 		.4byte	0xcbd
 5189 0c98 03       		.byte	0x3
 5190 0c99 23       		.byte	0x23
 5191 0c9a 8801     		.uleb128 0x88
 5192 0c9c 0C       		.uleb128 0xc
 5193 0c9d 4C000000 		.4byte	.LASF147
 5194 0ca1 01       		.byte	0x1
 5195 0ca2 1D       		.byte	0x1d
 5196 0ca3 08       		.byte	0x8
 5197 0ca4 29000000 		.4byte	0x29
 5198 0ca8 03       		.byte	0x3
 5199 0ca9 23       		.byte	0x23
 5200 0caa 8C01     		.uleb128 0x8c
ARM GAS  /tmp/ccPfsSwR.s 			page 108


 5201 0cac 00       		.byte	0
 5202 0cad 09       		.uleb128 0x9
 5203 0cae D20A0000 		.4byte	0xad2
 5204 0cb2 BD0C0000 		.4byte	0xcbd
 5205 0cb6 0A       		.uleb128 0xa
 5206 0cb7 6F000000 		.4byte	0x6f
 5207 0cbb 01       		.byte	0x1
 5208 0cbc 00       		.byte	0
 5209 0cbd 0F       		.uleb128 0xf
 5210 0cbe 04       		.byte	0x4
 5211 0cbf 900B0000 		.4byte	0xb90
 5212 0cc3 0D       		.uleb128 0xd
 5213 0cc4 AA060000 		.4byte	.LASF156
 5214 0cc8 08       		.byte	0x8
 5215 0cc9 01       		.byte	0x1
 5216 0cca 20       		.byte	0x20
 5217 0ccb 08       		.byte	0x8
 5218 0ccc EF0C0000 		.4byte	0xcef
 5219 0cd0 0C       		.uleb128 0xc
 5220 0cd1 DC030000 		.4byte	.LASF154
 5221 0cd5 01       		.byte	0x1
 5222 0cd6 22       		.byte	0x22
 5223 0cd7 0F       		.byte	0xf
 5224 0cd8 BD0C0000 		.4byte	0xcbd
 5225 0cdc 02       		.byte	0x2
 5226 0cdd 23       		.byte	0x23
 5227 0cde 00       		.uleb128 0
 5228 0cdf 0C       		.uleb128 0xc
 5229 0ce0 1C000000 		.4byte	.LASF155
 5230 0ce4 01       		.byte	0x1
 5231 0ce5 23       		.byte	0x23
 5232 0ce6 0F       		.byte	0xf
 5233 0ce7 BD0C0000 		.4byte	0xcbd
 5234 0ceb 02       		.byte	0x2
 5235 0cec 23       		.byte	0x23
 5236 0ced 04       		.uleb128 0x4
 5237 0cee 00       		.byte	0
 5238 0cef 09       		.uleb128 0x9
 5239 0cf0 BD0C0000 		.4byte	0xcbd
 5240 0cf4 FF0C0000 		.4byte	0xcff
 5241 0cf8 0A       		.uleb128 0xa
 5242 0cf9 6F000000 		.4byte	0x6f
 5243 0cfd 63       		.byte	0x63
 5244 0cfe 00       		.byte	0
 5245 0cff 24       		.uleb128 0x24
 5246 0d00 A8040000 		.4byte	.LASF157
 5247 0d04 01       		.byte	0x1
 5248 0d05 28       		.byte	0x28
 5249 0d06 0E       		.byte	0xe
 5250 0d07 EF0C0000 		.4byte	0xcef
 5251 0d0b 01       		.byte	0x1
 5252 0d0c 05       		.byte	0x5
 5253 0d0d 03       		.byte	0x3
 5254 0d0e 00000000 		.4byte	g_bodies
 5255 0d12 24       		.uleb128 0x24
 5256 0d13 76050000 		.4byte	.LASF158
 5257 0d17 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 109


 5258 0d18 29       		.byte	0x29
 5259 0d19 05       		.byte	0x5
 5260 0d1a 68000000 		.4byte	0x68
 5261 0d1e 01       		.byte	0x1
 5262 0d1f 05       		.byte	0x5
 5263 0d20 03       		.byte	0x3
 5264 0d21 00000000 		.4byte	g_numBodies
 5265 0d25 09       		.uleb128 0x9
 5266 0d26 500C0000 		.4byte	0xc50
 5267 0d2a 350D0000 		.4byte	0xd35
 5268 0d2e 0A       		.uleb128 0xa
 5269 0d2f 6F000000 		.4byte	0x6f
 5270 0d33 63       		.byte	0x63
 5271 0d34 00       		.byte	0
 5272 0d35 24       		.uleb128 0x24
 5273 0d36 99030000 		.4byte	.LASF159
 5274 0d3a 01       		.byte	0x1
 5275 0d3b 2B       		.byte	0x2b
 5276 0d3c 10       		.byte	0x10
 5277 0d3d 250D0000 		.4byte	0xd25
 5278 0d41 01       		.byte	0x1
 5279 0d42 05       		.byte	0x5
 5280 0d43 03       		.byte	0x3
 5281 0d44 00000000 		.4byte	g_arbiters
 5282 0d48 09       		.uleb128 0x9
 5283 0d49 C30C0000 		.4byte	0xcc3
 5284 0d4d 580D0000 		.4byte	0xd58
 5285 0d51 0A       		.uleb128 0xa
 5286 0d52 6F000000 		.4byte	0x6f
 5287 0d56 63       		.byte	0x63
 5288 0d57 00       		.byte	0
 5289 0d58 24       		.uleb128 0x24
 5290 0d59 41040000 		.4byte	.LASF160
 5291 0d5d 01       		.byte	0x1
 5292 0d5e 2C       		.byte	0x2c
 5293 0d5f 13       		.byte	0x13
 5294 0d60 480D0000 		.4byte	0xd48
 5295 0d64 01       		.byte	0x1
 5296 0d65 05       		.byte	0x5
 5297 0d66 03       		.byte	0x3
 5298 0d67 00000000 		.4byte	g_arbiterKeys
 5299 0d6b 24       		.uleb128 0x24
 5300 0d6c 22000000 		.4byte	.LASF161
 5301 0d70 01       		.byte	0x1
 5302 0d71 2D       		.byte	0x2d
 5303 0d72 05       		.byte	0x5
 5304 0d73 68000000 		.4byte	0x68
 5305 0d77 01       		.byte	0x1
 5306 0d78 05       		.byte	0x5
 5307 0d79 03       		.byte	0x3
 5308 0d7a 00000000 		.4byte	g_numArbiters
 5309 0d7e 24       		.uleb128 0x24
 5310 0d7f A0040000 		.4byte	.LASF162
 5311 0d83 01       		.byte	0x1
 5312 0d84 2F       		.byte	0x2f
 5313 0d85 0D       		.byte	0xd
 5314 0d86 3C0A0000 		.4byte	0xa3c
ARM GAS  /tmp/ccPfsSwR.s 			page 110


 5315 0d8a 01       		.byte	0x1
 5316 0d8b 05       		.byte	0x5
 5317 0d8c 03       		.byte	0x3
 5318 0d8d 00000000 		.4byte	gravity
 5319 0d91 24       		.uleb128 0x24
 5320 0d92 D1060000 		.4byte	.LASF163
 5321 0d96 01       		.byte	0x1
 5322 0d97 30       		.byte	0x30
 5323 0d98 05       		.byte	0x5
 5324 0d99 68000000 		.4byte	0x68
 5325 0d9d 01       		.byte	0x1
 5326 0d9e 05       		.byte	0x5
 5327 0d9f 03       		.byte	0x3
 5328 0da0 00000000 		.4byte	iterations
 5329 0da4 24       		.uleb128 0x24
 5330 0da5 C1030000 		.4byte	.LASF164
 5331 0da9 01       		.byte	0x1
 5332 0daa 31       		.byte	0x31
 5333 0dab 05       		.byte	0x5
 5334 0dac 68000000 		.4byte	0x68
 5335 0db0 01       		.byte	0x1
 5336 0db1 05       		.byte	0x5
 5337 0db2 03       		.byte	0x3
 5338 0db3 00000000 		.4byte	accumulateImpulses
 5339 0db7 24       		.uleb128 0x24
 5340 0db8 BB000000 		.4byte	.LASF165
 5341 0dbc 01       		.byte	0x1
 5342 0dbd 32       		.byte	0x32
 5343 0dbe 05       		.byte	0x5
 5344 0dbf 68000000 		.4byte	0x68
 5345 0dc3 01       		.byte	0x1
 5346 0dc4 05       		.byte	0x5
 5347 0dc5 03       		.byte	0x3
 5348 0dc6 00000000 		.4byte	warmStarting
 5349 0dca 24       		.uleb128 0x24
 5350 0dcb EB020000 		.4byte	.LASF166
 5351 0dcf 01       		.byte	0x1
 5352 0dd0 33       		.byte	0x33
 5353 0dd1 05       		.byte	0x5
 5354 0dd2 68000000 		.4byte	0x68
 5355 0dd6 01       		.byte	0x1
 5356 0dd7 05       		.byte	0x5
 5357 0dd8 03       		.byte	0x3
 5358 0dd9 00000000 		.4byte	positionCorrection
 5359 0ddd 25       		.uleb128 0x25
 5360 0dde 01       		.byte	0x1
 5361 0ddf 6A030000 		.4byte	.LASF207
 5362 0de3 01       		.byte	0x1
 5363 0de4 9C01     		.2byte	0x19c
 5364 0de6 0E       		.byte	0xe
 5365 0de7 01       		.byte	0x1
 5366 0de8 BD0C0000 		.4byte	0xcbd
 5367 0dec 00000000 		.4byte	.LFB14
 5368 0df0 0C000000 		.4byte	.LFE14
 5369 0df4 02       		.byte	0x2
 5370 0df5 7D       		.byte	0x7d
 5371 0df6 00       		.sleb128 0
ARM GAS  /tmp/ccPfsSwR.s 			page 111


 5372 0df7 01       		.byte	0x1
 5373 0df8 100E0000 		.4byte	0xe10
 5374 0dfc 26       		.uleb128 0x26
 5375 0dfd 6900     		.ascii	"i\000"
 5376 0dff 01       		.byte	0x1
 5377 0e00 9C01     		.2byte	0x19c
 5378 0e02 1A       		.byte	0x1a
 5379 0e03 68000000 		.4byte	0x68
 5380 0e07 04000000 		.4byte	.LLST70
 5381 0e0b 00000000 		.4byte	.LVUS70
 5382 0e0f 00       		.byte	0
 5383 0e10 27       		.uleb128 0x27
 5384 0e11 01       		.byte	0x1
 5385 0e12 7B000000 		.4byte	.LASF167
 5386 0e16 01       		.byte	0x1
 5387 0e17 9601     		.2byte	0x196
 5388 0e19 06       		.byte	0x6
 5389 0e1a 01       		.byte	0x1
 5390 0e1b 00000000 		.4byte	.LFB13
 5391 0e1f 20000000 		.4byte	.LFE13
 5392 0e23 25000000 		.4byte	.LLST69
 5393 0e27 01       		.byte	0x1
 5394 0e28 3A0E0000 		.4byte	0xe3a
 5395 0e2c 28       		.uleb128 0x28
 5396 0e2d 6200     		.ascii	"b\000"
 5397 0e2f 01       		.byte	0x1
 5398 0e30 9601     		.2byte	0x196
 5399 0e32 1B       		.byte	0x1b
 5400 0e33 BD0C0000 		.4byte	0xcbd
 5401 0e37 01       		.byte	0x1
 5402 0e38 50       		.byte	0x50
 5403 0e39 00       		.byte	0
 5404 0e3a 27       		.uleb128 0x27
 5405 0e3b 01       		.byte	0x1
 5406 0e3c 10050000 		.4byte	.LASF168
 5407 0e40 01       		.byte	0x1
 5408 0e41 7701     		.2byte	0x177
 5409 0e43 06       		.byte	0x6
 5410 0e44 01       		.byte	0x1
 5411 0e45 00000000 		.4byte	.LFB12
 5412 0e49 9C000000 		.4byte	.LFE12
 5413 0e4d 51000000 		.4byte	.LLST66
 5414 0e51 01       		.byte	0x1
 5415 0e52 8B0E0000 		.4byte	0xe8b
 5416 0e56 26       		.uleb128 0x26
 5417 0e57 6200     		.ascii	"b\000"
 5418 0e59 01       		.byte	0x1
 5419 0e5a 7701     		.2byte	0x177
 5420 0e5c 1C       		.byte	0x1c
 5421 0e5d BD0C0000 		.4byte	0xcbd
 5422 0e61 BD000000 		.4byte	.LLST67
 5423 0e65 B9000000 		.4byte	.LVUS67
 5424 0e69 28       		.uleb128 0x28
 5425 0e6a 7700     		.ascii	"w\000"
 5426 0e6c 01       		.byte	0x1
 5427 0e6d 7701     		.2byte	0x177
 5428 0e6f 2B       		.byte	0x2b
ARM GAS  /tmp/ccPfsSwR.s 			page 112


 5429 0e70 3C0A0000 		.4byte	0xa3c
 5430 0e74 02       		.byte	0x2
 5431 0e75 91       		.byte	0x91
 5432 0e76 70       		.sleb128 -16
 5433 0e77 26       		.uleb128 0x26
 5434 0e78 6D00     		.ascii	"m\000"
 5435 0e7a 01       		.byte	0x1
 5436 0e7b 7701     		.2byte	0x177
 5437 0e7d 34       		.byte	0x34
 5438 0e7e 29000000 		.4byte	0x29
 5439 0e82 E1000000 		.4byte	.LLST68
 5440 0e86 DB000000 		.4byte	.LVUS68
 5441 0e8a 00       		.byte	0
 5442 0e8b 27       		.uleb128 0x27
 5443 0e8c 01       		.byte	0x1
 5444 0e8d 71010000 		.4byte	.LASF169
 5445 0e91 01       		.byte	0x1
 5446 0e92 4801     		.2byte	0x148
 5447 0e94 06       		.byte	0x6
 5448 0e95 01       		.byte	0x1
 5449 0e96 00000000 		.4byte	.LFB11
 5450 0e9a 8C010000 		.4byte	.LFE11
 5451 0e9e 0D010000 		.4byte	.LLST56
 5452 0ea2 01       		.byte	0x1
 5453 0ea3 30100000 		.4byte	0x1030
 5454 0ea7 26       		.uleb128 0x26
 5455 0ea8 647400   		.ascii	"dt\000"
 5456 0eab 01       		.byte	0x1
 5457 0eac 4801     		.2byte	0x148
 5458 0eae 11       		.byte	0x11
 5459 0eaf 29000000 		.4byte	0x29
 5460 0eb3 73010000 		.4byte	.LLST57
 5461 0eb7 6B010000 		.4byte	.LVUS57
 5462 0ebb 29       		.uleb128 0x29
 5463 0ebc 07010000 		.4byte	.LASF170
 5464 0ec0 01       		.byte	0x1
 5465 0ec1 4A01     		.2byte	0x14a
 5466 0ec3 08       		.byte	0x8
 5467 0ec4 29000000 		.4byte	0x29
 5468 0ec8 B1010000 		.4byte	.LLST58
 5469 0ecc AF010000 		.4byte	.LVUS58
 5470 0ed0 2A       		.uleb128 0x2a
 5471 0ed1 B8020000 		.4byte	.Ldebug_ranges0+0x2b8
 5472 0ed5 3E0F0000 		.4byte	0xf3e
 5473 0ed9 2B       		.uleb128 0x2b
 5474 0eda 6900     		.ascii	"i\000"
 5475 0edc 01       		.byte	0x1
 5476 0edd 5001     		.2byte	0x150
 5477 0edf 0B       		.byte	0xb
 5478 0ee0 68000000 		.4byte	0x68
 5479 0ee4 CD010000 		.4byte	.LLST59
 5480 0ee8 C5010000 		.4byte	.LVUS59
 5481 0eec 2C       		.uleb128 0x2c
 5482 0eed D0020000 		.4byte	.Ldebug_ranges0+0x2d0
 5483 0ef1 2B       		.uleb128 0x2b
 5484 0ef2 6200     		.ascii	"b\000"
 5485 0ef4 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 113


 5486 0ef5 5201     		.2byte	0x152
 5487 0ef7 10       		.byte	0x10
 5488 0ef8 BD0C0000 		.4byte	0xcbd
 5489 0efc 06020000 		.4byte	.LLST60
 5490 0f00 04020000 		.4byte	.LVUS60
 5491 0f04 2D       		.uleb128 0x2d
 5492 0f05 56000000 		.4byte	.LVL180
 5493 0f09 7C1A0000 		.4byte	0x1a7c
 5494 0f0d 2D       		.uleb128 0x2d
 5495 0f0e 72000000 		.4byte	.LVL181
 5496 0f12 8A1A0000 		.4byte	0x1a8a
 5497 0f16 2E       		.uleb128 0x2e
 5498 0f17 8E000000 		.4byte	.LVL182
 5499 0f1b 7C1A0000 		.4byte	0x1a7c
 5500 0f1f 2C0F0000 		.4byte	0xf2c
 5501 0f23 2F       		.uleb128 0x2f
 5502 0f24 02       		.byte	0x2
 5503 0f25 90       		.byte	0x90
 5504 0f26 40       		.uleb128 0x40
 5505 0f27 03       		.byte	0x3
 5506 0f28 F5       		.byte	0xf5
 5507 0f29 50       		.uleb128 0x50
 5508 0f2a 29       		.uleb128 0x29
 5509 0f2b 00       		.byte	0
 5510 0f2c 30       		.uleb128 0x30
 5511 0f2d 9E000000 		.4byte	.LVL183
 5512 0f31 981A0000 		.4byte	0x1a98
 5513 0f35 2F       		.uleb128 0x2f
 5514 0f36 01       		.byte	0x1
 5515 0f37 50       		.byte	0x50
 5516 0f38 02       		.byte	0x2
 5517 0f39 74       		.byte	0x74
 5518 0f3a 0C       		.sleb128 12
 5519 0f3b 00       		.byte	0
 5520 0f3c 00       		.byte	0
 5521 0f3d 00       		.byte	0
 5522 0f3e 31       		.uleb128 0x31
 5523 0f3f BC000000 		.4byte	.LBB115
 5524 0f43 DC000000 		.4byte	.LBE115
 5525 0f47 770F0000 		.4byte	0xf77
 5526 0f4b 2B       		.uleb128 0x2b
 5527 0f4c 6900     		.ascii	"i\000"
 5528 0f4e 01       		.byte	0x1
 5529 0f4f 5D01     		.2byte	0x15d
 5530 0f51 0E       		.byte	0xe
 5531 0f52 68000000 		.4byte	0x68
 5532 0f56 1D020000 		.4byte	.LLST61
 5533 0f5a 19020000 		.4byte	.LVUS61
 5534 0f5e 30       		.uleb128 0x30
 5535 0f5f D2000000 		.4byte	.LVL187
 5536 0f63 54130000 		.4byte	0x1354
 5537 0f67 2F       		.uleb128 0x2f
 5538 0f68 01       		.byte	0x1
 5539 0f69 50       		.byte	0x50
 5540 0f6a 02       		.byte	0x2
 5541 0f6b 75       		.byte	0x75
 5542 0f6c 00       		.sleb128 0
ARM GAS  /tmp/ccPfsSwR.s 			page 114


 5543 0f6d 2F       		.uleb128 0x2f
 5544 0f6e 02       		.byte	0x2
 5545 0f6f 90       		.byte	0x90
 5546 0f70 40       		.uleb128 0x40
 5547 0f71 03       		.byte	0x3
 5548 0f72 F5       		.byte	0xf5
 5549 0f73 51       		.uleb128 0x51
 5550 0f74 29       		.uleb128 0x29
 5551 0f75 00       		.byte	0
 5552 0f76 00       		.byte	0
 5553 0f77 31       		.uleb128 0x31
 5554 0f78 DC000000 		.4byte	.LBB116
 5555 0f7c 12010000 		.4byte	.LBE116
 5556 0f80 C60F0000 		.4byte	0xfc6
 5557 0f84 2B       		.uleb128 0x2b
 5558 0f85 697400   		.ascii	"it\000"
 5559 0f88 01       		.byte	0x1
 5560 0f89 6301     		.2byte	0x163
 5561 0f8b 0B       		.byte	0xb
 5562 0f8c 68000000 		.4byte	0x68
 5563 0f90 40020000 		.4byte	.LLST62
 5564 0f94 3C020000 		.4byte	.LVUS62
 5565 0f98 32       		.uleb128 0x32
 5566 0f99 EC000000 		.4byte	.LBB117
 5567 0f9d 06010000 		.4byte	.LBE117
 5568 0fa1 2B       		.uleb128 0x2b
 5569 0fa2 6900     		.ascii	"i\000"
 5570 0fa4 01       		.byte	0x1
 5571 0fa5 6501     		.2byte	0x165
 5572 0fa7 12       		.byte	0x12
 5573 0fa8 68000000 		.4byte	0x68
 5574 0fac 67020000 		.4byte	.LLST63
 5575 0fb0 5F020000 		.4byte	.LVUS63
 5576 0fb4 30       		.uleb128 0x30
 5577 0fb5 FE000000 		.4byte	.LVL193
 5578 0fb9 30100000 		.4byte	0x1030
 5579 0fbd 2F       		.uleb128 0x2f
 5580 0fbe 01       		.byte	0x1
 5581 0fbf 50       		.byte	0x50
 5582 0fc0 02       		.byte	0x2
 5583 0fc1 75       		.byte	0x75
 5584 0fc2 00       		.sleb128 0
 5585 0fc3 00       		.byte	0
 5586 0fc4 00       		.byte	0
 5587 0fc5 00       		.byte	0
 5588 0fc6 31       		.uleb128 0x31
 5589 0fc7 12010000 		.4byte	.LBB118
 5590 0fcb 60010000 		.4byte	.LBE118
 5591 0fcf 26100000 		.4byte	0x1026
 5592 0fd3 2B       		.uleb128 0x2b
 5593 0fd4 6900     		.ascii	"i\000"
 5594 0fd6 01       		.byte	0x1
 5595 0fd7 6A01     		.2byte	0x16a
 5596 0fd9 0B       		.byte	0xb
 5597 0fda 68000000 		.4byte	0x68
 5598 0fde A6020000 		.4byte	.LLST64
 5599 0fe2 9E020000 		.4byte	.LVUS64
ARM GAS  /tmp/ccPfsSwR.s 			page 115


 5600 0fe6 2C       		.uleb128 0x2c
 5601 0fe7 E8020000 		.4byte	.Ldebug_ranges0+0x2e8
 5602 0feb 2B       		.uleb128 0x2b
 5603 0fec 6200     		.ascii	"b\000"
 5604 0fee 01       		.byte	0x1
 5605 0fef 6C01     		.2byte	0x16c
 5606 0ff1 10       		.byte	0x10
 5607 0ff2 BD0C0000 		.4byte	0xcbd
 5608 0ff6 DF020000 		.4byte	.LLST65
 5609 0ffa DD020000 		.4byte	.LVUS65
 5610 0ffe 2E       		.uleb128 0x2e
 5611 0fff 36010000 		.4byte	.LVL200
 5612 1003 7C1A0000 		.4byte	0x1a7c
 5613 1007 14100000 		.4byte	0x1014
 5614 100b 2F       		.uleb128 0x2f
 5615 100c 02       		.byte	0x2
 5616 100d 90       		.byte	0x90
 5617 100e 40       		.uleb128 0x40
 5618 100f 03       		.byte	0x3
 5619 1010 F5       		.byte	0xf5
 5620 1011 50       		.uleb128 0x50
 5621 1012 29       		.uleb128 0x29
 5622 1013 00       		.byte	0
 5623 1014 30       		.uleb128 0x30
 5624 1015 44010000 		.4byte	.LVL201
 5625 1019 981A0000 		.4byte	0x1a98
 5626 101d 2F       		.uleb128 0x2f
 5627 101e 01       		.byte	0x1
 5628 101f 50       		.byte	0x50
 5629 1020 02       		.byte	0x2
 5630 1021 74       		.byte	0x74
 5631 1022 00       		.sleb128 0
 5632 1023 00       		.byte	0
 5633 1024 00       		.byte	0
 5634 1025 00       		.byte	0
 5635 1026 2D       		.uleb128 0x2d
 5636 1027 28000000 		.4byte	.LVL176
 5637 102b 92150000 		.4byte	0x1592
 5638 102f 00       		.byte	0
 5639 1030 33       		.uleb128 0x33
 5640 1031 01       		.byte	0x1
 5641 1032 5F050000 		.4byte	.LASF174
 5642 1036 01       		.byte	0x1
 5643 1037 FC       		.byte	0xfc
 5644 1038 06       		.byte	0x6
 5645 1039 01       		.byte	0x1
 5646 103a 00000000 		.4byte	.LFB10
 5647 103e A4030000 		.4byte	.LFE10
 5648 1042 F2020000 		.4byte	.LLST42
 5649 1046 01       		.byte	0x1
 5650 1047 48130000 		.4byte	0x1348
 5651 104b 34       		.uleb128 0x34
 5652 104c 6100     		.ascii	"a\000"
 5653 104e 01       		.byte	0x1
 5654 104f FC       		.byte	0xfc
 5655 1050 23       		.byte	0x23
 5656 1051 48130000 		.4byte	0x1348
ARM GAS  /tmp/ccPfsSwR.s 			page 116


 5657 1055 49030000 		.4byte	.LLST43
 5658 1059 43030000 		.4byte	.LVUS43
 5659 105d 35       		.uleb128 0x35
 5660 105e 623100   		.ascii	"b1\000"
 5661 1061 01       		.byte	0x1
 5662 1062 FE       		.byte	0xfe
 5663 1063 0F       		.byte	0xf
 5664 1064 BD0C0000 		.4byte	0xcbd
 5665 1068 77030000 		.4byte	.LLST44
 5666 106c 75030000 		.4byte	.LVUS44
 5667 1070 35       		.uleb128 0x35
 5668 1071 623200   		.ascii	"b2\000"
 5669 1074 01       		.byte	0x1
 5670 1075 FF       		.byte	0xff
 5671 1076 0F       		.byte	0xf
 5672 1077 BD0C0000 		.4byte	0xcbd
 5673 107b 8C030000 		.4byte	.LLST45
 5674 107f 8A030000 		.4byte	.LVUS45
 5675 1083 2C       		.uleb128 0x2c
 5676 1084 58020000 		.4byte	.Ldebug_ranges0+0x258
 5677 1088 2B       		.uleb128 0x2b
 5678 1089 6900     		.ascii	"i\000"
 5679 108b 01       		.byte	0x1
 5680 108c 0101     		.2byte	0x101
 5681 108e 0B       		.byte	0xb
 5682 108f 68000000 		.4byte	0x68
 5683 1093 A7030000 		.4byte	.LLST46
 5684 1097 9F030000 		.4byte	.LVUS46
 5685 109b 2C       		.uleb128 0x2c
 5686 109c 70020000 		.4byte	.Ldebug_ranges0+0x270
 5687 10a0 2B       		.uleb128 0x2b
 5688 10a1 6300     		.ascii	"c\000"
 5689 10a3 01       		.byte	0x1
 5690 10a4 0301     		.2byte	0x103
 5691 10a6 13       		.byte	0x13
 5692 10a7 4E130000 		.4byte	0x134e
 5693 10ab E4030000 		.4byte	.LLST47
 5694 10af DE030000 		.4byte	.LVUS47
 5695 10b3 36       		.uleb128 0x36
 5696 10b4 647600   		.ascii	"dv\000"
 5697 10b7 01       		.byte	0x1
 5698 10b8 0801     		.2byte	0x108
 5699 10ba 0F       		.byte	0xf
 5700 10bb 3C0A0000 		.4byte	0xa3c
 5701 10bf 03       		.byte	0x3
 5702 10c0 91       		.byte	0x91
 5703 10c1 C87E     		.sleb128 -184
 5704 10c3 2B       		.uleb128 0x2b
 5705 10c4 766E00   		.ascii	"vn\000"
 5706 10c7 01       		.byte	0x1
 5707 10c8 0C01     		.2byte	0x10c
 5708 10ca 09       		.byte	0x9
 5709 10cb 29000000 		.4byte	0x29
 5710 10cf 11040000 		.4byte	.LLST48
 5711 10d3 0F040000 		.4byte	.LVUS48
 5712 10d7 2B       		.uleb128 0x2b
 5713 10d8 64506E00 		.ascii	"dPn\000"
ARM GAS  /tmp/ccPfsSwR.s 			page 117


 5714 10dc 01       		.byte	0x1
 5715 10dd 0E01     		.2byte	0x10e
 5716 10df 09       		.byte	0x9
 5717 10e0 29000000 		.4byte	0x29
 5718 10e4 2F040000 		.4byte	.LLST49
 5719 10e8 25040000 		.4byte	.LVUS49
 5720 10ec 36       		.uleb128 0x36
 5721 10ed 506E00   		.ascii	"Pn\000"
 5722 10f0 01       		.byte	0x1
 5723 10f1 1D01     		.2byte	0x11d
 5724 10f3 0F       		.byte	0xf
 5725 10f4 3C0A0000 		.4byte	0xa3c
 5726 10f8 03       		.byte	0x3
 5727 10f9 91       		.byte	0x91
 5728 10fa D07E     		.sleb128 -176
 5729 10fc 37       		.uleb128 0x37
 5730 10fd 5C020000 		.4byte	.LASF175
 5731 1101 01       		.byte	0x1
 5732 1102 2901     		.2byte	0x129
 5733 1104 0F       		.byte	0xf
 5734 1105 3C0A0000 		.4byte	0xa3c
 5735 1109 03       		.byte	0x3
 5736 110a 91       		.byte	0x91
 5737 110b D87E     		.sleb128 -168
 5738 110d 2B       		.uleb128 0x2b
 5739 110e 767400   		.ascii	"vt\000"
 5740 1111 01       		.byte	0x1
 5741 1112 2A01     		.2byte	0x12a
 5742 1114 09       		.byte	0x9
 5743 1115 29000000 		.4byte	0x29
 5744 1119 75040000 		.4byte	.LLST50
 5745 111d 73040000 		.4byte	.LVUS50
 5746 1121 2B       		.uleb128 0x2b
 5747 1122 64507400 		.ascii	"dPt\000"
 5748 1126 01       		.byte	0x1
 5749 1127 2B01     		.2byte	0x12b
 5750 1129 09       		.byte	0x9
 5751 112a 29000000 		.4byte	0x29
 5752 112e 91040000 		.4byte	.LLST51
 5753 1132 89040000 		.4byte	.LVUS51
 5754 1136 36       		.uleb128 0x36
 5755 1137 507400   		.ascii	"Pt\000"
 5756 113a 01       		.byte	0x1
 5757 113b 3E01     		.2byte	0x13e
 5758 113d 0F       		.byte	0xf
 5759 113e 3C0A0000 		.4byte	0xa3c
 5760 1142 03       		.byte	0x3
 5761 1143 91       		.byte	0x91
 5762 1144 E07E     		.sleb128 -160
 5763 1146 31       		.uleb128 0x31
 5764 1147 30000000 		.4byte	.LBB102
 5765 114b 48000000 		.4byte	.LBE102
 5766 114f 7B110000 		.4byte	0x117b
 5767 1153 2B       		.uleb128 0x2b
 5768 1154 506E3000 		.ascii	"Pn0\000"
 5769 1158 01       		.byte	0x1
 5770 1159 1301     		.2byte	0x113
ARM GAS  /tmp/ccPfsSwR.s 			page 118


 5771 115b 0A       		.byte	0xa
 5772 115c 29000000 		.4byte	0x29
 5773 1160 CB040000 		.4byte	.LLST52
 5774 1164 C9040000 		.4byte	.LVUS52
 5775 1168 30       		.uleb128 0x30
 5776 1169 40000000 		.4byte	.LVL123
 5777 116d A61A0000 		.4byte	0x1aa6
 5778 1171 2F       		.uleb128 0x2f
 5779 1172 02       		.byte	0x2
 5780 1173 90       		.byte	0x90
 5781 1174 41       		.uleb128 0x41
 5782 1175 03       		.byte	0x3
 5783 1176 F5       		.byte	0xf5
 5784 1177 51       		.uleb128 0x51
 5785 1178 29       		.uleb128 0x29
 5786 1179 00       		.byte	0
 5787 117a 00       		.byte	0
 5788 117b 2A       		.uleb128 0x2a
 5789 117c A0020000 		.4byte	.Ldebug_ranges0+0x2a0
 5790 1180 B8110000 		.4byte	0x11b8
 5791 1184 29       		.uleb128 0x29
 5792 1185 F3060000 		.4byte	.LASF176
 5793 1189 01       		.byte	0x1
 5794 118a 3001     		.2byte	0x130
 5795 118c 0A       		.byte	0xa
 5796 118d 29000000 		.4byte	0x29
 5797 1191 E1040000 		.4byte	.LLST53
 5798 1195 DF040000 		.4byte	.LVUS53
 5799 1199 29       		.uleb128 0x29
 5800 119a 2E060000 		.4byte	.LASF177
 5801 119e 01       		.byte	0x1
 5802 119f 3301     		.2byte	0x133
 5803 11a1 0A       		.byte	0xa
 5804 11a2 29000000 		.4byte	0x29
 5805 11a6 F7040000 		.4byte	.LLST54
 5806 11aa F5040000 		.4byte	.LVUS54
 5807 11ae 2D       		.uleb128 0x2d
 5808 11af D6010000 		.4byte	.LVL144
 5809 11b3 B41A0000 		.4byte	0x1ab4
 5810 11b7 00       		.byte	0
 5811 11b8 31       		.uleb128 0x31
 5812 11b9 84030000 		.4byte	.LBB105
 5813 11bd 92030000 		.4byte	.LBE105
 5814 11c1 E4110000 		.4byte	0x11e4
 5815 11c5 29       		.uleb128 0x29
 5816 11c6 F3060000 		.4byte	.LASF176
 5817 11ca 01       		.byte	0x1
 5818 11cb 3901     		.2byte	0x139
 5819 11cd 0A       		.byte	0xa
 5820 11ce 29000000 		.4byte	0x29
 5821 11d2 0D050000 		.4byte	.LLST55
 5822 11d6 0B050000 		.4byte	.LVUS55
 5823 11da 2D       		.uleb128 0x2d
 5824 11db 90030000 		.4byte	.LVL171
 5825 11df B41A0000 		.4byte	0x1ab4
 5826 11e3 00       		.byte	0
 5827 11e4 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccPfsSwR.s 			page 119


 5828 11e5 58000000 		.4byte	.LVL126
 5829 11e9 7C1A0000 		.4byte	0x1a7c
 5830 11ed FA110000 		.4byte	0x11fa
 5831 11f1 2F       		.uleb128 0x2f
 5832 11f2 02       		.byte	0x2
 5833 11f3 90       		.byte	0x90
 5834 11f4 40       		.uleb128 0x40
 5835 11f5 03       		.byte	0x3
 5836 11f6 F5       		.byte	0xf5
 5837 11f7 50       		.uleb128 0x50
 5838 11f8 29       		.uleb128 0x29
 5839 11f9 00       		.byte	0
 5840 11fa 2D       		.uleb128 0x2d
 5841 11fb 74000000 		.4byte	.LVL127
 5842 11ff 7C1A0000 		.4byte	0x1a7c
 5843 1203 2E       		.uleb128 0x2e
 5844 1204 82000000 		.4byte	.LVL128
 5845 1208 C21A0000 		.4byte	0x1ac2
 5846 120c 17120000 		.4byte	0x1217
 5847 1210 2F       		.uleb128 0x2f
 5848 1211 01       		.byte	0x1
 5849 1212 50       		.byte	0x50
 5850 1213 02       		.byte	0x2
 5851 1214 7B       		.byte	0x7b
 5852 1215 00       		.sleb128 0
 5853 1216 00       		.byte	0
 5854 1217 2D       		.uleb128 0x2d
 5855 1218 9A000000 		.4byte	.LVL129
 5856 121c D01A0000 		.4byte	0x1ad0
 5857 1220 2D       		.uleb128 0x2d
 5858 1221 B6000000 		.4byte	.LVL130
 5859 1225 7C1A0000 		.4byte	0x1a7c
 5860 1229 2E       		.uleb128 0x2e
 5861 122a C4000000 		.4byte	.LVL131
 5862 122e 981A0000 		.4byte	0x1a98
 5863 1232 3D120000 		.4byte	0x123d
 5864 1236 2F       		.uleb128 0x2f
 5865 1237 01       		.byte	0x1
 5866 1238 50       		.byte	0x50
 5867 1239 02       		.byte	0x2
 5868 123a 7A       		.byte	0x7a
 5869 123b 00       		.sleb128 0
 5870 123c 00       		.byte	0
 5871 123d 2D       		.uleb128 0x2d
 5872 123e DC000000 		.4byte	.LVL132
 5873 1242 D01A0000 		.4byte	0x1ad0
 5874 1246 2D       		.uleb128 0x2d
 5875 1247 F8000000 		.4byte	.LVL133
 5876 124b DE1A0000 		.4byte	0x1ade
 5877 124f 2D       		.uleb128 0x2d
 5878 1250 14010000 		.4byte	.LVL134
 5879 1254 8A1A0000 		.4byte	0x1a8a
 5880 1258 2D       		.uleb128 0x2d
 5881 1259 34010000 		.4byte	.LVL135
 5882 125d DE1A0000 		.4byte	0x1ade
 5883 1261 2D       		.uleb128 0x2d
 5884 1262 50010000 		.4byte	.LVL136
ARM GAS  /tmp/ccPfsSwR.s 			page 120


 5885 1266 8A1A0000 		.4byte	0x1a8a
 5886 126a 2D       		.uleb128 0x2d
 5887 126b 6C010000 		.4byte	.LVL137
 5888 126f EC1A0000 		.4byte	0x1aec
 5889 1273 2E       		.uleb128 0x2e
 5890 1274 8C010000 		.4byte	.LVL138
 5891 1278 FA1A0000 		.4byte	0x1afa
 5892 127c 8D120000 		.4byte	0x128d
 5893 1280 2F       		.uleb128 0x2f
 5894 1281 02       		.byte	0x2
 5895 1282 90       		.byte	0x90
 5896 1283 42       		.uleb128 0x42
 5897 1284 07       		.byte	0x7
 5898 1285 F4       		.byte	0xf4
 5899 1286 29       		.uleb128 0x29
 5900 1287 04       		.byte	0x4
 5901 1288 0000803F 		.4byte	0x3f800000
 5902 128c 00       		.byte	0
 5903 128d 2D       		.uleb128 0x2d
 5904 128e A8010000 		.4byte	.LVL139
 5905 1292 081B0000 		.4byte	0x1b08
 5906 1296 2D       		.uleb128 0x2d
 5907 1297 EE010000 		.4byte	.LVL148
 5908 129b 7C1A0000 		.4byte	0x1a7c
 5909 129f 2D       		.uleb128 0x2d
 5910 12a0 0A020000 		.4byte	.LVL149
 5911 12a4 7C1A0000 		.4byte	0x1a7c
 5912 12a8 2E       		.uleb128 0x2e
 5913 12a9 18020000 		.4byte	.LVL150
 5914 12ad C21A0000 		.4byte	0x1ac2
 5915 12b1 BC120000 		.4byte	0x12bc
 5916 12b5 2F       		.uleb128 0x2f
 5917 12b6 01       		.byte	0x1
 5918 12b7 50       		.byte	0x50
 5919 12b8 02       		.byte	0x2
 5920 12b9 7B       		.byte	0x7b
 5921 12ba 00       		.sleb128 0
 5922 12bb 00       		.byte	0
 5923 12bc 2D       		.uleb128 0x2d
 5924 12bd 30020000 		.4byte	.LVL151
 5925 12c1 D01A0000 		.4byte	0x1ad0
 5926 12c5 2D       		.uleb128 0x2d
 5927 12c6 4C020000 		.4byte	.LVL152
 5928 12ca 7C1A0000 		.4byte	0x1a7c
 5929 12ce 2E       		.uleb128 0x2e
 5930 12cf 5A020000 		.4byte	.LVL153
 5931 12d3 981A0000 		.4byte	0x1a98
 5932 12d7 E2120000 		.4byte	0x12e2
 5933 12db 2F       		.uleb128 0x2f
 5934 12dc 01       		.byte	0x1
 5935 12dd 50       		.byte	0x50
 5936 12de 02       		.byte	0x2
 5937 12df 7A       		.byte	0x7a
 5938 12e0 00       		.sleb128 0
 5939 12e1 00       		.byte	0
 5940 12e2 2D       		.uleb128 0x2d
 5941 12e3 72020000 		.4byte	.LVL154
ARM GAS  /tmp/ccPfsSwR.s 			page 121


 5942 12e7 D01A0000 		.4byte	0x1ad0
 5943 12eb 2D       		.uleb128 0x2d
 5944 12ec 9C020000 		.4byte	.LVL157
 5945 12f0 EC1A0000 		.4byte	0x1aec
 5946 12f4 2D       		.uleb128 0x2d
 5947 12f5 B8020000 		.4byte	.LVL158
 5948 12f9 EC1A0000 		.4byte	0x1aec
 5949 12fd 2D       		.uleb128 0x2d
 5950 12fe D4020000 		.4byte	.LVL159
 5951 1302 DE1A0000 		.4byte	0x1ade
 5952 1306 2D       		.uleb128 0x2d
 5953 1307 F0020000 		.4byte	.LVL160
 5954 130b 8A1A0000 		.4byte	0x1a8a
 5955 130f 2D       		.uleb128 0x2d
 5956 1310 10030000 		.4byte	.LVL161
 5957 1314 DE1A0000 		.4byte	0x1ade
 5958 1318 2D       		.uleb128 0x2d
 5959 1319 2C030000 		.4byte	.LVL162
 5960 131d 8A1A0000 		.4byte	0x1a8a
 5961 1321 2D       		.uleb128 0x2d
 5962 1322 48030000 		.4byte	.LVL163
 5963 1326 EC1A0000 		.4byte	0x1aec
 5964 132a 2D       		.uleb128 0x2d
 5965 132b 5C030000 		.4byte	.LVL164
 5966 132f 081B0000 		.4byte	0x1b08
 5967 1333 30       		.uleb128 0x30
 5968 1334 7E030000 		.4byte	.LVL167
 5969 1338 A61A0000 		.4byte	0x1aa6
 5970 133c 2F       		.uleb128 0x2f
 5971 133d 02       		.byte	0x2
 5972 133e 90       		.byte	0x90
 5973 133f 41       		.uleb128 0x41
 5974 1340 03       		.byte	0x3
 5975 1341 F5       		.byte	0xf5
 5976 1342 51       		.uleb128 0x51
 5977 1343 29       		.uleb128 0x29
 5978 1344 00       		.byte	0
 5979 1345 00       		.byte	0
 5980 1346 00       		.byte	0
 5981 1347 00       		.byte	0
 5982 1348 0F       		.uleb128 0xf
 5983 1349 04       		.byte	0x4
 5984 134a 500C0000 		.4byte	0xc50
 5985 134e 0F       		.uleb128 0xf
 5986 134f 04       		.byte	0x4
 5987 1350 D20A0000 		.4byte	0xad2
 5988 1354 33       		.uleb128 0x33
 5989 1355 01       		.byte	0x1
 5990 1356 24040000 		.4byte	.LASF178
 5991 135a 01       		.byte	0x1
 5992 135b D2       		.byte	0xd2
 5993 135c 06       		.byte	0x6
 5994 135d 01       		.byte	0x1
 5995 135e 00000000 		.4byte	.LFB9
 5996 1362 28030000 		.4byte	.LFE9
 5997 1366 21050000 		.4byte	.LLST30
 5998 136a 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 122


 5999 136b 92150000 		.4byte	0x1592
 6000 136f 34       		.uleb128 0x34
 6001 1370 6100     		.ascii	"a\000"
 6002 1372 01       		.byte	0x1
 6003 1373 D2       		.byte	0xd2
 6004 1374 1E       		.byte	0x1e
 6005 1375 48130000 		.4byte	0x1348
 6006 1379 7A050000 		.4byte	.LLST31
 6007 137d 74050000 		.4byte	.LVUS31
 6008 1381 38       		.uleb128 0x38
 6009 1382 07010000 		.4byte	.LASF170
 6010 1386 01       		.byte	0x1
 6011 1387 D2       		.byte	0xd2
 6012 1388 27       		.byte	0x27
 6013 1389 29000000 		.4byte	0x29
 6014 138d AA050000 		.4byte	.LLST32
 6015 1391 A6050000 		.4byte	.LVUS32
 6016 1395 39       		.uleb128 0x39
 6017 1396 82050000 		.4byte	.LASF179
 6018 139a 01       		.byte	0x1
 6019 139b D4       		.byte	0xd4
 6020 139c 0E       		.byte	0xe
 6021 139d F3090000 		.4byte	0x9f3
 6022 13a1 04       		.byte	0x4
 6023 13a2 0AD7233C 		.4byte	0x3c23d70a
 6024 13a6 3A       		.uleb128 0x3a
 6025 13a7 AE000000 		.4byte	.LASF180
 6026 13ab 01       		.byte	0x1
 6027 13ac D5       		.byte	0xd5
 6028 13ad 08       		.byte	0x8
 6029 13ae 29000000 		.4byte	0x29
 6030 13b2 D2050000 		.4byte	.LLST33
 6031 13b6 CE050000 		.4byte	.LVUS33
 6032 13ba 2C       		.uleb128 0x2c
 6033 13bb 00020000 		.4byte	.Ldebug_ranges0+0x200
 6034 13bf 35       		.uleb128 0x35
 6035 13c0 6900     		.ascii	"i\000"
 6036 13c2 01       		.byte	0x1
 6037 13c3 D7       		.byte	0xd7
 6038 13c4 0B       		.byte	0xb
 6039 13c5 68000000 		.4byte	0x68
 6040 13c9 10060000 		.4byte	.LLST34
 6041 13cd 08060000 		.4byte	.LVUS34
 6042 13d1 2C       		.uleb128 0x2c
 6043 13d2 18020000 		.4byte	.Ldebug_ranges0+0x218
 6044 13d6 35       		.uleb128 0x35
 6045 13d7 6300     		.ascii	"c\000"
 6046 13d9 01       		.byte	0x1
 6047 13da D9       		.byte	0xd9
 6048 13db 13       		.byte	0x13
 6049 13dc 4E130000 		.4byte	0x134e
 6050 13e0 4F060000 		.4byte	.LLST35
 6051 13e4 47060000 		.4byte	.LVUS35
 6052 13e8 3B       		.uleb128 0x3b
 6053 13e9 723100   		.ascii	"r1\000"
 6054 13ec 01       		.byte	0x1
 6055 13ed DB       		.byte	0xdb
ARM GAS  /tmp/ccPfsSwR.s 			page 123


 6056 13ee 0F       		.byte	0xf
 6057 13ef 3C0A0000 		.4byte	0xa3c
 6058 13f3 03       		.byte	0x3
 6059 13f4 91       		.byte	0x91
 6060 13f5 807F     		.sleb128 -128
 6061 13f7 3B       		.uleb128 0x3b
 6062 13f8 723200   		.ascii	"r2\000"
 6063 13fb 01       		.byte	0x1
 6064 13fc DC       		.byte	0xdc
 6065 13fd 0F       		.byte	0xf
 6066 13fe 3C0A0000 		.4byte	0xa3c
 6067 1402 03       		.byte	0x3
 6068 1403 91       		.byte	0x91
 6069 1404 887F     		.sleb128 -120
 6070 1406 35       		.uleb128 0x35
 6071 1407 726E3100 		.ascii	"rn1\000"
 6072 140b 01       		.byte	0x1
 6073 140c DF       		.byte	0xdf
 6074 140d 09       		.byte	0x9
 6075 140e 29000000 		.4byte	0x29
 6076 1412 8B060000 		.4byte	.LLST36
 6077 1416 87060000 		.4byte	.LVUS36
 6078 141a 35       		.uleb128 0x35
 6079 141b 726E3200 		.ascii	"rn2\000"
 6080 141f 01       		.byte	0x1
 6081 1420 E0       		.byte	0xe0
 6082 1421 09       		.byte	0x9
 6083 1422 29000000 		.4byte	0x29
 6084 1426 AF060000 		.4byte	.LLST37
 6085 142a AB060000 		.4byte	.LVUS37
 6086 142e 3A       		.uleb128 0x3a
 6087 142f 25020000 		.4byte	.LASF181
 6088 1433 01       		.byte	0x1
 6089 1434 E1       		.byte	0xe1
 6090 1435 09       		.byte	0x9
 6091 1436 29000000 		.4byte	0x29
 6092 143a D5060000 		.4byte	.LLST38
 6093 143e CF060000 		.4byte	.LVUS38
 6094 1442 3C       		.uleb128 0x3c
 6095 1443 5C020000 		.4byte	.LASF175
 6096 1447 01       		.byte	0x1
 6097 1448 E5       		.byte	0xe5
 6098 1449 0F       		.byte	0xf
 6099 144a 3C0A0000 		.4byte	0xa3c
 6100 144e 03       		.byte	0x3
 6101 144f 91       		.byte	0x91
 6102 1450 907F     		.sleb128 -112
 6103 1452 35       		.uleb128 0x35
 6104 1453 72743100 		.ascii	"rt1\000"
 6105 1457 01       		.byte	0x1
 6106 1458 E6       		.byte	0xe6
 6107 1459 09       		.byte	0x9
 6108 145a 29000000 		.4byte	0x29
 6109 145e 0B070000 		.4byte	.LLST39
 6110 1462 07070000 		.4byte	.LVUS39
 6111 1466 35       		.uleb128 0x35
 6112 1467 72743200 		.ascii	"rt2\000"
ARM GAS  /tmp/ccPfsSwR.s 			page 124


 6113 146b 01       		.byte	0x1
 6114 146c E7       		.byte	0xe7
 6115 146d 09       		.byte	0x9
 6116 146e 29000000 		.4byte	0x29
 6117 1472 31070000 		.4byte	.LLST40
 6118 1476 2B070000 		.4byte	.LVUS40
 6119 147a 3A       		.uleb128 0x3a
 6120 147b 92020000 		.4byte	.LASF182
 6121 147f 01       		.byte	0x1
 6122 1480 E8       		.byte	0xe8
 6123 1481 09       		.byte	0x9
 6124 1482 29000000 		.4byte	0x29
 6125 1486 65070000 		.4byte	.LLST41
 6126 148a 5D070000 		.4byte	.LVUS41
 6127 148e 2A       		.uleb128 0x2a
 6128 148f 40020000 		.4byte	.Ldebug_ranges0+0x240
 6129 1493 0D150000 		.4byte	0x150d
 6130 1497 3B       		.uleb128 0x3b
 6131 1498 5000     		.ascii	"P\000"
 6132 149a 01       		.byte	0x1
 6133 149b F1       		.byte	0xf1
 6134 149c 10       		.byte	0x10
 6135 149d 3C0A0000 		.4byte	0xa3c
 6136 14a1 03       		.byte	0x3
 6137 14a2 91       		.byte	0x91
 6138 14a3 987F     		.sleb128 -104
 6139 14a5 2D       		.uleb128 0x2d
 6140 14a6 16020000 		.4byte	.LVL105
 6141 14aa 7C1A0000 		.4byte	0x1a7c
 6142 14ae 2D       		.uleb128 0x2d
 6143 14af 36020000 		.4byte	.LVL106
 6144 14b3 7C1A0000 		.4byte	0x1a7c
 6145 14b7 2D       		.uleb128 0x2d
 6146 14b8 52020000 		.4byte	.LVL107
 6147 14bc 8A1A0000 		.4byte	0x1a8a
 6148 14c0 2D       		.uleb128 0x2d
 6149 14c1 6E020000 		.4byte	.LVL108
 6150 14c5 7C1A0000 		.4byte	0x1a7c
 6151 14c9 2E       		.uleb128 0x2e
 6152 14ca 7E020000 		.4byte	.LVL109
 6153 14ce C21A0000 		.4byte	0x1ac2
 6154 14d2 DD140000 		.4byte	0x14dd
 6155 14d6 2F       		.uleb128 0x2f
 6156 14d7 01       		.byte	0x1
 6157 14d8 50       		.byte	0x50
 6158 14d9 02       		.byte	0x2
 6159 14da 78       		.byte	0x78
 6160 14db 0C       		.sleb128 12
 6161 14dc 00       		.byte	0
 6162 14dd 2D       		.uleb128 0x2d
 6163 14de 9A020000 		.4byte	.LVL111
 6164 14e2 D01A0000 		.4byte	0x1ad0
 6165 14e6 2D       		.uleb128 0x2d
 6166 14e7 C2020000 		.4byte	.LVL112
 6167 14eb 7C1A0000 		.4byte	0x1a7c
 6168 14ef 2E       		.uleb128 0x2e
 6169 14f0 D2020000 		.4byte	.LVL113
ARM GAS  /tmp/ccPfsSwR.s 			page 125


 6170 14f4 981A0000 		.4byte	0x1a98
 6171 14f8 03150000 		.4byte	0x1503
 6172 14fc 2F       		.uleb128 0x2f
 6173 14fd 01       		.byte	0x1
 6174 14fe 50       		.byte	0x50
 6175 14ff 02       		.byte	0x2
 6176 1500 78       		.byte	0x78
 6177 1501 0C       		.sleb128 12
 6178 1502 00       		.byte	0
 6179 1503 2D       		.uleb128 0x2d
 6180 1504 EE020000 		.4byte	.LVL114
 6181 1508 D01A0000 		.4byte	0x1ad0
 6182 150c 00       		.byte	0
 6183 150d 2D       		.uleb128 0x2d
 6184 150e 62000000 		.4byte	.LVL74
 6185 1512 EC1A0000 		.4byte	0x1aec
 6186 1516 2D       		.uleb128 0x2d
 6187 1517 8A000000 		.4byte	.LVL75
 6188 151b EC1A0000 		.4byte	0x1aec
 6189 151f 2D       		.uleb128 0x2d
 6190 1520 AE000000 		.4byte	.LVL76
 6191 1524 081B0000 		.4byte	0x1b08
 6192 1528 2D       		.uleb128 0x2d
 6193 1529 C6000000 		.4byte	.LVL79
 6194 152d 081B0000 		.4byte	0x1b08
 6195 1531 2D       		.uleb128 0x2d
 6196 1532 F2000000 		.4byte	.LVL83
 6197 1536 081B0000 		.4byte	0x1b08
 6198 153a 2D       		.uleb128 0x2d
 6199 153b 16010000 		.4byte	.LVL85
 6200 153f 081B0000 		.4byte	0x1b08
 6201 1543 2E       		.uleb128 0x2e
 6202 1544 42010000 		.4byte	.LVL88
 6203 1548 FA1A0000 		.4byte	0x1afa
 6204 154c 59150000 		.4byte	0x1559
 6205 1550 2F       		.uleb128 0x2f
 6206 1551 02       		.byte	0x2
 6207 1552 90       		.byte	0x90
 6208 1553 42       		.uleb128 0x42
 6209 1554 03       		.byte	0x3
 6210 1555 F5       		.byte	0xf5
 6211 1556 52       		.uleb128 0x52
 6212 1557 29       		.uleb128 0x29
 6213 1558 00       		.byte	0
 6214 1559 2D       		.uleb128 0x2d
 6215 155a 5E010000 		.4byte	.LVL89
 6216 155e 081B0000 		.4byte	0x1b08
 6217 1562 2D       		.uleb128 0x2d
 6218 1563 76010000 		.4byte	.LVL92
 6219 1567 081B0000 		.4byte	0x1b08
 6220 156b 2D       		.uleb128 0x2d
 6221 156c A2010000 		.4byte	.LVL97
 6222 1570 081B0000 		.4byte	0x1b08
 6223 1574 2D       		.uleb128 0x2d
 6224 1575 C6010000 		.4byte	.LVL99
 6225 1579 081B0000 		.4byte	0x1b08
 6226 157d 30       		.uleb128 0x30
ARM GAS  /tmp/ccPfsSwR.s 			page 126


 6227 157e F2010000 		.4byte	.LVL102
 6228 1582 161B0000 		.4byte	0x1b16
 6229 1586 2F       		.uleb128 0x2f
 6230 1587 02       		.byte	0x2
 6231 1588 90       		.byte	0x90
 6232 1589 40       		.uleb128 0x40
 6233 158a 03       		.byte	0x3
 6234 158b F5       		.byte	0xf5
 6235 158c 54       		.uleb128 0x54
 6236 158d 29       		.uleb128 0x29
 6237 158e 00       		.byte	0
 6238 158f 00       		.byte	0
 6239 1590 00       		.byte	0
 6240 1591 00       		.byte	0
 6241 1592 3D       		.uleb128 0x3d
 6242 1593 01       		.byte	0x1
 6243 1594 7C060000 		.4byte	.LASF208
 6244 1598 01       		.byte	0x1
 6245 1599 99       		.byte	0x99
 6246 159a 06       		.byte	0x6
 6247 159b 00000000 		.4byte	.LFB8
 6248 159f 84010000 		.4byte	.LFE8
 6249 15a3 A3070000 		.4byte	.LLST19
 6250 15a7 01       		.byte	0x1
 6251 15a8 84170000 		.4byte	0x1784
 6252 15ac 2A       		.uleb128 0x2a
 6253 15ad 08010000 		.4byte	.Ldebug_ranges0+0x108
 6254 15b1 65170000 		.4byte	0x1765
 6255 15b5 35       		.uleb128 0x35
 6256 15b6 6900     		.ascii	"i\000"
 6257 15b8 01       		.byte	0x1
 6258 15b9 9B       		.byte	0x9b
 6259 15ba 0E       		.byte	0xe
 6260 15bb 68000000 		.4byte	0x68
 6261 15bf 2A080000 		.4byte	.LLST20
 6262 15c3 1A080000 		.4byte	.LVUS20
 6263 15c7 2C       		.uleb128 0x2c
 6264 15c8 28010000 		.4byte	.Ldebug_ranges0+0x128
 6265 15cc 35       		.uleb128 0x35
 6266 15cd 626900   		.ascii	"bi\000"
 6267 15d0 01       		.byte	0x1
 6268 15d1 9D       		.byte	0x9d
 6269 15d2 16       		.byte	0x16
 6270 15d3 BD0C0000 		.4byte	0xcbd
 6271 15d7 A8080000 		.4byte	.LLST21
 6272 15db A4080000 		.4byte	.LVUS21
 6273 15df 2C       		.uleb128 0x2c
 6274 15e0 48010000 		.4byte	.Ldebug_ranges0+0x148
 6275 15e4 35       		.uleb128 0x35
 6276 15e5 6A00     		.ascii	"j\000"
 6277 15e7 01       		.byte	0x1
 6278 15e8 9F       		.byte	0x9f
 6279 15e9 12       		.byte	0x12
 6280 15ea 68000000 		.4byte	0x68
 6281 15ee CE080000 		.4byte	.LLST22
 6282 15f2 C6080000 		.4byte	.LVUS22
 6283 15f6 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccPfsSwR.s 			page 127


 6284 15f7 80010000 		.4byte	.Ldebug_ranges0+0x180
 6285 15fb 35       		.uleb128 0x35
 6286 15fc 626A00   		.ascii	"bj\000"
 6287 15ff 01       		.byte	0x1
 6288 1600 A1       		.byte	0xa1
 6289 1601 1A       		.byte	0x1a
 6290 1602 BD0C0000 		.4byte	0xcbd
 6291 1606 08090000 		.4byte	.LLST23
 6292 160a 02090000 		.4byte	.LVUS23
 6293 160e 3C       		.uleb128 0x3c
 6294 160f 6D020000 		.4byte	.LASF183
 6295 1613 01       		.byte	0x1
 6296 1614 A6       		.byte	0xa6
 6297 1615 1C       		.byte	0x1c
 6298 1616 500C0000 		.4byte	0xc50
 6299 161a 03       		.byte	0x3
 6300 161b 91       		.byte	0x91
 6301 161c B07D     		.sleb128 -336
 6302 161e 35       		.uleb128 0x35
 6303 161f 6B657900 		.ascii	"key\000"
 6304 1623 01       		.byte	0x1
 6305 1624 A7       		.byte	0xa7
 6306 1625 1F       		.byte	0x1f
 6307 1626 C30C0000 		.4byte	0xcc3
 6308 162a 40090000 		.4byte	.LLST24
 6309 162e 32090000 		.4byte	.LVUS24
 6310 1632 2A       		.uleb128 0x2a
 6311 1633 C0010000 		.4byte	.Ldebug_ranges0+0x1c0
 6312 1637 E5160000 		.4byte	0x16e5
 6313 163b 35       		.uleb128 0x35
 6314 163c 6100     		.ascii	"a\000"
 6315 163e 01       		.byte	0x1
 6316 163f C0       		.byte	0xc0
 6317 1640 21       		.byte	0x21
 6318 1641 48130000 		.4byte	0x1348
 6319 1645 BD090000 		.4byte	.LLST26
 6320 1649 B9090000 		.4byte	.LVUS26
 6321 164d 3E       		.uleb128 0x3e
 6322 164e B0190000 		.4byte	0x19b0
 6323 1652 E0010000 		.4byte	.Ldebug_ranges0+0x1e0
 6324 1656 01       		.byte	0x1
 6325 1657 C0       		.byte	0xc0
 6326 1658 25       		.byte	0x25
 6327 1659 7A160000 		.4byte	0x167a
 6328 165d 3F       		.uleb128 0x3f
 6329 165e C3190000 		.4byte	0x19c3
 6330 1662 40       		.uleb128 0x40
 6331 1663 CF190000 		.4byte	0x19cf
 6332 1667 E0010000 		.4byte	.Ldebug_ranges0+0x1e0
 6333 166b 41       		.uleb128 0x41
 6334 166c D0190000 		.4byte	0x19d0
 6335 1670 ED090000 		.4byte	.LLST27
 6336 1674 E7090000 		.4byte	.LVUS27
 6337 1678 00       		.byte	0
 6338 1679 00       		.byte	0
 6339 167a 42       		.uleb128 0x42
 6340 167b 88190000 		.4byte	0x1988
ARM GAS  /tmp/ccPfsSwR.s 			page 128


 6341 167f 3A010000 		.4byte	.LBI72
 6342 1683 00       		.byte	.LVU323
 6343 1684 32010000 		.4byte	.LBB72
 6344 1688 5A010000 		.4byte	.LBE72
 6345 168c 01       		.byte	0x1
 6346 168d C3       		.byte	0xc3
 6347 168e 15       		.byte	0x15
 6348 168f D4160000 		.4byte	0x16d4
 6349 1693 43       		.uleb128 0x43
 6350 1694 A3190000 		.4byte	0x19a3
 6351 1698 03       		.byte	0x3
 6352 1699 91       		.byte	0x91
 6353 169a C07E     		.sleb128 -192
 6354 169c 44       		.uleb128 0x44
 6355 169d 97190000 		.4byte	0x1997
 6356 16a1 1A0A0000 		.4byte	.LLST28
 6357 16a5 180A0000 		.4byte	.LVUS28
 6358 16a9 30       		.uleb128 0x30
 6359 16aa 54010000 		.4byte	.LVL62
 6360 16ae 241B0000 		.4byte	0x1b24
 6361 16b2 2F       		.uleb128 0x2f
 6362 16b3 01       		.byte	0x1
 6363 16b4 50       		.byte	0x50
 6364 16b5 0F       		.byte	0xf
 6365 16b6 76       		.byte	0x76
 6366 16b7 00       		.sleb128 0
 6367 16b8 33       		.byte	0x33
 6368 16b9 24       		.byte	0x24
 6369 16ba 76       		.byte	0x76
 6370 16bb 00       		.sleb128 0
 6371 16bc 22       		.byte	0x22
 6372 16bd 34       		.byte	0x34
 6373 16be 24       		.byte	0x24
 6374 16bf 03       		.byte	0x3
 6375 16c0 00000000 		.4byte	g_arbiters
 6376 16c4 22       		.byte	0x22
 6377 16c5 2F       		.uleb128 0x2f
 6378 16c6 01       		.byte	0x1
 6379 16c7 51       		.byte	0x51
 6380 16c8 03       		.byte	0x3
 6381 16c9 91       		.byte	0x91
 6382 16ca C07E     		.sleb128 -192
 6383 16cc 2F       		.uleb128 0x2f
 6384 16cd 01       		.byte	0x1
 6385 16ce 52       		.byte	0x52
 6386 16cf 02       		.byte	0x2
 6387 16d0 08       		.byte	0x8
 6388 16d1 90       		.byte	0x90
 6389 16d2 00       		.byte	0
 6390 16d3 00       		.byte	0
 6391 16d4 30       		.uleb128 0x30
 6392 16d5 F4000000 		.4byte	.LVL51
 6393 16d9 84170000 		.4byte	0x1784
 6394 16dd 2F       		.uleb128 0x2f
 6395 16de 01       		.byte	0x1
 6396 16df 51       		.byte	0x51
 6397 16e0 02       		.byte	0x2
ARM GAS  /tmp/ccPfsSwR.s 			page 129


 6398 16e1 74       		.byte	0x74
 6399 16e2 00       		.sleb128 0
 6400 16e3 00       		.byte	0
 6401 16e4 00       		.byte	0
 6402 16e5 45       		.uleb128 0x45
 6403 16e6 F6180000 		.4byte	0x18f6
 6404 16ea 70000000 		.4byte	.LBI61
 6405 16ee 04       		.byte	.LVU248
 6406 16ef A0010000 		.4byte	.Ldebug_ranges0+0x1a0
 6407 16f3 01       		.byte	0x1
 6408 16f4 B8       		.byte	0xb8
 6409 16f5 0D       		.byte	0xd
 6410 16f6 08170000 		.4byte	0x1708
 6411 16fa 44       		.uleb128 0x44
 6412 16fb 05190000 		.4byte	0x1905
 6413 16ff 340A0000 		.4byte	.LLST25
 6414 1703 320A0000 		.4byte	.LVUS25
 6415 1707 00       		.byte	0
 6416 1708 42       		.uleb128 0x42
 6417 1709 F6180000 		.4byte	0x18f6
 6418 170d 82000000 		.4byte	.LBI77
 6419 1711 02       		.byte	.LVU258
 6420 1712 82000000 		.4byte	.LBB77
 6421 1716 8E000000 		.4byte	.LBE77
 6422 171a 01       		.byte	0x1
 6423 171b B9       		.byte	0xb9
 6424 171c 0D       		.byte	0xd
 6425 171d 2F170000 		.4byte	0x172f
 6426 1721 44       		.uleb128 0x44
 6427 1722 05190000 		.4byte	0x1905
 6428 1726 490A0000 		.4byte	.LLST29
 6429 172a 470A0000 		.4byte	.LVUS29
 6430 172e 00       		.byte	0
 6431 172f 2E       		.uleb128 0x2e
 6432 1730 92000000 		.4byte	.LVL43
 6433 1734 311B0000 		.4byte	0x1b31
 6434 1738 4F170000 		.4byte	0x174f
 6435 173c 2F       		.uleb128 0x2f
 6436 173d 01       		.byte	0x1
 6437 173e 50       		.byte	0x50
 6438 173f 02       		.byte	0x2
 6439 1740 74       		.byte	0x74
 6440 1741 00       		.sleb128 0
 6441 1742 2F       		.uleb128 0x2f
 6442 1743 01       		.byte	0x1
 6443 1744 51       		.byte	0x51
 6444 1745 02       		.byte	0x2
 6445 1746 75       		.byte	0x75
 6446 1747 00       		.sleb128 0
 6447 1748 2F       		.uleb128 0x2f
 6448 1749 01       		.byte	0x1
 6449 174a 52       		.byte	0x52
 6450 174b 02       		.byte	0x2
 6451 174c 78       		.byte	0x78
 6452 174d 00       		.sleb128 0
 6453 174e 00       		.byte	0
 6454 174f 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccPfsSwR.s 			page 130


 6455 1750 28010000 		.4byte	.LVL58
 6456 1754 10190000 		.4byte	0x1910
 6457 1758 2D       		.uleb128 0x2d
 6458 1759 62010000 		.4byte	.LVL66
 6459 175d 3F1B0000 		.4byte	0x1b3f
 6460 1761 00       		.byte	0
 6461 1762 00       		.byte	0
 6462 1763 00       		.byte	0
 6463 1764 00       		.byte	0
 6464 1765 30       		.uleb128 0x30
 6465 1766 3A010000 		.4byte	.LVL61
 6466 176a 241B0000 		.4byte	0x1b24
 6467 176e 2F       		.uleb128 0x2f
 6468 176f 01       		.byte	0x1
 6469 1770 50       		.byte	0x50
 6470 1771 03       		.byte	0x3
 6471 1772 91       		.byte	0x91
 6472 1773 C07E     		.sleb128 -192
 6473 1775 2F       		.uleb128 0x2f
 6474 1776 01       		.byte	0x1
 6475 1777 51       		.byte	0x51
 6476 1778 03       		.byte	0x3
 6477 1779 91       		.byte	0x91
 6478 177a B07D     		.sleb128 -336
 6479 177c 2F       		.uleb128 0x2f
 6480 177d 01       		.byte	0x1
 6481 177e 52       		.byte	0x52
 6482 177f 02       		.byte	0x2
 6483 1780 08       		.byte	0x8
 6484 1781 90       		.byte	0x90
 6485 1782 00       		.byte	0
 6486 1783 00       		.byte	0
 6487 1784 33       		.uleb128 0x33
 6488 1785 01       		.byte	0x1
 6489 1786 E4050000 		.4byte	.LASF184
 6490 178a 01       		.byte	0x1
 6491 178b 66       		.byte	0x66
 6492 178c 06       		.byte	0x6
 6493 178d 01       		.byte	0x1
 6494 178e 00000000 		.4byte	.LFB7
 6495 1792 F0000000 		.4byte	.LFE7
 6496 1796 5F0A0000 		.4byte	.LLST6
 6497 179a 01       		.byte	0x1
 6498 179b F6180000 		.4byte	0x18f6
 6499 179f 34       		.uleb128 0x34
 6500 17a0 6100     		.ascii	"a\000"
 6501 17a2 01       		.byte	0x1
 6502 17a3 66       		.byte	0x66
 6503 17a4 24       		.byte	0x24
 6504 17a5 48130000 		.4byte	0x1348
 6505 17a9 A90A0000 		.4byte	.LLST7
 6506 17ad A50A0000 		.4byte	.LVUS7
 6507 17b1 38       		.uleb128 0x38
 6508 17b2 AD010000 		.4byte	.LASF185
 6509 17b6 01       		.byte	0x1
 6510 17b7 66       		.byte	0x66
 6511 17b8 37       		.byte	0x37
ARM GAS  /tmp/ccPfsSwR.s 			page 131


 6512 17b9 4E130000 		.4byte	0x134e
 6513 17bd CB0A0000 		.4byte	.LLST8
 6514 17c1 C70A0000 		.4byte	.LVUS8
 6515 17c5 38       		.uleb128 0x38
 6516 17c6 0C030000 		.4byte	.LASF186
 6517 17ca 01       		.byte	0x1
 6518 17cb 66       		.byte	0x66
 6519 17cc 48       		.byte	0x48
 6520 17cd 68000000 		.4byte	0x68
 6521 17d1 F00A0000 		.4byte	.LLST9
 6522 17d5 EC0A0000 		.4byte	.LVUS9
 6523 17d9 3C       		.uleb128 0x3c
 6524 17da E6040000 		.4byte	.LASF187
 6525 17de 01       		.byte	0x1
 6526 17df 68       		.byte	0x68
 6527 17e0 11       		.byte	0x11
 6528 17e1 AD0C0000 		.4byte	0xcad
 6529 17e5 03       		.byte	0x3
 6530 17e6 91       		.byte	0x91
 6531 17e7 D87E     		.sleb128 -168
 6532 17e9 2A       		.uleb128 0x2a
 6533 17ea 88000000 		.4byte	.Ldebug_ranges0+0x88
 6534 17ee 97180000 		.4byte	0x1897
 6535 17f2 35       		.uleb128 0x35
 6536 17f3 6900     		.ascii	"i\000"
 6537 17f5 01       		.byte	0x1
 6538 17f6 6C       		.byte	0x6c
 6539 17f7 0B       		.byte	0xb
 6540 17f8 68000000 		.4byte	0x68
 6541 17fc 100B0000 		.4byte	.LLST11
 6542 1800 0E0B0000 		.4byte	.LVUS11
 6543 1804 2C       		.uleb128 0x2c
 6544 1805 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 6545 1809 3A       		.uleb128 0x3a
 6546 180a DE020000 		.4byte	.LASF188
 6547 180e 01       		.byte	0x1
 6548 180f 6E       		.byte	0x6e
 6549 1810 13       		.byte	0x13
 6550 1811 4E130000 		.4byte	0x134e
 6551 1815 2A0B0000 		.4byte	.LLST12
 6552 1819 240B0000 		.4byte	.LVUS12
 6553 181d 35       		.uleb128 0x35
 6554 181e 6B00     		.ascii	"k\000"
 6555 1820 01       		.byte	0x1
 6556 1821 6F       		.byte	0x6f
 6557 1822 07       		.byte	0x7
 6558 1823 68000000 		.4byte	0x68
 6559 1827 5B0B0000 		.4byte	.LLST13
 6560 182b 550B0000 		.4byte	.LVUS13
 6561 182f 31       		.uleb128 0x31
 6562 1830 38000000 		.4byte	.LBB43
 6563 1834 56000000 		.4byte	.LBE43
 6564 1838 69180000 		.4byte	0x1869
 6565 183c 35       		.uleb128 0x35
 6566 183d 6A00     		.ascii	"j\000"
 6567 183f 01       		.byte	0x1
 6568 1840 70       		.byte	0x70
ARM GAS  /tmp/ccPfsSwR.s 			page 132


 6569 1841 0C       		.byte	0xc
 6570 1842 68000000 		.4byte	0x68
 6571 1846 900B0000 		.4byte	.LLST16
 6572 184a 880B0000 		.4byte	.LVUS16
 6573 184e 2C       		.uleb128 0x2c
 6574 184f E0000000 		.4byte	.Ldebug_ranges0+0xe0
 6575 1853 3A       		.uleb128 0x3a
 6576 1854 76010000 		.4byte	.LASF189
 6577 1858 01       		.byte	0x1
 6578 1859 72       		.byte	0x72
 6579 185a 14       		.byte	0x14
 6580 185b 4E130000 		.4byte	0x134e
 6581 185f CF0B0000 		.4byte	.LLST17
 6582 1863 C70B0000 		.4byte	.LVUS17
 6583 1867 00       		.byte	0
 6584 1868 00       		.byte	0
 6585 1869 2C       		.uleb128 0x2c
 6586 186a C0000000 		.4byte	.Ldebug_ranges0+0xc0
 6587 186e 35       		.uleb128 0x35
 6588 186f 6300     		.ascii	"c\000"
 6589 1871 01       		.byte	0x1
 6590 1872 7C       		.byte	0x7c
 6591 1873 14       		.byte	0x14
 6592 1874 4E130000 		.4byte	0x134e
 6593 1878 090C0000 		.4byte	.LLST14
 6594 187c 050C0000 		.4byte	.LVUS14
 6595 1880 3A       		.uleb128 0x3a
 6596 1881 76010000 		.4byte	.LASF189
 6597 1885 01       		.byte	0x1
 6598 1886 7D       		.byte	0x7d
 6599 1887 14       		.byte	0x14
 6600 1888 4E130000 		.4byte	0x134e
 6601 188c 430C0000 		.4byte	.LLST15
 6602 1890 3F0C0000 		.4byte	.LVUS15
 6603 1894 00       		.byte	0
 6604 1895 00       		.byte	0
 6605 1896 00       		.byte	0
 6606 1897 31       		.uleb128 0x31
 6607 1898 98000000 		.4byte	.LBB55
 6608 189c BA000000 		.4byte	.LBE55
 6609 18a0 AF180000 		.4byte	0x18af
 6610 18a4 46       		.uleb128 0x46
 6611 18a5 6900     		.ascii	"i\000"
 6612 18a7 01       		.byte	0x1
 6613 18a8 92       		.byte	0x92
 6614 18a9 0B       		.byte	0xb
 6615 18aa 68000000 		.4byte	0x68
 6616 18ae 00       		.byte	0
 6617 18af 45       		.uleb128 0x45
 6618 18b0 F6180000 		.4byte	0x18f6
 6619 18b4 0E000000 		.4byte	.LBI37
 6620 18b8 02       		.byte	.LVU118
 6621 18b9 70000000 		.4byte	.Ldebug_ranges0+0x70
 6622 18bd 01       		.byte	0x1
 6623 18be 69       		.byte	0x69
 6624 18bf 05       		.byte	0x5
 6625 18c0 D2180000 		.4byte	0x18d2
ARM GAS  /tmp/ccPfsSwR.s 			page 133


 6626 18c4 44       		.uleb128 0x44
 6627 18c5 05190000 		.4byte	0x1905
 6628 18c9 630C0000 		.4byte	.LLST10
 6629 18cd 610C0000 		.4byte	.LVUS10
 6630 18d1 00       		.byte	0
 6631 18d2 47       		.uleb128 0x47
 6632 18d3 F6180000 		.4byte	0x18f6
 6633 18d7 14000000 		.4byte	.LBI52
 6634 18db 02       		.byte	.LVU127
 6635 18dc 14000000 		.4byte	.LBB52
 6636 18e0 1A000000 		.4byte	.LBE52
 6637 18e4 01       		.byte	0x1
 6638 18e5 6A       		.byte	0x6a
 6639 18e6 05       		.byte	0x5
 6640 18e7 44       		.uleb128 0x44
 6641 18e8 05190000 		.4byte	0x1905
 6642 18ec 7B0C0000 		.4byte	.LLST18
 6643 18f0 790C0000 		.4byte	.LVUS18
 6644 18f4 00       		.byte	0
 6645 18f5 00       		.byte	0
 6646 18f6 48       		.uleb128 0x48
 6647 18f7 01       		.byte	0x1
 6648 18f8 5B010000 		.4byte	.LASF191
 6649 18fc 01       		.byte	0x1
 6650 18fd 5F       		.byte	0x5f
 6651 18fe 06       		.byte	0x6
 6652 18ff 01       		.byte	0x1
 6653 1900 01       		.byte	0x1
 6654 1901 10190000 		.4byte	0x1910
 6655 1905 49       		.uleb128 0x49
 6656 1906 6300     		.ascii	"c\000"
 6657 1908 01       		.byte	0x1
 6658 1909 5F       		.byte	0x5f
 6659 190a 22       		.byte	0x22
 6660 190b 4E130000 		.4byte	0x134e
 6661 190f 00       		.byte	0
 6662 1910 33       		.uleb128 0x33
 6663 1911 01       		.byte	0x1
 6664 1912 0F000000 		.4byte	.LASF190
 6665 1916 01       		.byte	0x1
 6666 1917 4E       		.byte	0x4e
 6667 1918 06       		.byte	0x6
 6668 1919 01       		.byte	0x1
 6669 191a 00000000 		.4byte	.LFB5
 6670 191e A4000000 		.4byte	.LFE5
 6671 1922 910C0000 		.4byte	.LLST3
 6672 1926 01       		.byte	0x1
 6673 1927 88190000 		.4byte	0x1988
 6674 192b 4A       		.uleb128 0x4a
 6675 192c 6B657900 		.ascii	"key\000"
 6676 1930 01       		.byte	0x1
 6677 1931 4E       		.byte	0x4e
 6678 1932 25       		.byte	0x25
 6679 1933 C30C0000 		.4byte	0xcc3
 6680 1937 02       		.byte	0x2
 6681 1938 91       		.byte	0x91
 6682 1939 50       		.sleb128 -48
ARM GAS  /tmp/ccPfsSwR.s 			page 134


 6683 193a 2C       		.uleb128 0x2c
 6684 193b 28000000 		.4byte	.Ldebug_ranges0+0x28
 6685 193f 35       		.uleb128 0x35
 6686 1940 6900     		.ascii	"i\000"
 6687 1942 01       		.byte	0x1
 6688 1943 50       		.byte	0x50
 6689 1944 0E       		.byte	0xe
 6690 1945 68000000 		.4byte	0x68
 6691 1949 D10C0000 		.4byte	.LLST4
 6692 194d C90C0000 		.4byte	.LVUS4
 6693 1951 2C       		.uleb128 0x2c
 6694 1952 58000000 		.4byte	.Ldebug_ranges0+0x58
 6695 1956 35       		.uleb128 0x35
 6696 1957 6A00     		.ascii	"j\000"
 6697 1959 01       		.byte	0x1
 6698 195a 55       		.byte	0x55
 6699 195b 16       		.byte	0x16
 6700 195c 68000000 		.4byte	0x68
 6701 1960 0A0D0000 		.4byte	.LLST5
 6702 1964 080D0000 		.4byte	.LVUS5
 6703 1968 30       		.uleb128 0x30
 6704 1969 78000000 		.4byte	.LVL12
 6705 196d 241B0000 		.4byte	0x1b24
 6706 1971 2F       		.uleb128 0x2f
 6707 1972 01       		.byte	0x1
 6708 1973 50       		.byte	0x50
 6709 1974 03       		.byte	0x3
 6710 1975 7A       		.byte	0x7a
 6711 1976 F07E     		.sleb128 -144
 6712 1978 2F       		.uleb128 0x2f
 6713 1979 01       		.byte	0x1
 6714 197a 51       		.byte	0x51
 6715 197b 02       		.byte	0x2
 6716 197c 7A       		.byte	0x7a
 6717 197d 00       		.sleb128 0
 6718 197e 2F       		.uleb128 0x2f
 6719 197f 01       		.byte	0x1
 6720 1980 52       		.byte	0x52
 6721 1981 02       		.byte	0x2
 6722 1982 08       		.byte	0x8
 6723 1983 90       		.byte	0x90
 6724 1984 00       		.byte	0
 6725 1985 00       		.byte	0
 6726 1986 00       		.byte	0
 6727 1987 00       		.byte	0
 6728 1988 48       		.uleb128 0x48
 6729 1989 01       		.byte	0x1
 6730 198a 7F040000 		.4byte	.LASF192
 6731 198e 01       		.byte	0x1
 6732 198f 41       		.byte	0x41
 6733 1990 06       		.byte	0x6
 6734 1991 01       		.byte	0x1
 6735 1992 01       		.byte	0x1
 6736 1993 B0190000 		.4byte	0x19b0
 6737 1997 49       		.uleb128 0x49
 6738 1998 6B657900 		.ascii	"key\000"
 6739 199c 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 135


 6740 199d 41       		.byte	0x41
 6741 199e 26       		.byte	0x26
 6742 199f C30C0000 		.4byte	0xcc3
 6743 19a3 4B       		.uleb128 0x4b
 6744 19a4 2D020000 		.4byte	.LASF131
 6745 19a8 01       		.byte	0x1
 6746 19a9 41       		.byte	0x41
 6747 19aa 3A       		.byte	0x3a
 6748 19ab 500C0000 		.4byte	0xc50
 6749 19af 00       		.byte	0
 6750 19b0 4C       		.uleb128 0x4c
 6751 19b1 01       		.byte	0x1
 6752 19b2 4A020000 		.4byte	.LASF209
 6753 19b6 01       		.byte	0x1
 6754 19b7 35       		.byte	0x35
 6755 19b8 11       		.byte	0x11
 6756 19b9 01       		.byte	0x1
 6757 19ba 48130000 		.4byte	0x1348
 6758 19be 01       		.byte	0x1
 6759 19bf DC190000 		.4byte	0x19dc
 6760 19c3 49       		.uleb128 0x49
 6761 19c4 6B657900 		.ascii	"key\000"
 6762 19c8 01       		.byte	0x1
 6763 19c9 35       		.byte	0x35
 6764 19ca 2F       		.byte	0x2f
 6765 19cb C30C0000 		.4byte	0xcc3
 6766 19cf 4D       		.uleb128 0x4d
 6767 19d0 46       		.uleb128 0x46
 6768 19d1 6900     		.ascii	"i\000"
 6769 19d3 01       		.byte	0x1
 6770 19d4 37       		.byte	0x37
 6771 19d5 0E       		.byte	0xe
 6772 19d6 68000000 		.4byte	0x68
 6773 19da 00       		.byte	0
 6774 19db 00       		.byte	0
 6775 19dc 4E       		.uleb128 0x4e
 6776 19dd B0190000 		.4byte	0x19b0
 6777 19e1 00000000 		.4byte	.LFB3
 6778 19e5 58000000 		.4byte	.LFE3
 6779 19e9 1D0D0000 		.4byte	.LLST0
 6780 19ed 01       		.byte	0x1
 6781 19ee 121A0000 		.4byte	0x1a12
 6782 19f2 43       		.uleb128 0x43
 6783 19f3 C3190000 		.4byte	0x19c3
 6784 19f7 02       		.byte	0x2
 6785 19f8 91       		.byte	0x91
 6786 19f9 68       		.sleb128 -24
 6787 19fa 40       		.uleb128 0x40
 6788 19fb CF190000 		.4byte	0x19cf
 6789 19ff 00000000 		.4byte	.Ldebug_ranges0+0
 6790 1a03 41       		.uleb128 0x41
 6791 1a04 D0190000 		.4byte	0x19d0
 6792 1a08 890D0000 		.4byte	.LLST1
 6793 1a0c 850D0000 		.4byte	.LVUS1
 6794 1a10 00       		.byte	0
 6795 1a11 00       		.byte	0
 6796 1a12 4E       		.uleb128 0x4e
ARM GAS  /tmp/ccPfsSwR.s 			page 136


 6797 1a13 88190000 		.4byte	0x1988
 6798 1a17 00000000 		.4byte	.LFB4
 6799 1a1b 54000000 		.4byte	.LFE4
 6800 1a1f A80D0000 		.4byte	.LLST2
 6801 1a23 01       		.byte	0x1
 6802 1a24 5F1A0000 		.4byte	0x1a5f
 6803 1a28 43       		.uleb128 0x43
 6804 1a29 97190000 		.4byte	0x1997
 6805 1a2d 02       		.byte	0x2
 6806 1a2e 91       		.byte	0x91
 6807 1a2f 58       		.sleb128 -40
 6808 1a30 43       		.uleb128 0x43
 6809 1a31 A3190000 		.4byte	0x19a3
 6810 1a35 02       		.byte	0x2
 6811 1a36 91       		.byte	0x91
 6812 1a37 78       		.sleb128 -8
 6813 1a38 30       		.uleb128 0x30
 6814 1a39 3A000000 		.4byte	.LVL5
 6815 1a3d 241B0000 		.4byte	0x1b24
 6816 1a41 2F       		.uleb128 0x2f
 6817 1a42 01       		.byte	0x1
 6818 1a43 50       		.byte	0x50
 6819 1a44 0C       		.byte	0xc
 6820 1a45 74       		.byte	0x74
 6821 1a46 7F       		.sleb128 -1
 6822 1a47 39       		.byte	0x39
 6823 1a48 1E       		.byte	0x1e
 6824 1a49 34       		.byte	0x34
 6825 1a4a 24       		.byte	0x24
 6826 1a4b 03       		.byte	0x3
 6827 1a4c 00000000 		.4byte	g_arbiters
 6828 1a50 22       		.byte	0x22
 6829 1a51 2F       		.uleb128 0x2f
 6830 1a52 01       		.byte	0x1
 6831 1a53 51       		.byte	0x51
 6832 1a54 02       		.byte	0x2
 6833 1a55 91       		.byte	0x91
 6834 1a56 68       		.sleb128 -24
 6835 1a57 2F       		.uleb128 0x2f
 6836 1a58 01       		.byte	0x1
 6837 1a59 52       		.byte	0x52
 6838 1a5a 02       		.byte	0x2
 6839 1a5b 08       		.byte	0x8
 6840 1a5c 90       		.byte	0x90
 6841 1a5d 00       		.byte	0
 6842 1a5e 00       		.byte	0
 6843 1a5f 4F       		.uleb128 0x4f
 6844 1a60 F6180000 		.4byte	0x18f6
 6845 1a64 00000000 		.4byte	.LFB6
 6846 1a68 0A000000 		.4byte	.LFE6
 6847 1a6c 02       		.byte	0x2
 6848 1a6d 7D       		.byte	0x7d
 6849 1a6e 00       		.sleb128 0
 6850 1a6f 01       		.byte	0x1
 6851 1a70 7C1A0000 		.4byte	0x1a7c
 6852 1a74 43       		.uleb128 0x43
 6853 1a75 05190000 		.4byte	0x1905
ARM GAS  /tmp/ccPfsSwR.s 			page 137


 6854 1a79 01       		.byte	0x1
 6855 1a7a 50       		.byte	0x50
 6856 1a7b 00       		.byte	0
 6857 1a7c 50       		.uleb128 0x50
 6858 1a7d 01       		.byte	0x1
 6859 1a7e 01       		.byte	0x1
 6860 1a7f CE040000 		.4byte	.LASF193
 6861 1a83 CE040000 		.4byte	.LASF193
 6862 1a87 08       		.byte	0x8
 6863 1a88 24       		.byte	0x24
 6864 1a89 0D       		.byte	0xd
 6865 1a8a 50       		.uleb128 0x50
 6866 1a8b 01       		.byte	0x1
 6867 1a8c 01       		.byte	0x1
 6868 1a8d A6000000 		.4byte	.LASF194
 6869 1a91 A6000000 		.4byte	.LASF194
 6870 1a95 08       		.byte	0x8
 6871 1a96 26       		.byte	0x26
 6872 1a97 0D       		.byte	0xd
 6873 1a98 50       		.uleb128 0x50
 6874 1a99 01       		.byte	0x1
 6875 1a9a 01       		.byte	0x1
 6876 1a9b 2D050000 		.4byte	.LASF195
 6877 1a9f 2D050000 		.4byte	.LASF195
 6878 1aa3 08       		.byte	0x8
 6879 1aa4 21       		.byte	0x21
 6880 1aa5 06       		.byte	0x6
 6881 1aa6 51       		.uleb128 0x51
 6882 1aa7 01       		.byte	0x1
 6883 1aa8 01       		.byte	0x1
 6884 1aa9 4D617800 		.ascii	"Max\000"
 6885 1aad 4D617800 		.ascii	"Max\000"
 6886 1ab1 08       		.byte	0x8
 6887 1ab2 36       		.byte	0x36
 6888 1ab3 07       		.byte	0x7
 6889 1ab4 50       		.uleb128 0x50
 6890 1ab5 01       		.byte	0x1
 6891 1ab6 01       		.byte	0x1
 6892 1ab7 E0040000 		.4byte	.LASF196
 6893 1abb E0040000 		.4byte	.LASF196
 6894 1abf 08       		.byte	0x8
 6895 1ac0 37       		.byte	0x37
 6896 1ac1 07       		.byte	0x7
 6897 1ac2 50       		.uleb128 0x50
 6898 1ac3 01       		.byte	0x1
 6899 1ac4 01       		.byte	0x1
 6900 1ac5 2F070000 		.4byte	.LASF197
 6901 1ac9 2F070000 		.4byte	.LASF197
 6902 1acd 08       		.byte	0x8
 6903 1ace 22       		.byte	0x22
 6904 1acf 06       		.byte	0x6
 6905 1ad0 50       		.uleb128 0x50
 6906 1ad1 01       		.byte	0x1
 6907 1ad2 01       		.byte	0x1
 6908 1ad3 D4030000 		.4byte	.LASF198
 6909 1ad7 D4030000 		.4byte	.LASF198
 6910 1adb 08       		.byte	0x8
ARM GAS  /tmp/ccPfsSwR.s 			page 138


 6911 1adc 2C       		.byte	0x2c
 6912 1add 07       		.byte	0x7
 6913 1ade 50       		.uleb128 0x50
 6914 1adf 01       		.byte	0x1
 6915 1ae0 01       		.byte	0x1
 6916 1ae1 0F060000 		.4byte	.LASF199
 6917 1ae5 0F060000 		.4byte	.LASF199
 6918 1ae9 08       		.byte	0x8
 6919 1aea 2E       		.byte	0x2e
 6920 1aeb 0D       		.byte	0xd
 6921 1aec 50       		.uleb128 0x50
 6922 1aed 01       		.byte	0x1
 6923 1aee 01       		.byte	0x1
 6924 1aef A5050000 		.4byte	.LASF200
 6925 1af3 A5050000 		.4byte	.LASF200
 6926 1af7 08       		.byte	0x8
 6927 1af8 27       		.byte	0x27
 6928 1af9 0D       		.byte	0xd
 6929 1afa 50       		.uleb128 0x50
 6930 1afb 01       		.byte	0x1
 6931 1afc 01       		.byte	0x1
 6932 1afd 9E010000 		.4byte	.LASF201
 6933 1b01 9E010000 		.4byte	.LASF201
 6934 1b05 08       		.byte	0x8
 6935 1b06 2D       		.byte	0x2d
 6936 1b07 0D       		.byte	0xd
 6937 1b08 51       		.uleb128 0x51
 6938 1b09 01       		.byte	0x1
 6939 1b0a 01       		.byte	0x1
 6940 1b0b 446F7400 		.ascii	"Dot\000"
 6941 1b0f 446F7400 		.ascii	"Dot\000"
 6942 1b13 08       		.byte	0x8
 6943 1b14 2A       		.byte	0x2a
 6944 1b15 07       		.byte	0x7
 6945 1b16 51       		.uleb128 0x51
 6946 1b17 01       		.byte	0x1
 6947 1b18 01       		.byte	0x1
 6948 1b19 4D696E00 		.ascii	"Min\000"
 6949 1b1d 4D696E00 		.ascii	"Min\000"
 6950 1b21 08       		.byte	0x8
 6951 1b22 35       		.byte	0x35
 6952 1b23 07       		.byte	0x7
 6953 1b24 52       		.uleb128 0x52
 6954 1b25 01       		.byte	0x1
 6955 1b26 01       		.byte	0x1
 6956 1b27 64080000 		.4byte	.LASF210
 6957 1b2b F6000000 		.4byte	.LASF211
 6958 1b2f 0A       		.byte	0xa
 6959 1b30 00       		.byte	0
 6960 1b31 50       		.uleb128 0x50
 6961 1b32 01       		.byte	0x1
 6962 1b33 01       		.byte	0x1
 6963 1b34 E0000000 		.4byte	.LASF202
 6964 1b38 E0000000 		.4byte	.LASF202
 6965 1b3c 09       		.byte	0x9
 6966 1b3d 3B       		.byte	0x3b
 6967 1b3e 05       		.byte	0x5
ARM GAS  /tmp/ccPfsSwR.s 			page 139


 6968 1b3f 53       		.uleb128 0x53
 6969 1b40 01       		.byte	0x1
 6970 1b41 01       		.byte	0x1
 6971 1b42 F9060000 		.4byte	.LASF203
 6972 1b46 F9060000 		.4byte	.LASF203
 6973 1b4a 06       		.byte	0x6
 6974 1b4b 6E01     		.2byte	0x16e
 6975 1b4d 0E       		.byte	0xe
 6976 1b4e 00       		.byte	0
 6977              		.section	.debug_abbrev,"",%progbits
 6978              	.Ldebug_abbrev0:
 6979 0000 01       		.uleb128 0x1
 6980 0001 11       		.uleb128 0x11
 6981 0002 01       		.byte	0x1
 6982 0003 25       		.uleb128 0x25
 6983 0004 0E       		.uleb128 0xe
 6984 0005 13       		.uleb128 0x13
 6985 0006 0B       		.uleb128 0xb
 6986 0007 03       		.uleb128 0x3
 6987 0008 0E       		.uleb128 0xe
 6988 0009 1B       		.uleb128 0x1b
 6989 000a 0E       		.uleb128 0xe
 6990 000b 55       		.uleb128 0x55
 6991 000c 06       		.uleb128 0x6
 6992 000d 11       		.uleb128 0x11
 6993 000e 01       		.uleb128 0x1
 6994 000f 52       		.uleb128 0x52
 6995 0010 01       		.uleb128 0x1
 6996 0011 10       		.uleb128 0x10
 6997 0012 06       		.uleb128 0x6
 6998 0013 00       		.byte	0
 6999 0014 00       		.byte	0
 7000 0015 02       		.uleb128 0x2
 7001 0016 24       		.uleb128 0x24
 7002 0017 00       		.byte	0
 7003 0018 0B       		.uleb128 0xb
 7004 0019 0B       		.uleb128 0xb
 7005 001a 3E       		.uleb128 0x3e
 7006 001b 0B       		.uleb128 0xb
 7007 001c 03       		.uleb128 0x3
 7008 001d 0E       		.uleb128 0xe
 7009 001e 00       		.byte	0
 7010 001f 00       		.byte	0
 7011 0020 03       		.uleb128 0x3
 7012 0021 24       		.uleb128 0x24
 7013 0022 00       		.byte	0
 7014 0023 0B       		.uleb128 0xb
 7015 0024 0B       		.uleb128 0xb
 7016 0025 3E       		.uleb128 0x3e
 7017 0026 0B       		.uleb128 0xb
 7018 0027 03       		.uleb128 0x3
 7019 0028 08       		.uleb128 0x8
 7020 0029 00       		.byte	0
 7021 002a 00       		.byte	0
 7022 002b 04       		.uleb128 0x4
 7023 002c 0F       		.uleb128 0xf
 7024 002d 00       		.byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 140


 7025 002e 0B       		.uleb128 0xb
 7026 002f 0B       		.uleb128 0xb
 7027 0030 00       		.byte	0
 7028 0031 00       		.byte	0
 7029 0032 05       		.uleb128 0x5
 7030 0033 16       		.uleb128 0x16
 7031 0034 00       		.byte	0
 7032 0035 03       		.uleb128 0x3
 7033 0036 0E       		.uleb128 0xe
 7034 0037 3A       		.uleb128 0x3a
 7035 0038 0B       		.uleb128 0xb
 7036 0039 3B       		.uleb128 0x3b
 7037 003a 05       		.uleb128 0x5
 7038 003b 39       		.uleb128 0x39
 7039 003c 0B       		.uleb128 0xb
 7040 003d 49       		.uleb128 0x49
 7041 003e 13       		.uleb128 0x13
 7042 003f 00       		.byte	0
 7043 0040 00       		.byte	0
 7044 0041 06       		.uleb128 0x6
 7045 0042 16       		.uleb128 0x16
 7046 0043 00       		.byte	0
 7047 0044 03       		.uleb128 0x3
 7048 0045 0E       		.uleb128 0xe
 7049 0046 3A       		.uleb128 0x3a
 7050 0047 0B       		.uleb128 0xb
 7051 0048 3B       		.uleb128 0x3b
 7052 0049 0B       		.uleb128 0xb
 7053 004a 39       		.uleb128 0x39
 7054 004b 0B       		.uleb128 0xb
 7055 004c 49       		.uleb128 0x49
 7056 004d 13       		.uleb128 0x13
 7057 004e 00       		.byte	0
 7058 004f 00       		.byte	0
 7059 0050 07       		.uleb128 0x7
 7060 0051 17       		.uleb128 0x17
 7061 0052 01       		.byte	0x1
 7062 0053 0B       		.uleb128 0xb
 7063 0054 0B       		.uleb128 0xb
 7064 0055 3A       		.uleb128 0x3a
 7065 0056 0B       		.uleb128 0xb
 7066 0057 3B       		.uleb128 0x3b
 7067 0058 0B       		.uleb128 0xb
 7068 0059 39       		.uleb128 0x39
 7069 005a 0B       		.uleb128 0xb
 7070 005b 01       		.uleb128 0x1
 7071 005c 13       		.uleb128 0x13
 7072 005d 00       		.byte	0
 7073 005e 00       		.byte	0
 7074 005f 08       		.uleb128 0x8
 7075 0060 0D       		.uleb128 0xd
 7076 0061 00       		.byte	0
 7077 0062 03       		.uleb128 0x3
 7078 0063 0E       		.uleb128 0xe
 7079 0064 3A       		.uleb128 0x3a
 7080 0065 0B       		.uleb128 0xb
 7081 0066 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccPfsSwR.s 			page 141


 7082 0067 0B       		.uleb128 0xb
 7083 0068 39       		.uleb128 0x39
 7084 0069 0B       		.uleb128 0xb
 7085 006a 49       		.uleb128 0x49
 7086 006b 13       		.uleb128 0x13
 7087 006c 00       		.byte	0
 7088 006d 00       		.byte	0
 7089 006e 09       		.uleb128 0x9
 7090 006f 01       		.uleb128 0x1
 7091 0070 01       		.byte	0x1
 7092 0071 49       		.uleb128 0x49
 7093 0072 13       		.uleb128 0x13
 7094 0073 01       		.uleb128 0x1
 7095 0074 13       		.uleb128 0x13
 7096 0075 00       		.byte	0
 7097 0076 00       		.byte	0
 7098 0077 0A       		.uleb128 0xa
 7099 0078 21       		.uleb128 0x21
 7100 0079 00       		.byte	0
 7101 007a 49       		.uleb128 0x49
 7102 007b 13       		.uleb128 0x13
 7103 007c 2F       		.uleb128 0x2f
 7104 007d 0B       		.uleb128 0xb
 7105 007e 00       		.byte	0
 7106 007f 00       		.byte	0
 7107 0080 0B       		.uleb128 0xb
 7108 0081 13       		.uleb128 0x13
 7109 0082 01       		.byte	0x1
 7110 0083 0B       		.uleb128 0xb
 7111 0084 0B       		.uleb128 0xb
 7112 0085 3A       		.uleb128 0x3a
 7113 0086 0B       		.uleb128 0xb
 7114 0087 3B       		.uleb128 0x3b
 7115 0088 0B       		.uleb128 0xb
 7116 0089 39       		.uleb128 0x39
 7117 008a 0B       		.uleb128 0xb
 7118 008b 01       		.uleb128 0x1
 7119 008c 13       		.uleb128 0x13
 7120 008d 00       		.byte	0
 7121 008e 00       		.byte	0
 7122 008f 0C       		.uleb128 0xc
 7123 0090 0D       		.uleb128 0xd
 7124 0091 00       		.byte	0
 7125 0092 03       		.uleb128 0x3
 7126 0093 0E       		.uleb128 0xe
 7127 0094 3A       		.uleb128 0x3a
 7128 0095 0B       		.uleb128 0xb
 7129 0096 3B       		.uleb128 0x3b
 7130 0097 0B       		.uleb128 0xb
 7131 0098 39       		.uleb128 0x39
 7132 0099 0B       		.uleb128 0xb
 7133 009a 49       		.uleb128 0x49
 7134 009b 13       		.uleb128 0x13
 7135 009c 38       		.uleb128 0x38
 7136 009d 0A       		.uleb128 0xa
 7137 009e 00       		.byte	0
 7138 009f 00       		.byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 142


 7139 00a0 0D       		.uleb128 0xd
 7140 00a1 13       		.uleb128 0x13
 7141 00a2 01       		.byte	0x1
 7142 00a3 03       		.uleb128 0x3
 7143 00a4 0E       		.uleb128 0xe
 7144 00a5 0B       		.uleb128 0xb
 7145 00a6 0B       		.uleb128 0xb
 7146 00a7 3A       		.uleb128 0x3a
 7147 00a8 0B       		.uleb128 0xb
 7148 00a9 3B       		.uleb128 0x3b
 7149 00aa 0B       		.uleb128 0xb
 7150 00ab 39       		.uleb128 0x39
 7151 00ac 0B       		.uleb128 0xb
 7152 00ad 01       		.uleb128 0x1
 7153 00ae 13       		.uleb128 0x13
 7154 00af 00       		.byte	0
 7155 00b0 00       		.byte	0
 7156 00b1 0E       		.uleb128 0xe
 7157 00b2 0D       		.uleb128 0xd
 7158 00b3 00       		.byte	0
 7159 00b4 03       		.uleb128 0x3
 7160 00b5 08       		.uleb128 0x8
 7161 00b6 3A       		.uleb128 0x3a
 7162 00b7 0B       		.uleb128 0xb
 7163 00b8 3B       		.uleb128 0x3b
 7164 00b9 0B       		.uleb128 0xb
 7165 00ba 39       		.uleb128 0x39
 7166 00bb 0B       		.uleb128 0xb
 7167 00bc 49       		.uleb128 0x49
 7168 00bd 13       		.uleb128 0x13
 7169 00be 38       		.uleb128 0x38
 7170 00bf 0A       		.uleb128 0xa
 7171 00c0 00       		.byte	0
 7172 00c1 00       		.byte	0
 7173 00c2 0F       		.uleb128 0xf
 7174 00c3 0F       		.uleb128 0xf
 7175 00c4 00       		.byte	0
 7176 00c5 0B       		.uleb128 0xb
 7177 00c6 0B       		.uleb128 0xb
 7178 00c7 49       		.uleb128 0x49
 7179 00c8 13       		.uleb128 0x13
 7180 00c9 00       		.byte	0
 7181 00ca 00       		.byte	0
 7182 00cb 10       		.uleb128 0x10
 7183 00cc 13       		.uleb128 0x13
 7184 00cd 01       		.byte	0x1
 7185 00ce 03       		.uleb128 0x3
 7186 00cf 0E       		.uleb128 0xe
 7187 00d0 0B       		.uleb128 0xb
 7188 00d1 05       		.uleb128 0x5
 7189 00d2 3A       		.uleb128 0x3a
 7190 00d3 0B       		.uleb128 0xb
 7191 00d4 3B       		.uleb128 0x3b
 7192 00d5 0B       		.uleb128 0xb
 7193 00d6 39       		.uleb128 0x39
 7194 00d7 0B       		.uleb128 0xb
 7195 00d8 01       		.uleb128 0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 143


 7196 00d9 13       		.uleb128 0x13
 7197 00da 00       		.byte	0
 7198 00db 00       		.byte	0
 7199 00dc 11       		.uleb128 0x11
 7200 00dd 15       		.uleb128 0x15
 7201 00de 00       		.byte	0
 7202 00df 27       		.uleb128 0x27
 7203 00e0 0C       		.uleb128 0xc
 7204 00e1 00       		.byte	0
 7205 00e2 00       		.byte	0
 7206 00e3 12       		.uleb128 0x12
 7207 00e4 15       		.uleb128 0x15
 7208 00e5 01       		.byte	0x1
 7209 00e6 27       		.uleb128 0x27
 7210 00e7 0C       		.uleb128 0xc
 7211 00e8 49       		.uleb128 0x49
 7212 00e9 13       		.uleb128 0x13
 7213 00ea 01       		.uleb128 0x1
 7214 00eb 13       		.uleb128 0x13
 7215 00ec 00       		.byte	0
 7216 00ed 00       		.byte	0
 7217 00ee 13       		.uleb128 0x13
 7218 00ef 05       		.uleb128 0x5
 7219 00f0 00       		.byte	0
 7220 00f1 49       		.uleb128 0x49
 7221 00f2 13       		.uleb128 0x13
 7222 00f3 00       		.byte	0
 7223 00f4 00       		.byte	0
 7224 00f5 14       		.uleb128 0x14
 7225 00f6 26       		.uleb128 0x26
 7226 00f7 00       		.byte	0
 7227 00f8 49       		.uleb128 0x49
 7228 00f9 13       		.uleb128 0x13
 7229 00fa 00       		.byte	0
 7230 00fb 00       		.byte	0
 7231 00fc 15       		.uleb128 0x15
 7232 00fd 13       		.uleb128 0x13
 7233 00fe 01       		.byte	0x1
 7234 00ff 03       		.uleb128 0x3
 7235 0100 0E       		.uleb128 0xe
 7236 0101 0B       		.uleb128 0xb
 7237 0102 05       		.uleb128 0x5
 7238 0103 3A       		.uleb128 0x3a
 7239 0104 0B       		.uleb128 0xb
 7240 0105 3B       		.uleb128 0x3b
 7241 0106 05       		.uleb128 0x5
 7242 0107 39       		.uleb128 0x39
 7243 0108 0B       		.uleb128 0xb
 7244 0109 01       		.uleb128 0x1
 7245 010a 13       		.uleb128 0x13
 7246 010b 00       		.byte	0
 7247 010c 00       		.byte	0
 7248 010d 16       		.uleb128 0x16
 7249 010e 0D       		.uleb128 0xd
 7250 010f 00       		.byte	0
 7251 0110 03       		.uleb128 0x3
 7252 0111 0E       		.uleb128 0xe
ARM GAS  /tmp/ccPfsSwR.s 			page 144


 7253 0112 3A       		.uleb128 0x3a
 7254 0113 0B       		.uleb128 0xb
 7255 0114 3B       		.uleb128 0x3b
 7256 0115 05       		.uleb128 0x5
 7257 0116 39       		.uleb128 0x39
 7258 0117 0B       		.uleb128 0xb
 7259 0118 49       		.uleb128 0x49
 7260 0119 13       		.uleb128 0x13
 7261 011a 38       		.uleb128 0x38
 7262 011b 0A       		.uleb128 0xa
 7263 011c 00       		.byte	0
 7264 011d 00       		.byte	0
 7265 011e 17       		.uleb128 0x17
 7266 011f 13       		.uleb128 0x13
 7267 0120 01       		.byte	0x1
 7268 0121 03       		.uleb128 0x3
 7269 0122 0E       		.uleb128 0xe
 7270 0123 0B       		.uleb128 0xb
 7271 0124 0B       		.uleb128 0xb
 7272 0125 3A       		.uleb128 0x3a
 7273 0126 0B       		.uleb128 0xb
 7274 0127 3B       		.uleb128 0x3b
 7275 0128 05       		.uleb128 0x5
 7276 0129 39       		.uleb128 0x39
 7277 012a 0B       		.uleb128 0xb
 7278 012b 01       		.uleb128 0x1
 7279 012c 13       		.uleb128 0x13
 7280 012d 00       		.byte	0
 7281 012e 00       		.byte	0
 7282 012f 18       		.uleb128 0x18
 7283 0130 13       		.uleb128 0x13
 7284 0131 01       		.byte	0x1
 7285 0132 0B       		.uleb128 0xb
 7286 0133 0B       		.uleb128 0xb
 7287 0134 3A       		.uleb128 0x3a
 7288 0135 0B       		.uleb128 0xb
 7289 0136 3B       		.uleb128 0x3b
 7290 0137 05       		.uleb128 0x5
 7291 0138 39       		.uleb128 0x39
 7292 0139 0B       		.uleb128 0xb
 7293 013a 01       		.uleb128 0x1
 7294 013b 13       		.uleb128 0x13
 7295 013c 00       		.byte	0
 7296 013d 00       		.byte	0
 7297 013e 19       		.uleb128 0x19
 7298 013f 17       		.uleb128 0x17
 7299 0140 01       		.byte	0x1
 7300 0141 0B       		.uleb128 0xb
 7301 0142 0B       		.uleb128 0xb
 7302 0143 3A       		.uleb128 0x3a
 7303 0144 0B       		.uleb128 0xb
 7304 0145 3B       		.uleb128 0x3b
 7305 0146 05       		.uleb128 0x5
 7306 0147 39       		.uleb128 0x39
 7307 0148 0B       		.uleb128 0xb
 7308 0149 01       		.uleb128 0x1
 7309 014a 13       		.uleb128 0x13
ARM GAS  /tmp/ccPfsSwR.s 			page 145


 7310 014b 00       		.byte	0
 7311 014c 00       		.byte	0
 7312 014d 1A       		.uleb128 0x1a
 7313 014e 0D       		.uleb128 0xd
 7314 014f 00       		.byte	0
 7315 0150 03       		.uleb128 0x3
 7316 0151 0E       		.uleb128 0xe
 7317 0152 3A       		.uleb128 0x3a
 7318 0153 0B       		.uleb128 0xb
 7319 0154 3B       		.uleb128 0x3b
 7320 0155 05       		.uleb128 0x5
 7321 0156 39       		.uleb128 0x39
 7322 0157 0B       		.uleb128 0xb
 7323 0158 49       		.uleb128 0x49
 7324 0159 13       		.uleb128 0x13
 7325 015a 00       		.byte	0
 7326 015b 00       		.byte	0
 7327 015c 1B       		.uleb128 0x1b
 7328 015d 13       		.uleb128 0x13
 7329 015e 00       		.byte	0
 7330 015f 03       		.uleb128 0x3
 7331 0160 0E       		.uleb128 0xe
 7332 0161 3C       		.uleb128 0x3c
 7333 0162 0C       		.uleb128 0xc
 7334 0163 00       		.byte	0
 7335 0164 00       		.byte	0
 7336 0165 1C       		.uleb128 0x1c
 7337 0166 15       		.uleb128 0x15
 7338 0167 01       		.byte	0x1
 7339 0168 27       		.uleb128 0x27
 7340 0169 0C       		.uleb128 0xc
 7341 016a 01       		.uleb128 0x1
 7342 016b 13       		.uleb128 0x13
 7343 016c 00       		.byte	0
 7344 016d 00       		.byte	0
 7345 016e 1D       		.uleb128 0x1d
 7346 016f 34       		.uleb128 0x34
 7347 0170 00       		.byte	0
 7348 0171 03       		.uleb128 0x3
 7349 0172 0E       		.uleb128 0xe
 7350 0173 3A       		.uleb128 0x3a
 7351 0174 0B       		.uleb128 0xb
 7352 0175 3B       		.uleb128 0x3b
 7353 0176 05       		.uleb128 0x5
 7354 0177 39       		.uleb128 0x39
 7355 0178 0B       		.uleb128 0xb
 7356 0179 49       		.uleb128 0x49
 7357 017a 13       		.uleb128 0x13
 7358 017b 3F       		.uleb128 0x3f
 7359 017c 0C       		.uleb128 0xc
 7360 017d 3C       		.uleb128 0x3c
 7361 017e 0C       		.uleb128 0xc
 7362 017f 00       		.byte	0
 7363 0180 00       		.byte	0
 7364 0181 1E       		.uleb128 0x1e
 7365 0182 04       		.uleb128 0x4
 7366 0183 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 146


 7367 0184 03       		.uleb128 0x3
 7368 0185 0E       		.uleb128 0xe
 7369 0186 3E       		.uleb128 0x3e
 7370 0187 0B       		.uleb128 0xb
 7371 0188 0B       		.uleb128 0xb
 7372 0189 0B       		.uleb128 0xb
 7373 018a 49       		.uleb128 0x49
 7374 018b 13       		.uleb128 0x13
 7375 018c 3A       		.uleb128 0x3a
 7376 018d 0B       		.uleb128 0xb
 7377 018e 3B       		.uleb128 0x3b
 7378 018f 05       		.uleb128 0x5
 7379 0190 39       		.uleb128 0x39
 7380 0191 0B       		.uleb128 0xb
 7381 0192 01       		.uleb128 0x1
 7382 0193 13       		.uleb128 0x13
 7383 0194 00       		.byte	0
 7384 0195 00       		.byte	0
 7385 0196 1F       		.uleb128 0x1f
 7386 0197 28       		.uleb128 0x28
 7387 0198 00       		.byte	0
 7388 0199 03       		.uleb128 0x3
 7389 019a 0E       		.uleb128 0xe
 7390 019b 1C       		.uleb128 0x1c
 7391 019c 0D       		.uleb128 0xd
 7392 019d 00       		.byte	0
 7393 019e 00       		.byte	0
 7394 019f 20       		.uleb128 0x20
 7395 01a0 28       		.uleb128 0x28
 7396 01a1 00       		.byte	0
 7397 01a2 03       		.uleb128 0x3
 7398 01a3 0E       		.uleb128 0xe
 7399 01a4 1C       		.uleb128 0x1c
 7400 01a5 0B       		.uleb128 0xb
 7401 01a6 00       		.byte	0
 7402 01a7 00       		.byte	0
 7403 01a8 21       		.uleb128 0x21
 7404 01a9 34       		.uleb128 0x34
 7405 01aa 00       		.byte	0
 7406 01ab 03       		.uleb128 0x3
 7407 01ac 0E       		.uleb128 0xe
 7408 01ad 3A       		.uleb128 0x3a
 7409 01ae 0B       		.uleb128 0xb
 7410 01af 3B       		.uleb128 0x3b
 7411 01b0 0B       		.uleb128 0xb
 7412 01b1 39       		.uleb128 0x39
 7413 01b2 0B       		.uleb128 0xb
 7414 01b3 49       		.uleb128 0x49
 7415 01b4 13       		.uleb128 0x13
 7416 01b5 3F       		.uleb128 0x3f
 7417 01b6 0C       		.uleb128 0xc
 7418 01b7 3C       		.uleb128 0x3c
 7419 01b8 0C       		.uleb128 0xc
 7420 01b9 00       		.byte	0
 7421 01ba 00       		.byte	0
 7422 01bb 22       		.uleb128 0x22
 7423 01bc 17       		.uleb128 0x17
ARM GAS  /tmp/ccPfsSwR.s 			page 147


 7424 01bd 01       		.byte	0x1
 7425 01be 03       		.uleb128 0x3
 7426 01bf 0E       		.uleb128 0xe
 7427 01c0 0B       		.uleb128 0xb
 7428 01c1 0B       		.uleb128 0xb
 7429 01c2 3A       		.uleb128 0x3a
 7430 01c3 0B       		.uleb128 0xb
 7431 01c4 3B       		.uleb128 0x3b
 7432 01c5 0B       		.uleb128 0xb
 7433 01c6 39       		.uleb128 0x39
 7434 01c7 0B       		.uleb128 0xb
 7435 01c8 01       		.uleb128 0x1
 7436 01c9 13       		.uleb128 0x13
 7437 01ca 00       		.byte	0
 7438 01cb 00       		.byte	0
 7439 01cc 23       		.uleb128 0x23
 7440 01cd 0D       		.uleb128 0xd
 7441 01ce 00       		.byte	0
 7442 01cf 03       		.uleb128 0x3
 7443 01d0 08       		.uleb128 0x8
 7444 01d1 3A       		.uleb128 0x3a
 7445 01d2 0B       		.uleb128 0xb
 7446 01d3 3B       		.uleb128 0x3b
 7447 01d4 0B       		.uleb128 0xb
 7448 01d5 39       		.uleb128 0x39
 7449 01d6 0B       		.uleb128 0xb
 7450 01d7 49       		.uleb128 0x49
 7451 01d8 13       		.uleb128 0x13
 7452 01d9 00       		.byte	0
 7453 01da 00       		.byte	0
 7454 01db 24       		.uleb128 0x24
 7455 01dc 34       		.uleb128 0x34
 7456 01dd 00       		.byte	0
 7457 01de 03       		.uleb128 0x3
 7458 01df 0E       		.uleb128 0xe
 7459 01e0 3A       		.uleb128 0x3a
 7460 01e1 0B       		.uleb128 0xb
 7461 01e2 3B       		.uleb128 0x3b
 7462 01e3 0B       		.uleb128 0xb
 7463 01e4 39       		.uleb128 0x39
 7464 01e5 0B       		.uleb128 0xb
 7465 01e6 49       		.uleb128 0x49
 7466 01e7 13       		.uleb128 0x13
 7467 01e8 3F       		.uleb128 0x3f
 7468 01e9 0C       		.uleb128 0xc
 7469 01ea 02       		.uleb128 0x2
 7470 01eb 0A       		.uleb128 0xa
 7471 01ec 00       		.byte	0
 7472 01ed 00       		.byte	0
 7473 01ee 25       		.uleb128 0x25
 7474 01ef 2E       		.uleb128 0x2e
 7475 01f0 01       		.byte	0x1
 7476 01f1 3F       		.uleb128 0x3f
 7477 01f2 0C       		.uleb128 0xc
 7478 01f3 03       		.uleb128 0x3
 7479 01f4 0E       		.uleb128 0xe
 7480 01f5 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccPfsSwR.s 			page 148


 7481 01f6 0B       		.uleb128 0xb
 7482 01f7 3B       		.uleb128 0x3b
 7483 01f8 05       		.uleb128 0x5
 7484 01f9 39       		.uleb128 0x39
 7485 01fa 0B       		.uleb128 0xb
 7486 01fb 27       		.uleb128 0x27
 7487 01fc 0C       		.uleb128 0xc
 7488 01fd 49       		.uleb128 0x49
 7489 01fe 13       		.uleb128 0x13
 7490 01ff 11       		.uleb128 0x11
 7491 0200 01       		.uleb128 0x1
 7492 0201 12       		.uleb128 0x12
 7493 0202 01       		.uleb128 0x1
 7494 0203 40       		.uleb128 0x40
 7495 0204 0A       		.uleb128 0xa
 7496 0205 9742     		.uleb128 0x2117
 7497 0207 0C       		.uleb128 0xc
 7498 0208 01       		.uleb128 0x1
 7499 0209 13       		.uleb128 0x13
 7500 020a 00       		.byte	0
 7501 020b 00       		.byte	0
 7502 020c 26       		.uleb128 0x26
 7503 020d 05       		.uleb128 0x5
 7504 020e 00       		.byte	0
 7505 020f 03       		.uleb128 0x3
 7506 0210 08       		.uleb128 0x8
 7507 0211 3A       		.uleb128 0x3a
 7508 0212 0B       		.uleb128 0xb
 7509 0213 3B       		.uleb128 0x3b
 7510 0214 05       		.uleb128 0x5
 7511 0215 39       		.uleb128 0x39
 7512 0216 0B       		.uleb128 0xb
 7513 0217 49       		.uleb128 0x49
 7514 0218 13       		.uleb128 0x13
 7515 0219 02       		.uleb128 0x2
 7516 021a 06       		.uleb128 0x6
 7517 021b B742     		.uleb128 0x2137
 7518 021d 06       		.uleb128 0x6
 7519 021e 00       		.byte	0
 7520 021f 00       		.byte	0
 7521 0220 27       		.uleb128 0x27
 7522 0221 2E       		.uleb128 0x2e
 7523 0222 01       		.byte	0x1
 7524 0223 3F       		.uleb128 0x3f
 7525 0224 0C       		.uleb128 0xc
 7526 0225 03       		.uleb128 0x3
 7527 0226 0E       		.uleb128 0xe
 7528 0227 3A       		.uleb128 0x3a
 7529 0228 0B       		.uleb128 0xb
 7530 0229 3B       		.uleb128 0x3b
 7531 022a 05       		.uleb128 0x5
 7532 022b 39       		.uleb128 0x39
 7533 022c 0B       		.uleb128 0xb
 7534 022d 27       		.uleb128 0x27
 7535 022e 0C       		.uleb128 0xc
 7536 022f 11       		.uleb128 0x11
 7537 0230 01       		.uleb128 0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 149


 7538 0231 12       		.uleb128 0x12
 7539 0232 01       		.uleb128 0x1
 7540 0233 40       		.uleb128 0x40
 7541 0234 06       		.uleb128 0x6
 7542 0235 9742     		.uleb128 0x2117
 7543 0237 0C       		.uleb128 0xc
 7544 0238 01       		.uleb128 0x1
 7545 0239 13       		.uleb128 0x13
 7546 023a 00       		.byte	0
 7547 023b 00       		.byte	0
 7548 023c 28       		.uleb128 0x28
 7549 023d 05       		.uleb128 0x5
 7550 023e 00       		.byte	0
 7551 023f 03       		.uleb128 0x3
 7552 0240 08       		.uleb128 0x8
 7553 0241 3A       		.uleb128 0x3a
 7554 0242 0B       		.uleb128 0xb
 7555 0243 3B       		.uleb128 0x3b
 7556 0244 05       		.uleb128 0x5
 7557 0245 39       		.uleb128 0x39
 7558 0246 0B       		.uleb128 0xb
 7559 0247 49       		.uleb128 0x49
 7560 0248 13       		.uleb128 0x13
 7561 0249 02       		.uleb128 0x2
 7562 024a 0A       		.uleb128 0xa
 7563 024b 00       		.byte	0
 7564 024c 00       		.byte	0
 7565 024d 29       		.uleb128 0x29
 7566 024e 34       		.uleb128 0x34
 7567 024f 00       		.byte	0
 7568 0250 03       		.uleb128 0x3
 7569 0251 0E       		.uleb128 0xe
 7570 0252 3A       		.uleb128 0x3a
 7571 0253 0B       		.uleb128 0xb
 7572 0254 3B       		.uleb128 0x3b
 7573 0255 05       		.uleb128 0x5
 7574 0256 39       		.uleb128 0x39
 7575 0257 0B       		.uleb128 0xb
 7576 0258 49       		.uleb128 0x49
 7577 0259 13       		.uleb128 0x13
 7578 025a 02       		.uleb128 0x2
 7579 025b 06       		.uleb128 0x6
 7580 025c B742     		.uleb128 0x2137
 7581 025e 06       		.uleb128 0x6
 7582 025f 00       		.byte	0
 7583 0260 00       		.byte	0
 7584 0261 2A       		.uleb128 0x2a
 7585 0262 0B       		.uleb128 0xb
 7586 0263 01       		.byte	0x1
 7587 0264 55       		.uleb128 0x55
 7588 0265 06       		.uleb128 0x6
 7589 0266 01       		.uleb128 0x1
 7590 0267 13       		.uleb128 0x13
 7591 0268 00       		.byte	0
 7592 0269 00       		.byte	0
 7593 026a 2B       		.uleb128 0x2b
 7594 026b 34       		.uleb128 0x34
ARM GAS  /tmp/ccPfsSwR.s 			page 150


 7595 026c 00       		.byte	0
 7596 026d 03       		.uleb128 0x3
 7597 026e 08       		.uleb128 0x8
 7598 026f 3A       		.uleb128 0x3a
 7599 0270 0B       		.uleb128 0xb
 7600 0271 3B       		.uleb128 0x3b
 7601 0272 05       		.uleb128 0x5
 7602 0273 39       		.uleb128 0x39
 7603 0274 0B       		.uleb128 0xb
 7604 0275 49       		.uleb128 0x49
 7605 0276 13       		.uleb128 0x13
 7606 0277 02       		.uleb128 0x2
 7607 0278 06       		.uleb128 0x6
 7608 0279 B742     		.uleb128 0x2137
 7609 027b 06       		.uleb128 0x6
 7610 027c 00       		.byte	0
 7611 027d 00       		.byte	0
 7612 027e 2C       		.uleb128 0x2c
 7613 027f 0B       		.uleb128 0xb
 7614 0280 01       		.byte	0x1
 7615 0281 55       		.uleb128 0x55
 7616 0282 06       		.uleb128 0x6
 7617 0283 00       		.byte	0
 7618 0284 00       		.byte	0
 7619 0285 2D       		.uleb128 0x2d
 7620 0286 898201   		.uleb128 0x4109
 7621 0289 00       		.byte	0
 7622 028a 11       		.uleb128 0x11
 7623 028b 01       		.uleb128 0x1
 7624 028c 31       		.uleb128 0x31
 7625 028d 13       		.uleb128 0x13
 7626 028e 00       		.byte	0
 7627 028f 00       		.byte	0
 7628 0290 2E       		.uleb128 0x2e
 7629 0291 898201   		.uleb128 0x4109
 7630 0294 01       		.byte	0x1
 7631 0295 11       		.uleb128 0x11
 7632 0296 01       		.uleb128 0x1
 7633 0297 31       		.uleb128 0x31
 7634 0298 13       		.uleb128 0x13
 7635 0299 01       		.uleb128 0x1
 7636 029a 13       		.uleb128 0x13
 7637 029b 00       		.byte	0
 7638 029c 00       		.byte	0
 7639 029d 2F       		.uleb128 0x2f
 7640 029e 8A8201   		.uleb128 0x410a
 7641 02a1 00       		.byte	0
 7642 02a2 02       		.uleb128 0x2
 7643 02a3 0A       		.uleb128 0xa
 7644 02a4 9142     		.uleb128 0x2111
 7645 02a6 0A       		.uleb128 0xa
 7646 02a7 00       		.byte	0
 7647 02a8 00       		.byte	0
 7648 02a9 30       		.uleb128 0x30
 7649 02aa 898201   		.uleb128 0x4109
 7650 02ad 01       		.byte	0x1
 7651 02ae 11       		.uleb128 0x11
ARM GAS  /tmp/ccPfsSwR.s 			page 151


 7652 02af 01       		.uleb128 0x1
 7653 02b0 31       		.uleb128 0x31
 7654 02b1 13       		.uleb128 0x13
 7655 02b2 00       		.byte	0
 7656 02b3 00       		.byte	0
 7657 02b4 31       		.uleb128 0x31
 7658 02b5 0B       		.uleb128 0xb
 7659 02b6 01       		.byte	0x1
 7660 02b7 11       		.uleb128 0x11
 7661 02b8 01       		.uleb128 0x1
 7662 02b9 12       		.uleb128 0x12
 7663 02ba 01       		.uleb128 0x1
 7664 02bb 01       		.uleb128 0x1
 7665 02bc 13       		.uleb128 0x13
 7666 02bd 00       		.byte	0
 7667 02be 00       		.byte	0
 7668 02bf 32       		.uleb128 0x32
 7669 02c0 0B       		.uleb128 0xb
 7670 02c1 01       		.byte	0x1
 7671 02c2 11       		.uleb128 0x11
 7672 02c3 01       		.uleb128 0x1
 7673 02c4 12       		.uleb128 0x12
 7674 02c5 01       		.uleb128 0x1
 7675 02c6 00       		.byte	0
 7676 02c7 00       		.byte	0
 7677 02c8 33       		.uleb128 0x33
 7678 02c9 2E       		.uleb128 0x2e
 7679 02ca 01       		.byte	0x1
 7680 02cb 3F       		.uleb128 0x3f
 7681 02cc 0C       		.uleb128 0xc
 7682 02cd 03       		.uleb128 0x3
 7683 02ce 0E       		.uleb128 0xe
 7684 02cf 3A       		.uleb128 0x3a
 7685 02d0 0B       		.uleb128 0xb
 7686 02d1 3B       		.uleb128 0x3b
 7687 02d2 0B       		.uleb128 0xb
 7688 02d3 39       		.uleb128 0x39
 7689 02d4 0B       		.uleb128 0xb
 7690 02d5 27       		.uleb128 0x27
 7691 02d6 0C       		.uleb128 0xc
 7692 02d7 11       		.uleb128 0x11
 7693 02d8 01       		.uleb128 0x1
 7694 02d9 12       		.uleb128 0x12
 7695 02da 01       		.uleb128 0x1
 7696 02db 40       		.uleb128 0x40
 7697 02dc 06       		.uleb128 0x6
 7698 02dd 9742     		.uleb128 0x2117
 7699 02df 0C       		.uleb128 0xc
 7700 02e0 01       		.uleb128 0x1
 7701 02e1 13       		.uleb128 0x13
 7702 02e2 00       		.byte	0
 7703 02e3 00       		.byte	0
 7704 02e4 34       		.uleb128 0x34
 7705 02e5 05       		.uleb128 0x5
 7706 02e6 00       		.byte	0
 7707 02e7 03       		.uleb128 0x3
 7708 02e8 08       		.uleb128 0x8
ARM GAS  /tmp/ccPfsSwR.s 			page 152


 7709 02e9 3A       		.uleb128 0x3a
 7710 02ea 0B       		.uleb128 0xb
 7711 02eb 3B       		.uleb128 0x3b
 7712 02ec 0B       		.uleb128 0xb
 7713 02ed 39       		.uleb128 0x39
 7714 02ee 0B       		.uleb128 0xb
 7715 02ef 49       		.uleb128 0x49
 7716 02f0 13       		.uleb128 0x13
 7717 02f1 02       		.uleb128 0x2
 7718 02f2 06       		.uleb128 0x6
 7719 02f3 B742     		.uleb128 0x2137
 7720 02f5 06       		.uleb128 0x6
 7721 02f6 00       		.byte	0
 7722 02f7 00       		.byte	0
 7723 02f8 35       		.uleb128 0x35
 7724 02f9 34       		.uleb128 0x34
 7725 02fa 00       		.byte	0
 7726 02fb 03       		.uleb128 0x3
 7727 02fc 08       		.uleb128 0x8
 7728 02fd 3A       		.uleb128 0x3a
 7729 02fe 0B       		.uleb128 0xb
 7730 02ff 3B       		.uleb128 0x3b
 7731 0300 0B       		.uleb128 0xb
 7732 0301 39       		.uleb128 0x39
 7733 0302 0B       		.uleb128 0xb
 7734 0303 49       		.uleb128 0x49
 7735 0304 13       		.uleb128 0x13
 7736 0305 02       		.uleb128 0x2
 7737 0306 06       		.uleb128 0x6
 7738 0307 B742     		.uleb128 0x2137
 7739 0309 06       		.uleb128 0x6
 7740 030a 00       		.byte	0
 7741 030b 00       		.byte	0
 7742 030c 36       		.uleb128 0x36
 7743 030d 34       		.uleb128 0x34
 7744 030e 00       		.byte	0
 7745 030f 03       		.uleb128 0x3
 7746 0310 08       		.uleb128 0x8
 7747 0311 3A       		.uleb128 0x3a
 7748 0312 0B       		.uleb128 0xb
 7749 0313 3B       		.uleb128 0x3b
 7750 0314 05       		.uleb128 0x5
 7751 0315 39       		.uleb128 0x39
 7752 0316 0B       		.uleb128 0xb
 7753 0317 49       		.uleb128 0x49
 7754 0318 13       		.uleb128 0x13
 7755 0319 02       		.uleb128 0x2
 7756 031a 0A       		.uleb128 0xa
 7757 031b 00       		.byte	0
 7758 031c 00       		.byte	0
 7759 031d 37       		.uleb128 0x37
 7760 031e 34       		.uleb128 0x34
 7761 031f 00       		.byte	0
 7762 0320 03       		.uleb128 0x3
 7763 0321 0E       		.uleb128 0xe
 7764 0322 3A       		.uleb128 0x3a
 7765 0323 0B       		.uleb128 0xb
ARM GAS  /tmp/ccPfsSwR.s 			page 153


 7766 0324 3B       		.uleb128 0x3b
 7767 0325 05       		.uleb128 0x5
 7768 0326 39       		.uleb128 0x39
 7769 0327 0B       		.uleb128 0xb
 7770 0328 49       		.uleb128 0x49
 7771 0329 13       		.uleb128 0x13
 7772 032a 02       		.uleb128 0x2
 7773 032b 0A       		.uleb128 0xa
 7774 032c 00       		.byte	0
 7775 032d 00       		.byte	0
 7776 032e 38       		.uleb128 0x38
 7777 032f 05       		.uleb128 0x5
 7778 0330 00       		.byte	0
 7779 0331 03       		.uleb128 0x3
 7780 0332 0E       		.uleb128 0xe
 7781 0333 3A       		.uleb128 0x3a
 7782 0334 0B       		.uleb128 0xb
 7783 0335 3B       		.uleb128 0x3b
 7784 0336 0B       		.uleb128 0xb
 7785 0337 39       		.uleb128 0x39
 7786 0338 0B       		.uleb128 0xb
 7787 0339 49       		.uleb128 0x49
 7788 033a 13       		.uleb128 0x13
 7789 033b 02       		.uleb128 0x2
 7790 033c 06       		.uleb128 0x6
 7791 033d B742     		.uleb128 0x2137
 7792 033f 06       		.uleb128 0x6
 7793 0340 00       		.byte	0
 7794 0341 00       		.byte	0
 7795 0342 39       		.uleb128 0x39
 7796 0343 34       		.uleb128 0x34
 7797 0344 00       		.byte	0
 7798 0345 03       		.uleb128 0x3
 7799 0346 0E       		.uleb128 0xe
 7800 0347 3A       		.uleb128 0x3a
 7801 0348 0B       		.uleb128 0xb
 7802 0349 3B       		.uleb128 0x3b
 7803 034a 0B       		.uleb128 0xb
 7804 034b 39       		.uleb128 0x39
 7805 034c 0B       		.uleb128 0xb
 7806 034d 49       		.uleb128 0x49
 7807 034e 13       		.uleb128 0x13
 7808 034f 1C       		.uleb128 0x1c
 7809 0350 0A       		.uleb128 0xa
 7810 0351 00       		.byte	0
 7811 0352 00       		.byte	0
 7812 0353 3A       		.uleb128 0x3a
 7813 0354 34       		.uleb128 0x34
 7814 0355 00       		.byte	0
 7815 0356 03       		.uleb128 0x3
 7816 0357 0E       		.uleb128 0xe
 7817 0358 3A       		.uleb128 0x3a
 7818 0359 0B       		.uleb128 0xb
 7819 035a 3B       		.uleb128 0x3b
 7820 035b 0B       		.uleb128 0xb
 7821 035c 39       		.uleb128 0x39
 7822 035d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccPfsSwR.s 			page 154


 7823 035e 49       		.uleb128 0x49
 7824 035f 13       		.uleb128 0x13
 7825 0360 02       		.uleb128 0x2
 7826 0361 06       		.uleb128 0x6
 7827 0362 B742     		.uleb128 0x2137
 7828 0364 06       		.uleb128 0x6
 7829 0365 00       		.byte	0
 7830 0366 00       		.byte	0
 7831 0367 3B       		.uleb128 0x3b
 7832 0368 34       		.uleb128 0x34
 7833 0369 00       		.byte	0
 7834 036a 03       		.uleb128 0x3
 7835 036b 08       		.uleb128 0x8
 7836 036c 3A       		.uleb128 0x3a
 7837 036d 0B       		.uleb128 0xb
 7838 036e 3B       		.uleb128 0x3b
 7839 036f 0B       		.uleb128 0xb
 7840 0370 39       		.uleb128 0x39
 7841 0371 0B       		.uleb128 0xb
 7842 0372 49       		.uleb128 0x49
 7843 0373 13       		.uleb128 0x13
 7844 0374 02       		.uleb128 0x2
 7845 0375 0A       		.uleb128 0xa
 7846 0376 00       		.byte	0
 7847 0377 00       		.byte	0
 7848 0378 3C       		.uleb128 0x3c
 7849 0379 34       		.uleb128 0x34
 7850 037a 00       		.byte	0
 7851 037b 03       		.uleb128 0x3
 7852 037c 0E       		.uleb128 0xe
 7853 037d 3A       		.uleb128 0x3a
 7854 037e 0B       		.uleb128 0xb
 7855 037f 3B       		.uleb128 0x3b
 7856 0380 0B       		.uleb128 0xb
 7857 0381 39       		.uleb128 0x39
 7858 0382 0B       		.uleb128 0xb
 7859 0383 49       		.uleb128 0x49
 7860 0384 13       		.uleb128 0x13
 7861 0385 02       		.uleb128 0x2
 7862 0386 0A       		.uleb128 0xa
 7863 0387 00       		.byte	0
 7864 0388 00       		.byte	0
 7865 0389 3D       		.uleb128 0x3d
 7866 038a 2E       		.uleb128 0x2e
 7867 038b 01       		.byte	0x1
 7868 038c 3F       		.uleb128 0x3f
 7869 038d 0C       		.uleb128 0xc
 7870 038e 03       		.uleb128 0x3
 7871 038f 0E       		.uleb128 0xe
 7872 0390 3A       		.uleb128 0x3a
 7873 0391 0B       		.uleb128 0xb
 7874 0392 3B       		.uleb128 0x3b
 7875 0393 0B       		.uleb128 0xb
 7876 0394 39       		.uleb128 0x39
 7877 0395 0B       		.uleb128 0xb
 7878 0396 11       		.uleb128 0x11
 7879 0397 01       		.uleb128 0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 155


 7880 0398 12       		.uleb128 0x12
 7881 0399 01       		.uleb128 0x1
 7882 039a 40       		.uleb128 0x40
 7883 039b 06       		.uleb128 0x6
 7884 039c 9742     		.uleb128 0x2117
 7885 039e 0C       		.uleb128 0xc
 7886 039f 01       		.uleb128 0x1
 7887 03a0 13       		.uleb128 0x13
 7888 03a1 00       		.byte	0
 7889 03a2 00       		.byte	0
 7890 03a3 3E       		.uleb128 0x3e
 7891 03a4 1D       		.uleb128 0x1d
 7892 03a5 01       		.byte	0x1
 7893 03a6 31       		.uleb128 0x31
 7894 03a7 13       		.uleb128 0x13
 7895 03a8 55       		.uleb128 0x55
 7896 03a9 06       		.uleb128 0x6
 7897 03aa 58       		.uleb128 0x58
 7898 03ab 0B       		.uleb128 0xb
 7899 03ac 59       		.uleb128 0x59
 7900 03ad 0B       		.uleb128 0xb
 7901 03ae 57       		.uleb128 0x57
 7902 03af 0B       		.uleb128 0xb
 7903 03b0 01       		.uleb128 0x1
 7904 03b1 13       		.uleb128 0x13
 7905 03b2 00       		.byte	0
 7906 03b3 00       		.byte	0
 7907 03b4 3F       		.uleb128 0x3f
 7908 03b5 05       		.uleb128 0x5
 7909 03b6 00       		.byte	0
 7910 03b7 31       		.uleb128 0x31
 7911 03b8 13       		.uleb128 0x13
 7912 03b9 00       		.byte	0
 7913 03ba 00       		.byte	0
 7914 03bb 40       		.uleb128 0x40
 7915 03bc 0B       		.uleb128 0xb
 7916 03bd 01       		.byte	0x1
 7917 03be 31       		.uleb128 0x31
 7918 03bf 13       		.uleb128 0x13
 7919 03c0 55       		.uleb128 0x55
 7920 03c1 06       		.uleb128 0x6
 7921 03c2 00       		.byte	0
 7922 03c3 00       		.byte	0
 7923 03c4 41       		.uleb128 0x41
 7924 03c5 34       		.uleb128 0x34
 7925 03c6 00       		.byte	0
 7926 03c7 31       		.uleb128 0x31
 7927 03c8 13       		.uleb128 0x13
 7928 03c9 02       		.uleb128 0x2
 7929 03ca 06       		.uleb128 0x6
 7930 03cb B742     		.uleb128 0x2137
 7931 03cd 06       		.uleb128 0x6
 7932 03ce 00       		.byte	0
 7933 03cf 00       		.byte	0
 7934 03d0 42       		.uleb128 0x42
 7935 03d1 1D       		.uleb128 0x1d
 7936 03d2 01       		.byte	0x1
ARM GAS  /tmp/ccPfsSwR.s 			page 156


 7937 03d3 31       		.uleb128 0x31
 7938 03d4 13       		.uleb128 0x13
 7939 03d5 52       		.uleb128 0x52
 7940 03d6 01       		.uleb128 0x1
 7941 03d7 B842     		.uleb128 0x2138
 7942 03d9 0B       		.uleb128 0xb
 7943 03da 11       		.uleb128 0x11
 7944 03db 01       		.uleb128 0x1
 7945 03dc 12       		.uleb128 0x12
 7946 03dd 01       		.uleb128 0x1
 7947 03de 58       		.uleb128 0x58
 7948 03df 0B       		.uleb128 0xb
 7949 03e0 59       		.uleb128 0x59
 7950 03e1 0B       		.uleb128 0xb
 7951 03e2 57       		.uleb128 0x57
 7952 03e3 0B       		.uleb128 0xb
 7953 03e4 01       		.uleb128 0x1
 7954 03e5 13       		.uleb128 0x13
 7955 03e6 00       		.byte	0
 7956 03e7 00       		.byte	0
 7957 03e8 43       		.uleb128 0x43
 7958 03e9 05       		.uleb128 0x5
 7959 03ea 00       		.byte	0
 7960 03eb 31       		.uleb128 0x31
 7961 03ec 13       		.uleb128 0x13
 7962 03ed 02       		.uleb128 0x2
 7963 03ee 0A       		.uleb128 0xa
 7964 03ef 00       		.byte	0
 7965 03f0 00       		.byte	0
 7966 03f1 44       		.uleb128 0x44
 7967 03f2 05       		.uleb128 0x5
 7968 03f3 00       		.byte	0
 7969 03f4 31       		.uleb128 0x31
 7970 03f5 13       		.uleb128 0x13
 7971 03f6 02       		.uleb128 0x2
 7972 03f7 06       		.uleb128 0x6
 7973 03f8 B742     		.uleb128 0x2137
 7974 03fa 06       		.uleb128 0x6
 7975 03fb 00       		.byte	0
 7976 03fc 00       		.byte	0
 7977 03fd 45       		.uleb128 0x45
 7978 03fe 1D       		.uleb128 0x1d
 7979 03ff 01       		.byte	0x1
 7980 0400 31       		.uleb128 0x31
 7981 0401 13       		.uleb128 0x13
 7982 0402 52       		.uleb128 0x52
 7983 0403 01       		.uleb128 0x1
 7984 0404 B842     		.uleb128 0x2138
 7985 0406 0B       		.uleb128 0xb
 7986 0407 55       		.uleb128 0x55
 7987 0408 06       		.uleb128 0x6
 7988 0409 58       		.uleb128 0x58
 7989 040a 0B       		.uleb128 0xb
 7990 040b 59       		.uleb128 0x59
 7991 040c 0B       		.uleb128 0xb
 7992 040d 57       		.uleb128 0x57
 7993 040e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccPfsSwR.s 			page 157


 7994 040f 01       		.uleb128 0x1
 7995 0410 13       		.uleb128 0x13
 7996 0411 00       		.byte	0
 7997 0412 00       		.byte	0
 7998 0413 46       		.uleb128 0x46
 7999 0414 34       		.uleb128 0x34
 8000 0415 00       		.byte	0
 8001 0416 03       		.uleb128 0x3
 8002 0417 08       		.uleb128 0x8
 8003 0418 3A       		.uleb128 0x3a
 8004 0419 0B       		.uleb128 0xb
 8005 041a 3B       		.uleb128 0x3b
 8006 041b 0B       		.uleb128 0xb
 8007 041c 39       		.uleb128 0x39
 8008 041d 0B       		.uleb128 0xb
 8009 041e 49       		.uleb128 0x49
 8010 041f 13       		.uleb128 0x13
 8011 0420 00       		.byte	0
 8012 0421 00       		.byte	0
 8013 0422 47       		.uleb128 0x47
 8014 0423 1D       		.uleb128 0x1d
 8015 0424 01       		.byte	0x1
 8016 0425 31       		.uleb128 0x31
 8017 0426 13       		.uleb128 0x13
 8018 0427 52       		.uleb128 0x52
 8019 0428 01       		.uleb128 0x1
 8020 0429 B842     		.uleb128 0x2138
 8021 042b 0B       		.uleb128 0xb
 8022 042c 11       		.uleb128 0x11
 8023 042d 01       		.uleb128 0x1
 8024 042e 12       		.uleb128 0x12
 8025 042f 01       		.uleb128 0x1
 8026 0430 58       		.uleb128 0x58
 8027 0431 0B       		.uleb128 0xb
 8028 0432 59       		.uleb128 0x59
 8029 0433 0B       		.uleb128 0xb
 8030 0434 57       		.uleb128 0x57
 8031 0435 0B       		.uleb128 0xb
 8032 0436 00       		.byte	0
 8033 0437 00       		.byte	0
 8034 0438 48       		.uleb128 0x48
 8035 0439 2E       		.uleb128 0x2e
 8036 043a 01       		.byte	0x1
 8037 043b 3F       		.uleb128 0x3f
 8038 043c 0C       		.uleb128 0xc
 8039 043d 03       		.uleb128 0x3
 8040 043e 0E       		.uleb128 0xe
 8041 043f 3A       		.uleb128 0x3a
 8042 0440 0B       		.uleb128 0xb
 8043 0441 3B       		.uleb128 0x3b
 8044 0442 0B       		.uleb128 0xb
 8045 0443 39       		.uleb128 0x39
 8046 0444 0B       		.uleb128 0xb
 8047 0445 27       		.uleb128 0x27
 8048 0446 0C       		.uleb128 0xc
 8049 0447 20       		.uleb128 0x20
 8050 0448 0B       		.uleb128 0xb
ARM GAS  /tmp/ccPfsSwR.s 			page 158


 8051 0449 01       		.uleb128 0x1
 8052 044a 13       		.uleb128 0x13
 8053 044b 00       		.byte	0
 8054 044c 00       		.byte	0
 8055 044d 49       		.uleb128 0x49
 8056 044e 05       		.uleb128 0x5
 8057 044f 00       		.byte	0
 8058 0450 03       		.uleb128 0x3
 8059 0451 08       		.uleb128 0x8
 8060 0452 3A       		.uleb128 0x3a
 8061 0453 0B       		.uleb128 0xb
 8062 0454 3B       		.uleb128 0x3b
 8063 0455 0B       		.uleb128 0xb
 8064 0456 39       		.uleb128 0x39
 8065 0457 0B       		.uleb128 0xb
 8066 0458 49       		.uleb128 0x49
 8067 0459 13       		.uleb128 0x13
 8068 045a 00       		.byte	0
 8069 045b 00       		.byte	0
 8070 045c 4A       		.uleb128 0x4a
 8071 045d 05       		.uleb128 0x5
 8072 045e 00       		.byte	0
 8073 045f 03       		.uleb128 0x3
 8074 0460 08       		.uleb128 0x8
 8075 0461 3A       		.uleb128 0x3a
 8076 0462 0B       		.uleb128 0xb
 8077 0463 3B       		.uleb128 0x3b
 8078 0464 0B       		.uleb128 0xb
 8079 0465 39       		.uleb128 0x39
 8080 0466 0B       		.uleb128 0xb
 8081 0467 49       		.uleb128 0x49
 8082 0468 13       		.uleb128 0x13
 8083 0469 02       		.uleb128 0x2
 8084 046a 0A       		.uleb128 0xa
 8085 046b 00       		.byte	0
 8086 046c 00       		.byte	0
 8087 046d 4B       		.uleb128 0x4b
 8088 046e 05       		.uleb128 0x5
 8089 046f 00       		.byte	0
 8090 0470 03       		.uleb128 0x3
 8091 0471 0E       		.uleb128 0xe
 8092 0472 3A       		.uleb128 0x3a
 8093 0473 0B       		.uleb128 0xb
 8094 0474 3B       		.uleb128 0x3b
 8095 0475 0B       		.uleb128 0xb
 8096 0476 39       		.uleb128 0x39
 8097 0477 0B       		.uleb128 0xb
 8098 0478 49       		.uleb128 0x49
 8099 0479 13       		.uleb128 0x13
 8100 047a 00       		.byte	0
 8101 047b 00       		.byte	0
 8102 047c 4C       		.uleb128 0x4c
 8103 047d 2E       		.uleb128 0x2e
 8104 047e 01       		.byte	0x1
 8105 047f 3F       		.uleb128 0x3f
 8106 0480 0C       		.uleb128 0xc
 8107 0481 03       		.uleb128 0x3
ARM GAS  /tmp/ccPfsSwR.s 			page 159


 8108 0482 0E       		.uleb128 0xe
 8109 0483 3A       		.uleb128 0x3a
 8110 0484 0B       		.uleb128 0xb
 8111 0485 3B       		.uleb128 0x3b
 8112 0486 0B       		.uleb128 0xb
 8113 0487 39       		.uleb128 0x39
 8114 0488 0B       		.uleb128 0xb
 8115 0489 27       		.uleb128 0x27
 8116 048a 0C       		.uleb128 0xc
 8117 048b 49       		.uleb128 0x49
 8118 048c 13       		.uleb128 0x13
 8119 048d 20       		.uleb128 0x20
 8120 048e 0B       		.uleb128 0xb
 8121 048f 01       		.uleb128 0x1
 8122 0490 13       		.uleb128 0x13
 8123 0491 00       		.byte	0
 8124 0492 00       		.byte	0
 8125 0493 4D       		.uleb128 0x4d
 8126 0494 0B       		.uleb128 0xb
 8127 0495 01       		.byte	0x1
 8128 0496 00       		.byte	0
 8129 0497 00       		.byte	0
 8130 0498 4E       		.uleb128 0x4e
 8131 0499 2E       		.uleb128 0x2e
 8132 049a 01       		.byte	0x1
 8133 049b 31       		.uleb128 0x31
 8134 049c 13       		.uleb128 0x13
 8135 049d 11       		.uleb128 0x11
 8136 049e 01       		.uleb128 0x1
 8137 049f 12       		.uleb128 0x12
 8138 04a0 01       		.uleb128 0x1
 8139 04a1 40       		.uleb128 0x40
 8140 04a2 06       		.uleb128 0x6
 8141 04a3 9742     		.uleb128 0x2117
 8142 04a5 0C       		.uleb128 0xc
 8143 04a6 01       		.uleb128 0x1
 8144 04a7 13       		.uleb128 0x13
 8145 04a8 00       		.byte	0
 8146 04a9 00       		.byte	0
 8147 04aa 4F       		.uleb128 0x4f
 8148 04ab 2E       		.uleb128 0x2e
 8149 04ac 01       		.byte	0x1
 8150 04ad 31       		.uleb128 0x31
 8151 04ae 13       		.uleb128 0x13
 8152 04af 11       		.uleb128 0x11
 8153 04b0 01       		.uleb128 0x1
 8154 04b1 12       		.uleb128 0x12
 8155 04b2 01       		.uleb128 0x1
 8156 04b3 40       		.uleb128 0x40
 8157 04b4 0A       		.uleb128 0xa
 8158 04b5 9742     		.uleb128 0x2117
 8159 04b7 0C       		.uleb128 0xc
 8160 04b8 01       		.uleb128 0x1
 8161 04b9 13       		.uleb128 0x13
 8162 04ba 00       		.byte	0
 8163 04bb 00       		.byte	0
 8164 04bc 50       		.uleb128 0x50
ARM GAS  /tmp/ccPfsSwR.s 			page 160


 8165 04bd 2E       		.uleb128 0x2e
 8166 04be 00       		.byte	0
 8167 04bf 3F       		.uleb128 0x3f
 8168 04c0 0C       		.uleb128 0xc
 8169 04c1 3C       		.uleb128 0x3c
 8170 04c2 0C       		.uleb128 0xc
 8171 04c3 8740     		.uleb128 0x2007
 8172 04c5 0E       		.uleb128 0xe
 8173 04c6 03       		.uleb128 0x3
 8174 04c7 0E       		.uleb128 0xe
 8175 04c8 3A       		.uleb128 0x3a
 8176 04c9 0B       		.uleb128 0xb
 8177 04ca 3B       		.uleb128 0x3b
 8178 04cb 0B       		.uleb128 0xb
 8179 04cc 39       		.uleb128 0x39
 8180 04cd 0B       		.uleb128 0xb
 8181 04ce 00       		.byte	0
 8182 04cf 00       		.byte	0
 8183 04d0 51       		.uleb128 0x51
 8184 04d1 2E       		.uleb128 0x2e
 8185 04d2 00       		.byte	0
 8186 04d3 3F       		.uleb128 0x3f
 8187 04d4 0C       		.uleb128 0xc
 8188 04d5 3C       		.uleb128 0x3c
 8189 04d6 0C       		.uleb128 0xc
 8190 04d7 8740     		.uleb128 0x2007
 8191 04d9 08       		.uleb128 0x8
 8192 04da 03       		.uleb128 0x3
 8193 04db 08       		.uleb128 0x8
 8194 04dc 3A       		.uleb128 0x3a
 8195 04dd 0B       		.uleb128 0xb
 8196 04de 3B       		.uleb128 0x3b
 8197 04df 0B       		.uleb128 0xb
 8198 04e0 39       		.uleb128 0x39
 8199 04e1 0B       		.uleb128 0xb
 8200 04e2 00       		.byte	0
 8201 04e3 00       		.byte	0
 8202 04e4 52       		.uleb128 0x52
 8203 04e5 2E       		.uleb128 0x2e
 8204 04e6 00       		.byte	0
 8205 04e7 3F       		.uleb128 0x3f
 8206 04e8 0C       		.uleb128 0xc
 8207 04e9 3C       		.uleb128 0x3c
 8208 04ea 0C       		.uleb128 0xc
 8209 04eb 8740     		.uleb128 0x2007
 8210 04ed 0E       		.uleb128 0xe
 8211 04ee 03       		.uleb128 0x3
 8212 04ef 0E       		.uleb128 0xe
 8213 04f0 3A       		.uleb128 0x3a
 8214 04f1 0B       		.uleb128 0xb
 8215 04f2 3B       		.uleb128 0x3b
 8216 04f3 0B       		.uleb128 0xb
 8217 04f4 00       		.byte	0
 8218 04f5 00       		.byte	0
 8219 04f6 53       		.uleb128 0x53
 8220 04f7 2E       		.uleb128 0x2e
 8221 04f8 00       		.byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 161


 8222 04f9 3F       		.uleb128 0x3f
 8223 04fa 0C       		.uleb128 0xc
 8224 04fb 3C       		.uleb128 0x3c
 8225 04fc 0C       		.uleb128 0xc
 8226 04fd 8740     		.uleb128 0x2007
 8227 04ff 0E       		.uleb128 0xe
 8228 0500 03       		.uleb128 0x3
 8229 0501 0E       		.uleb128 0xe
 8230 0502 3A       		.uleb128 0x3a
 8231 0503 0B       		.uleb128 0xb
 8232 0504 3B       		.uleb128 0x3b
 8233 0505 05       		.uleb128 0x5
 8234 0506 39       		.uleb128 0x39
 8235 0507 0B       		.uleb128 0xb
 8236 0508 00       		.byte	0
 8237 0509 00       		.byte	0
 8238 050a 00       		.byte	0
 8239              		.section	.debug_loc,"",%progbits
 8240              	.Ldebug_loc0:
 8241              	.LVUS70:
 8242 0000 00       		.uleb128 0
 8243 0001 00       		.uleb128 .LVU817
 8244 0002 00       		.uleb128 .LVU817
 8245 0003 00       		.uleb128 0
 8246              	.LLST70:
 8247 0004 00000000 		.4byte	.LVL211
 8248 0008 06000000 		.4byte	.LVL212
 8249 000c 0100     		.2byte	0x1
 8250 000e 50       		.byte	0x50
 8251 000f 06000000 		.4byte	.LVL212
 8252 0013 0C000000 		.4byte	.LFE14
 8253 0017 0400     		.2byte	0x4
 8254 0019 F3       		.byte	0xf3
 8255 001a 01       		.uleb128 0x1
 8256 001b 50       		.byte	0x50
 8257 001c 9F       		.byte	0x9f
 8258 001d 00000000 		.4byte	0
 8259 0021 00000000 		.4byte	0
 8260              	.LLST69:
 8261 0025 00000000 		.4byte	.LFB13
 8262 0029 06000000 		.4byte	.LCFI51
 8263 002d 0200     		.2byte	0x2
 8264 002f 7D       		.byte	0x7d
 8265 0030 00       		.sleb128 0
 8266 0031 06000000 		.4byte	.LCFI51
 8267 0035 14000000 		.4byte	.LCFI52
 8268 0039 0200     		.2byte	0x2
 8269 003b 7D       		.byte	0x7d
 8270 003c 04       		.sleb128 4
 8271 003d 14000000 		.4byte	.LCFI52
 8272 0041 20000000 		.4byte	.LFE13
 8273 0045 0200     		.2byte	0x2
 8274 0047 7D       		.byte	0x7d
 8275 0048 00       		.sleb128 0
 8276 0049 00000000 		.4byte	0
 8277 004d 00000000 		.4byte	0
 8278              	.LLST66:
ARM GAS  /tmp/ccPfsSwR.s 			page 162


 8279 0051 00000000 		.4byte	.LFB12
 8280 0055 10000000 		.4byte	.LCFI44
 8281 0059 0200     		.2byte	0x2
 8282 005b 7D       		.byte	0x7d
 8283 005c 00       		.sleb128 0
 8284 005d 10000000 		.4byte	.LCFI44
 8285 0061 12000000 		.4byte	.LCFI45
 8286 0065 0200     		.2byte	0x2
 8287 0067 7D       		.byte	0x7d
 8288 0068 04       		.sleb128 4
 8289 0069 12000000 		.4byte	.LCFI45
 8290 006d 7C000000 		.4byte	.LCFI46
 8291 0071 0200     		.2byte	0x2
 8292 0073 7D       		.byte	0x7d
 8293 0074 10       		.sleb128 16
 8294 0075 7C000000 		.4byte	.LCFI46
 8295 0079 80000000 		.4byte	.LCFI47
 8296 007d 0200     		.2byte	0x2
 8297 007f 7D       		.byte	0x7d
 8298 0080 04       		.sleb128 4
 8299 0081 80000000 		.4byte	.LCFI47
 8300 0085 82000000 		.4byte	.LCFI48
 8301 0089 0200     		.2byte	0x2
 8302 008b 7D       		.byte	0x7d
 8303 008c 00       		.sleb128 0
 8304 008d 82000000 		.4byte	.LCFI48
 8305 0091 8C000000 		.4byte	.LCFI49
 8306 0095 0200     		.2byte	0x2
 8307 0097 7D       		.byte	0x7d
 8308 0098 10       		.sleb128 16
 8309 0099 8C000000 		.4byte	.LCFI49
 8310 009d 90000000 		.4byte	.LCFI50
 8311 00a1 0200     		.2byte	0x2
 8312 00a3 7D       		.byte	0x7d
 8313 00a4 04       		.sleb128 4
 8314 00a5 90000000 		.4byte	.LCFI50
 8315 00a9 9C000000 		.4byte	.LFE12
 8316 00ad 0200     		.2byte	0x2
 8317 00af 7D       		.byte	0x7d
 8318 00b0 00       		.sleb128 0
 8319 00b1 00000000 		.4byte	0
 8320 00b5 00000000 		.4byte	0
 8321              	.LVUS67:
 8322 00b9 00       		.uleb128 0
 8323 00ba 00       		.uleb128 .LVU774
 8324 00bb 00       		.uleb128 .LVU774
 8325 00bc 00       		.uleb128 0
 8326              	.LLST67:
 8327 00bd 00000000 		.4byte	.LVL206
 8328 00c1 3C000000 		.4byte	.LVL207
 8329 00c5 0100     		.2byte	0x1
 8330 00c7 50       		.byte	0x50
 8331 00c8 3C000000 		.4byte	.LVL207
 8332 00cc 9C000000 		.4byte	.LFE12
 8333 00d0 0100     		.2byte	0x1
 8334 00d2 53       		.byte	0x53
 8335 00d3 00000000 		.4byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 163


 8336 00d7 00000000 		.4byte	0
 8337              	.LVUS68:
 8338 00db 00       		.uleb128 0
 8339 00dc 00       		.uleb128 .LVU788
 8340 00dd 00       		.uleb128 .LVU788
 8341 00de 00       		.uleb128 .LVU796
 8342 00df 00       		.uleb128 .LVU796
 8343 00e0 00       		.uleb128 0
 8344              	.LLST68:
 8345 00e1 00000000 		.4byte	.LVL206
 8346 00e5 66000000 		.4byte	.LVL208
 8347 00e9 0200     		.2byte	0x2
 8348 00eb 90       		.byte	0x90
 8349 00ec 42       		.uleb128 0x42
 8350 00ed 66000000 		.4byte	.LVL208
 8351 00f1 82000000 		.4byte	.LVL209
 8352 00f5 0200     		.2byte	0x2
 8353 00f7 73       		.byte	0x73
 8354 00f8 30       		.sleb128 48
 8355 00f9 82000000 		.4byte	.LVL209
 8356 00fd 9C000000 		.4byte	.LFE12
 8357 0101 0200     		.2byte	0x2
 8358 0103 90       		.byte	0x90
 8359 0104 42       		.uleb128 0x42
 8360 0105 00000000 		.4byte	0
 8361 0109 00000000 		.4byte	0
 8362              	.LLST56:
 8363 010d 00000000 		.4byte	.LFB11
 8364 0111 08000000 		.4byte	.LCFI38
 8365 0115 0200     		.2byte	0x2
 8366 0117 7D       		.byte	0x7d
 8367 0118 00       		.sleb128 0
 8368 0119 08000000 		.4byte	.LCFI38
 8369 011d 10000000 		.4byte	.LCFI39
 8370 0121 0200     		.2byte	0x2
 8371 0123 7D       		.byte	0x7d
 8372 0124 1C       		.sleb128 28
 8373 0125 10000000 		.4byte	.LCFI39
 8374 0129 16000000 		.4byte	.LCFI40
 8375 012d 0200     		.2byte	0x2
 8376 012f 7D       		.byte	0x7d
 8377 0130 24       		.sleb128 36
 8378 0131 16000000 		.4byte	.LCFI40
 8379 0135 62010000 		.4byte	.LCFI41
 8380 0139 0300     		.2byte	0x3
 8381 013b 7D       		.byte	0x7d
 8382 013c C800     		.sleb128 72
 8383 013e 62010000 		.4byte	.LCFI41
 8384 0142 66010000 		.4byte	.LCFI42
 8385 0146 0200     		.2byte	0x2
 8386 0148 7D       		.byte	0x7d
 8387 0149 24       		.sleb128 36
 8388 014a 66010000 		.4byte	.LCFI42
 8389 014e 6A010000 		.4byte	.LCFI43
 8390 0152 0200     		.2byte	0x2
 8391 0154 7D       		.byte	0x7d
 8392 0155 1C       		.sleb128 28
ARM GAS  /tmp/ccPfsSwR.s 			page 164


 8393 0156 6A010000 		.4byte	.LCFI43
 8394 015a 8C010000 		.4byte	.LFE11
 8395 015e 0300     		.2byte	0x3
 8396 0160 7D       		.byte	0x7d
 8397 0161 C800     		.sleb128 72
 8398 0163 00000000 		.4byte	0
 8399 0167 00000000 		.4byte	0
 8400              	.LVUS57:
 8401 016b 00       		.uleb128 0
 8402 016c 00       		.uleb128 .LVU661
 8403 016d 00       		.uleb128 .LVU661
 8404 016e 00       		.uleb128 .LVU739
 8405 016f 00       		.uleb128 .LVU739
 8406 0170 00       		.uleb128 .LVU740
 8407 0171 00       		.uleb128 .LVU740
 8408 0172 00       		.uleb128 0
 8409              	.LLST57:
 8410 0173 00000000 		.4byte	.LVL174
 8411 0177 27000000 		.4byte	.LVL176-1
 8412 017b 0200     		.2byte	0x2
 8413 017d 90       		.byte	0x90
 8414 017e 40       		.uleb128 0x40
 8415 017f 27000000 		.4byte	.LVL176-1
 8416 0183 66010000 		.4byte	.LVL204
 8417 0187 0200     		.2byte	0x2
 8418 0189 90       		.byte	0x90
 8419 018a 50       		.uleb128 0x50
 8420 018b 66010000 		.4byte	.LVL204
 8421 018f 6A010000 		.4byte	.LVL205
 8422 0193 0600     		.2byte	0x6
 8423 0195 F3       		.byte	0xf3
 8424 0196 03       		.uleb128 0x3
 8425 0197 F5       		.byte	0xf5
 8426 0198 40       		.uleb128 0x40
 8427 0199 29       		.uleb128 0x29
 8428 019a 9F       		.byte	0x9f
 8429 019b 6A010000 		.4byte	.LVL205
 8430 019f 8C010000 		.4byte	.LFE11
 8431 01a3 0200     		.2byte	0x2
 8432 01a5 90       		.byte	0x90
 8433 01a6 40       		.uleb128 0x40
 8434 01a7 00000000 		.4byte	0
 8435 01ab 00000000 		.4byte	0
 8436              	.LVUS58:
 8437 01af 00       		.uleb128 .LVU658
 8438 01b0 00       		.uleb128 .LVU740
 8439              	.LLST58:
 8440 01b1 22000000 		.4byte	.LVL175
 8441 01b5 6A010000 		.4byte	.LVL205
 8442 01b9 0200     		.2byte	0x2
 8443 01bb 90       		.byte	0x90
 8444 01bc 51       		.uleb128 0x51
 8445 01bd 00000000 		.4byte	0
 8446 01c1 00000000 		.4byte	0
 8447              	.LVUS59:
 8448 01c5 02       		.uleb128 .LVU663
 8449 01c6 00       		.uleb128 .LVU667
ARM GAS  /tmp/ccPfsSwR.s 			page 165


 8450 01c7 00       		.uleb128 .LVU667
 8451 01c8 00       		.uleb128 .LVU672
 8452 01c9 00       		.uleb128 .LVU672
 8453 01ca 02       		.uleb128 .LVU682
 8454 01cb 02       		.uleb128 .LVU682
 8455 01cc 00       		.uleb128 .LVU684
 8456              	.LLST59:
 8457 01cd 28000000 		.4byte	.LVL176
 8458 01d1 36000000 		.4byte	.LVL177
 8459 01d5 0200     		.2byte	0x2
 8460 01d7 30       		.byte	0x30
 8461 01d8 9F       		.byte	0x9f
 8462 01d9 36000000 		.4byte	.LVL177
 8463 01dd 3C000000 		.4byte	.LVL179
 8464 01e1 0100     		.2byte	0x1
 8465 01e3 55       		.byte	0x55
 8466 01e4 3C000000 		.4byte	.LVL179
 8467 01e8 B6000000 		.4byte	.LVL184
 8468 01ec 0300     		.2byte	0x3
 8469 01ee 75       		.byte	0x75
 8470 01ef 7F       		.sleb128 -1
 8471 01f0 9F       		.byte	0x9f
 8472 01f1 B6000000 		.4byte	.LVL184
 8473 01f5 BC000000 		.4byte	.LVL185
 8474 01f9 0100     		.2byte	0x1
 8475 01fb 55       		.byte	0x55
 8476 01fc 00000000 		.4byte	0
 8477 0200 00000000 		.4byte	0
 8478              	.LVUS60:
 8479 0204 00       		.uleb128 .LVU670
 8480 0205 00       		.uleb128 .LVU684
 8481              	.LLST60:
 8482 0206 3A000000 		.4byte	.LVL178
 8483 020a BC000000 		.4byte	.LVL185
 8484 020e 0100     		.2byte	0x1
 8485 0210 54       		.byte	0x54
 8486 0211 00000000 		.4byte	0
 8487 0215 00000000 		.4byte	0
 8488              	.LVUS61:
 8489 0219 00       		.uleb128 .LVU684
 8490 021a 00       		.uleb128 .LVU689
 8491 021b 00       		.uleb128 .LVU689
 8492 021c 00       		.uleb128 .LVU694
 8493              	.LLST61:
 8494 021d BC000000 		.4byte	.LVL185
 8495 0221 C8000000 		.4byte	.LVL186
 8496 0225 0200     		.2byte	0x2
 8497 0227 30       		.byte	0x30
 8498 0228 9F       		.byte	0x9f
 8499 0229 C8000000 		.4byte	.LVL186
 8500 022d DC000000 		.4byte	.LVL189
 8501 0231 0100     		.2byte	0x1
 8502 0233 54       		.byte	0x54
 8503 0234 00000000 		.4byte	0
 8504 0238 00000000 		.4byte	0
 8505              	.LVUS62:
 8506 023c 00       		.uleb128 .LVU694
ARM GAS  /tmp/ccPfsSwR.s 			page 166


 8507 023d 00       		.uleb128 .LVU699
 8508 023e 00       		.uleb128 .LVU699
 8509 023f 00       		.uleb128 .LVU712
 8510              	.LLST62:
 8511 0240 DC000000 		.4byte	.LVL189
 8512 0244 EC000000 		.4byte	.LVL190
 8513 0248 0200     		.2byte	0x2
 8514 024a 30       		.byte	0x30
 8515 024b 9F       		.byte	0x9f
 8516 024c EC000000 		.4byte	.LVL190
 8517 0250 12010000 		.4byte	.LVL196
 8518 0254 0100     		.2byte	0x1
 8519 0256 58       		.byte	0x58
 8520 0257 00000000 		.4byte	0
 8521 025b 00000000 		.4byte	0
 8522              	.LVUS63:
 8523 025f 00       		.uleb128 .LVU699
 8524 0260 00       		.uleb128 .LVU702
 8525 0261 00       		.uleb128 .LVU702
 8526 0262 00       		.uleb128 .LVU704
 8527 0263 00       		.uleb128 .LVU704
 8528 0264 01       		.uleb128 .LVU706
 8529 0265 01       		.uleb128 .LVU706
 8530 0266 00       		.uleb128 .LVU708
 8531              	.LLST63:
 8532 0267 EC000000 		.4byte	.LVL190
 8533 026b F6000000 		.4byte	.LVL191
 8534 026f 0200     		.2byte	0x2
 8535 0271 30       		.byte	0x30
 8536 0272 9F       		.byte	0x9f
 8537 0273 F6000000 		.4byte	.LVL191
 8538 0277 FA000000 		.4byte	.LVL192
 8539 027b 0100     		.2byte	0x1
 8540 027d 54       		.byte	0x54
 8541 027e FA000000 		.4byte	.LVL192
 8542 0282 FE000000 		.4byte	.LVL193
 8543 0286 0300     		.2byte	0x3
 8544 0288 74       		.byte	0x74
 8545 0289 7F       		.sleb128 -1
 8546 028a 9F       		.byte	0x9f
 8547 028b FE000000 		.4byte	.LVL193
 8548 028f 06010000 		.4byte	.LVL194
 8549 0293 0100     		.2byte	0x1
 8550 0295 54       		.byte	0x54
 8551 0296 00000000 		.4byte	0
 8552 029a 00000000 		.4byte	0
 8553              	.LVUS64:
 8554 029e 00       		.uleb128 .LVU712
 8555 029f 00       		.uleb128 .LVU717
 8556 02a0 00       		.uleb128 .LVU717
 8557 02a1 00       		.uleb128 .LVU721
 8558 02a2 00       		.uleb128 .LVU721
 8559 02a3 04       		.uleb128 .LVU735
 8560 02a4 04       		.uleb128 .LVU735
 8561 02a5 00       		.uleb128 .LVU737
 8562              	.LLST64:
 8563 02a6 12010000 		.4byte	.LVL196
ARM GAS  /tmp/ccPfsSwR.s 			page 167


 8564 02aa 20010000 		.4byte	.LVL197
 8565 02ae 0200     		.2byte	0x2
 8566 02b0 30       		.byte	0x30
 8567 02b1 9F       		.byte	0x9f
 8568 02b2 20010000 		.4byte	.LVL197
 8569 02b6 2A010000 		.4byte	.LVL199
 8570 02ba 0100     		.2byte	0x1
 8571 02bc 56       		.byte	0x56
 8572 02bd 2A010000 		.4byte	.LVL199
 8573 02c1 5E010000 		.4byte	.LVL202
 8574 02c5 0300     		.2byte	0x3
 8575 02c7 76       		.byte	0x76
 8576 02c8 7F       		.sleb128 -1
 8577 02c9 9F       		.byte	0x9f
 8578 02ca 5E010000 		.4byte	.LVL202
 8579 02ce 60010000 		.4byte	.LVL203
 8580 02d2 0100     		.2byte	0x1
 8581 02d4 56       		.byte	0x56
 8582 02d5 00000000 		.4byte	0
 8583 02d9 00000000 		.4byte	0
 8584              	.LVUS65:
 8585 02dd 00       		.uleb128 .LVU719
 8586 02de 00       		.uleb128 .LVU737
 8587              	.LLST65:
 8588 02df 24010000 		.4byte	.LVL198
 8589 02e3 60010000 		.4byte	.LVL203
 8590 02e7 0100     		.2byte	0x1
 8591 02e9 54       		.byte	0x54
 8592 02ea 00000000 		.4byte	0
 8593 02ee 00000000 		.4byte	0
 8594              	.LLST42:
 8595 02f2 00000000 		.4byte	.LFB10
 8596 02f6 04000000 		.4byte	.LCFI33
 8597 02fa 0200     		.2byte	0x2
 8598 02fc 7D       		.byte	0x7d
 8599 02fd 00       		.sleb128 0
 8600 02fe 04000000 		.4byte	.LCFI33
 8601 0302 0C000000 		.4byte	.LCFI34
 8602 0306 0200     		.2byte	0x2
 8603 0308 7D       		.byte	0x7d
 8604 0309 24       		.sleb128 36
 8605 030a 0C000000 		.4byte	.LCFI34
 8606 030e 10000000 		.4byte	.LCFI35
 8607 0312 0200     		.2byte	0x2
 8608 0314 7D       		.byte	0x7d
 8609 0315 34       		.sleb128 52
 8610 0316 10000000 		.4byte	.LCFI35
 8611 031a 94030000 		.4byte	.LCFI36
 8612 031e 0300     		.2byte	0x3
 8613 0320 7D       		.byte	0x7d
 8614 0321 B801     		.sleb128 184
 8615 0323 94030000 		.4byte	.LCFI36
 8616 0327 98030000 		.4byte	.LCFI37
 8617 032b 0200     		.2byte	0x2
 8618 032d 7D       		.byte	0x7d
 8619 032e 34       		.sleb128 52
 8620 032f 98030000 		.4byte	.LCFI37
ARM GAS  /tmp/ccPfsSwR.s 			page 168


 8621 0333 A4030000 		.4byte	.LFE10
 8622 0337 0200     		.2byte	0x2
 8623 0339 7D       		.byte	0x7d
 8624 033a 24       		.sleb128 36
 8625 033b 00000000 		.4byte	0
 8626 033f 00000000 		.4byte	0
 8627              	.LVUS43:
 8628 0343 00       		.uleb128 0
 8629 0344 00       		.uleb128 .LVU513
 8630 0345 00       		.uleb128 .LVU513
 8631 0346 00       		.uleb128 .LVU647
 8632 0347 00       		.uleb128 .LVU647
 8633 0348 00       		.uleb128 0
 8634              	.LLST43:
 8635 0349 00000000 		.4byte	.LVL117
 8636 034d 30000000 		.4byte	.LVL120
 8637 0351 0100     		.2byte	0x1
 8638 0353 50       		.byte	0x50
 8639 0354 30000000 		.4byte	.LVL120
 8640 0358 92030000 		.4byte	.LVL172
 8641 035c 0100     		.2byte	0x1
 8642 035e 58       		.byte	0x58
 8643 035f 92030000 		.4byte	.LVL172
 8644 0363 A4030000 		.4byte	.LFE10
 8645 0367 0400     		.2byte	0x4
 8646 0369 F3       		.byte	0xf3
 8647 036a 01       		.uleb128 0x1
 8648 036b 50       		.byte	0x50
 8649 036c 9F       		.byte	0x9f
 8650 036d 00000000 		.4byte	0
 8651 0371 00000000 		.4byte	0
 8652              	.LVUS44:
 8653 0375 00       		.uleb128 .LVU502
 8654 0376 00       		.uleb128 .LVU649
 8655              	.LLST44:
 8656 0377 08000000 		.4byte	.LVL118
 8657 037b 9C030000 		.4byte	.LVL173
 8658 037f 0100     		.2byte	0x1
 8659 0381 55       		.byte	0x55
 8660 0382 00000000 		.4byte	0
 8661 0386 00000000 		.4byte	0
 8662              	.LVUS45:
 8663 038a 00       		.uleb128 .LVU507
 8664 038b 00       		.uleb128 .LVU649
 8665              	.LLST45:
 8666 038c 14000000 		.4byte	.LVL119
 8667 0390 9C030000 		.4byte	.LVL173
 8668 0394 0100     		.2byte	0x1
 8669 0396 56       		.byte	0x56
 8670 0397 00000000 		.4byte	0
 8671 039b 00000000 		.4byte	0
 8672              	.LVUS46:
 8673 039f 02       		.uleb128 .LVU509
 8674 03a0 00       		.uleb128 .LVU513
 8675 03a1 00       		.uleb128 .LVU513
 8676 03a2 00       		.uleb128 .LVU585
 8677 03a3 00       		.uleb128 .LVU585
ARM GAS  /tmp/ccPfsSwR.s 			page 169


 8678 03a4 01       		.uleb128 .LVU611
 8679 03a5 01       		.uleb128 .LVU611
 8680 03a6 00       		.uleb128 .LVU647
 8681              	.LLST46:
 8682 03a7 14000000 		.4byte	.LVL119
 8683 03ab 30000000 		.4byte	.LVL120
 8684 03af 0200     		.2byte	0x2
 8685 03b1 30       		.byte	0x30
 8686 03b2 9F       		.byte	0x9f
 8687 03b3 30000000 		.4byte	.LVL120
 8688 03b7 E4010000 		.4byte	.LVL146
 8689 03bb 0100     		.2byte	0x1
 8690 03bd 57       		.byte	0x57
 8691 03be E4010000 		.4byte	.LVL146
 8692 03c2 84020000 		.4byte	.LVL155
 8693 03c6 0300     		.2byte	0x3
 8694 03c8 77       		.byte	0x77
 8695 03c9 7F       		.sleb128 -1
 8696 03ca 9F       		.byte	0x9f
 8697 03cb 84020000 		.4byte	.LVL155
 8698 03cf 92030000 		.4byte	.LVL172
 8699 03d3 0100     		.2byte	0x1
 8700 03d5 57       		.byte	0x57
 8701 03d6 00000000 		.4byte	0
 8702 03da 00000000 		.4byte	0
 8703              	.LVUS47:
 8704 03de 00       		.uleb128 .LVU513
 8705 03df 00       		.uleb128 .LVU586
 8706 03e0 00       		.uleb128 .LVU586
 8707 03e1 00       		.uleb128 .LVU613
 8708 03e2 01       		.uleb128 .LVU614
 8709 03e3 00       		.uleb128 .LVU647
 8710              	.LLST47:
 8711 03e4 30000000 		.4byte	.LVL120
 8712 03e8 EA010000 		.4byte	.LVL147
 8713 03ec 0100     		.2byte	0x1
 8714 03ee 54       		.byte	0x54
 8715 03ef EA010000 		.4byte	.LVL147
 8716 03f3 88020000 		.4byte	.LVL156
 8717 03f7 0300     		.2byte	0x3
 8718 03f9 74       		.byte	0x74
 8719 03fa 40       		.sleb128 -64
 8720 03fb 9F       		.byte	0x9f
 8721 03fc 88020000 		.4byte	.LVL156
 8722 0400 92030000 		.4byte	.LVL172
 8723 0404 0100     		.2byte	0x1
 8724 0406 54       		.byte	0x54
 8725 0407 00000000 		.4byte	0
 8726 040b 00000000 		.4byte	0
 8727              	.LVUS48:
 8728 040f 00       		.uleb128 .LVU630
 8729 0410 00       		.uleb128 .LVU634
 8730              	.LLST48:
 8731 0411 5C030000 		.4byte	.LVL164
 8732 0415 68030000 		.4byte	.LVL165
 8733 0419 0200     		.2byte	0x2
 8734 041b 90       		.byte	0x90
ARM GAS  /tmp/ccPfsSwR.s 			page 170


 8735 041c 40       		.uleb128 0x40
 8736 041d 00000000 		.4byte	0
 8737 0421 00000000 		.4byte	0
 8738              	.LVUS49:
 8739 0425 00       		.uleb128 .LVU513
 8740 0426 00       		.uleb128 .LVU517
 8741 0427 01       		.uleb128 .LVU521
 8742 0428 00       		.uleb128 .LVU573
 8743 0429 00       		.uleb128 .LVU636
 8744 042a 00       		.uleb128 .LVU640
 8745 042b 00       		.uleb128 .LVU641
 8746 042c 00       		.uleb128 .LVU642
 8747 042d 00       		.uleb128 .LVU642
 8748 042e 00       		.uleb128 .LVU647
 8749              	.LLST49:
 8750 042f 30000000 		.4byte	.LVL120
 8751 0433 3C000000 		.4byte	.LVL122
 8752 0437 0200     		.2byte	0x2
 8753 0439 90       		.byte	0x90
 8754 043a 40       		.uleb128 0x40
 8755 043b 48000000 		.4byte	.LVL125
 8756 043f C6010000 		.4byte	.LVL141
 8757 0443 0200     		.2byte	0x2
 8758 0445 90       		.byte	0x90
 8759 0446 50       		.uleb128 0x50
 8760 0447 70030000 		.4byte	.LVL166
 8761 044b 7D030000 		.4byte	.LVL167-1
 8762 044f 0200     		.2byte	0x2
 8763 0451 90       		.byte	0x90
 8764 0452 40       		.uleb128 0x40
 8765 0453 82030000 		.4byte	.LVL168
 8766 0457 84030000 		.4byte	.LVL169
 8767 045b 0200     		.2byte	0x2
 8768 045d 90       		.byte	0x90
 8769 045e 40       		.uleb128 0x40
 8770 045f 84030000 		.4byte	.LVL169
 8771 0463 92030000 		.4byte	.LVL172
 8772 0467 0200     		.2byte	0x2
 8773 0469 90       		.byte	0x90
 8774 046a 50       		.uleb128 0x50
 8775 046b 00000000 		.4byte	0
 8776 046f 00000000 		.4byte	0
 8777              	.LVUS50:
 8778 0473 00       		.uleb128 .LVU563
 8779 0474 00       		.uleb128 .LVU567
 8780              	.LLST50:
 8781 0475 A8010000 		.4byte	.LVL139
 8782 0479 B4010000 		.4byte	.LVL140
 8783 047d 0200     		.2byte	0x2
 8784 047f 90       		.byte	0x90
 8785 0480 40       		.uleb128 0x40
 8786 0481 00000000 		.4byte	0
 8787 0485 00000000 		.4byte	0
 8788              	.LVUS51:
 8789 0489 00       		.uleb128 .LVU567
 8790 048a 00       		.uleb128 .LVU577
 8791 048b 00       		.uleb128 .LVU581
ARM GAS  /tmp/ccPfsSwR.s 			page 171


 8792 048c 00       		.uleb128 .LVU587
 8793 048d 00       		.uleb128 .LVU642
 8794 048e 00       		.uleb128 .LVU646
 8795 048f 00       		.uleb128 .LVU646
 8796 0490 00       		.uleb128 .LVU647
 8797              	.LLST51:
 8798 0491 B4010000 		.4byte	.LVL140
 8799 0495 CE010000 		.4byte	.LVL143
 8800 0499 0200     		.2byte	0x2
 8801 049b 90       		.byte	0x90
 8802 049c 40       		.uleb128 0x40
 8803 049d DE010000 		.4byte	.LVL145
 8804 04a1 ED010000 		.4byte	.LVL148-1
 8805 04a5 0200     		.2byte	0x2
 8806 04a7 90       		.byte	0x90
 8807 04a8 40       		.uleb128 0x40
 8808 04a9 84030000 		.4byte	.LVL169
 8809 04ad 8F030000 		.4byte	.LVL171-1
 8810 04b1 0200     		.2byte	0x2
 8811 04b3 90       		.byte	0x90
 8812 04b4 40       		.uleb128 0x40
 8813 04b5 90030000 		.4byte	.LVL171
 8814 04b9 92030000 		.4byte	.LVL172
 8815 04bd 0200     		.2byte	0x2
 8816 04bf 90       		.byte	0x90
 8817 04c0 40       		.uleb128 0x40
 8818 04c1 00000000 		.4byte	0
 8819 04c5 00000000 		.4byte	0
 8820              	.LVUS52:
 8821 04c9 00       		.uleb128 .LVU515
 8822 04ca 00       		.uleb128 .LVU519
 8823              	.LLST52:
 8824 04cb 34000000 		.4byte	.LVL121
 8825 04cf 44000000 		.4byte	.LVL124
 8826 04d3 0200     		.2byte	0x2
 8827 04d5 90       		.byte	0x90
 8828 04d6 50       		.uleb128 0x50
 8829 04d7 00000000 		.4byte	0
 8830 04db 00000000 		.4byte	0
 8831              	.LVUS53:
 8832 04df 00       		.uleb128 .LVU574
 8833 04e0 00       		.uleb128 .LVU578
 8834              	.LLST53:
 8835 04e1 CA010000 		.4byte	.LVL142
 8836 04e5 D5010000 		.4byte	.LVL144-1
 8837 04e9 0200     		.2byte	0x2
 8838 04eb 90       		.byte	0x90
 8839 04ec 42       		.uleb128 0x42
 8840 04ed 00000000 		.4byte	0
 8841 04f1 00000000 		.4byte	0
 8842              	.LVUS54:
 8843 04f5 01       		.uleb128 .LVU575
 8844 04f6 00       		.uleb128 .LVU581
 8845              	.LLST54:
 8846 04f7 CA010000 		.4byte	.LVL142
 8847 04fb DE010000 		.4byte	.LVL145
 8848 04ff 0200     		.2byte	0x2
ARM GAS  /tmp/ccPfsSwR.s 			page 172


 8849 0501 90       		.byte	0x90
 8850 0502 50       		.uleb128 0x50
 8851 0503 00000000 		.4byte	0
 8852 0507 00000000 		.4byte	0
 8853              	.LVUS55:
 8854 050b 00       		.uleb128 .LVU644
 8855 050c 00       		.uleb128 .LVU646
 8856              	.LLST55:
 8857 050d 88030000 		.4byte	.LVL170
 8858 0511 8F030000 		.4byte	.LVL171-1
 8859 0515 0200     		.2byte	0x2
 8860 0517 90       		.byte	0x90
 8861 0518 42       		.uleb128 0x42
 8862 0519 00000000 		.4byte	0
 8863 051d 00000000 		.4byte	0
 8864              	.LLST30:
 8865 0521 00000000 		.4byte	.LFB9
 8866 0525 08000000 		.4byte	.LCFI28
 8867 0529 0200     		.2byte	0x2
 8868 052b 7D       		.byte	0x7d
 8869 052c 00       		.sleb128 0
 8870 052d 08000000 		.4byte	.LCFI28
 8871 0531 12000000 		.4byte	.LCFI29
 8872 0535 0200     		.2byte	0x2
 8873 0537 7D       		.byte	0x7d
 8874 0538 18       		.sleb128 24
 8875 0539 12000000 		.4byte	.LCFI29
 8876 053d 18000000 		.4byte	.LCFI30
 8877 0541 0300     		.2byte	0x3
 8878 0543 7D       		.byte	0x7d
 8879 0544 C000     		.sleb128 64
 8880 0546 18000000 		.4byte	.LCFI30
 8881 054a 0A030000 		.4byte	.LCFI31
 8882 054e 0300     		.2byte	0x3
 8883 0550 7D       		.byte	0x7d
 8884 0551 8001     		.sleb128 128
 8885 0553 0A030000 		.4byte	.LCFI31
 8886 0557 0E030000 		.4byte	.LCFI32
 8887 055b 0300     		.2byte	0x3
 8888 055d 7D       		.byte	0x7d
 8889 055e C000     		.sleb128 64
 8890 0560 0E030000 		.4byte	.LCFI32
 8891 0564 28030000 		.4byte	.LFE9
 8892 0568 0200     		.2byte	0x2
 8893 056a 7D       		.byte	0x7d
 8894 056b 18       		.sleb128 24
 8895 056c 00000000 		.4byte	0
 8896 0570 00000000 		.4byte	0
 8897              	.LVUS31:
 8898 0574 00       		.uleb128 0
 8899 0575 00       		.uleb128 .LVU359
 8900 0576 00       		.uleb128 .LVU359
 8901 0577 00       		.uleb128 .LVU496
 8902 0578 00       		.uleb128 .LVU496
 8903 0579 00       		.uleb128 0
 8904              	.LLST31:
 8905 057a 00000000 		.4byte	.LVL67
ARM GAS  /tmp/ccPfsSwR.s 			page 173


 8906 057e 3C000000 		.4byte	.LVL70
 8907 0582 0100     		.2byte	0x1
 8908 0584 50       		.byte	0x50
 8909 0585 3C000000 		.4byte	.LVL70
 8910 0589 08030000 		.4byte	.LVL116
 8911 058d 0100     		.2byte	0x1
 8912 058f 55       		.byte	0x55
 8913 0590 08030000 		.4byte	.LVL116
 8914 0594 28030000 		.4byte	.LFE9
 8915 0598 0400     		.2byte	0x4
 8916 059a F3       		.byte	0xf3
 8917 059b 01       		.uleb128 0x1
 8918 059c 50       		.byte	0x50
 8919 059d 9F       		.byte	0x9f
 8920 059e 00000000 		.4byte	0
 8921 05a2 00000000 		.4byte	0
 8922              	.LVUS32:
 8923 05a6 00       		.uleb128 0
 8924 05a7 00       		.uleb128 .LVU359
 8925 05a8 00       		.uleb128 .LVU359
 8926 05a9 00       		.uleb128 0
 8927              	.LLST32:
 8928 05aa 00000000 		.4byte	.LVL67
 8929 05ae 3C000000 		.4byte	.LVL70
 8930 05b2 0200     		.2byte	0x2
 8931 05b4 90       		.byte	0x90
 8932 05b5 40       		.uleb128 0x40
 8933 05b6 3C000000 		.4byte	.LVL70
 8934 05ba 28030000 		.4byte	.LFE9
 8935 05be 0600     		.2byte	0x6
 8936 05c0 F3       		.byte	0xf3
 8937 05c1 03       		.uleb128 0x3
 8938 05c2 F5       		.byte	0xf5
 8939 05c3 40       		.uleb128 0x40
 8940 05c4 29       		.uleb128 0x29
 8941 05c5 9F       		.byte	0x9f
 8942 05c6 00000000 		.4byte	0
 8943 05ca 00000000 		.4byte	0
 8944              	.LVUS33:
 8945 05ce 00       		.uleb128 .LVU351
 8946 05cf 00       		.uleb128 .LVU355
 8947 05d0 00       		.uleb128 .LVU355
 8948 05d1 00       		.uleb128 .LVU359
 8949              	.LLST33:
 8950 05d2 20000000 		.4byte	.LVL68
 8951 05d6 2A000000 		.4byte	.LVL69
 8952 05da 0200     		.2byte	0x2
 8953 05dc 90       		.byte	0x90
 8954 05dd 53       		.uleb128 0x53
 8955 05de 2A000000 		.4byte	.LVL69
 8956 05e2 3C000000 		.4byte	.LVL70
 8957 05e6 1800     		.2byte	0x18
 8958 05e8 F4       		.byte	0xf4
 8959 05e9 29       		.uleb128 0x29
 8960 05ea 04       		.byte	0x4
 8961 05eb CDCC4C3E 		.4byte	0x3e4ccccd
 8962 05ef F5       		.byte	0xf5
ARM GAS  /tmp/ccPfsSwR.s 			page 174


 8963 05f0 54       		.uleb128 0x54
 8964 05f1 29       		.uleb128 0x29
 8965 05f2 03       		.byte	0x3
 8966 05f3 00000000 		.4byte	positionCorrection
 8967 05f7 06       		.byte	0x6
 8968 05f8 30       		.byte	0x30
 8969 05f9 2E       		.byte	0x2e
 8970 05fa 28       		.byte	0x28
 8971 05fb 0100     		.2byte	0x1
 8972 05fd 16       		.byte	0x16
 8973 05fe 13       		.byte	0x13
 8974 05ff 9F       		.byte	0x9f
 8975 0600 00000000 		.4byte	0
 8976 0604 00000000 		.4byte	0
 8977              	.LVUS34:
 8978 0608 02       		.uleb128 .LVU353
 8979 0609 00       		.uleb128 .LVU359
 8980 060a 00       		.uleb128 .LVU359
 8981 060b 00       		.uleb128 .LVU463
 8982 060c 00       		.uleb128 .LVU463
 8983 060d 01       		.uleb128 .LVU494
 8984 060e 01       		.uleb128 .LVU494
 8985 060f 00       		.uleb128 .LVU496
 8986              	.LLST34:
 8987 0610 20000000 		.4byte	.LVL68
 8988 0614 3C000000 		.4byte	.LVL70
 8989 0618 0200     		.2byte	0x2
 8990 061a 30       		.byte	0x30
 8991 061b 9F       		.byte	0x9f
 8992 061c 3C000000 		.4byte	.LVL70
 8993 0620 08020000 		.4byte	.LVL103
 8994 0624 0100     		.2byte	0x1
 8995 0626 56       		.byte	0x56
 8996 0627 08020000 		.4byte	.LVL103
 8997 062b FE020000 		.4byte	.LVL115
 8998 062f 0300     		.2byte	0x3
 8999 0631 76       		.byte	0x76
 9000 0632 7F       		.sleb128 -1
 9001 0633 9F       		.byte	0x9f
 9002 0634 FE020000 		.4byte	.LVL115
 9003 0638 08030000 		.4byte	.LVL116
 9004 063c 0100     		.2byte	0x1
 9005 063e 56       		.byte	0x56
 9006 063f 00000000 		.4byte	0
 9007 0643 00000000 		.4byte	0
 9008              	.LVUS35:
 9009 0647 00       		.uleb128 .LVU359
 9010 0648 00       		.uleb128 .LVU363
 9011 0649 00       		.uleb128 .LVU363
 9012 064a 00       		.uleb128 .LVU364
 9013 064b 01       		.uleb128 .LVU365
 9014 064c 00       		.uleb128 .LVU464
 9015 064d 00       		.uleb128 .LVU464
 9016 064e 00       		.uleb128 .LVU496
 9017              	.LLST35:
 9018 064f 3C000000 		.4byte	.LVL70
 9019 0653 44000000 		.4byte	.LVL72
ARM GAS  /tmp/ccPfsSwR.s 			page 175


 9020 0657 0100     		.2byte	0x1
 9021 0659 54       		.byte	0x54
 9022 065a 44000000 		.4byte	.LVL72
 9023 065e 4A000000 		.4byte	.LVL73
 9024 0662 0300     		.2byte	0x3
 9025 0664 74       		.byte	0x74
 9026 0665 40       		.sleb128 -64
 9027 0666 9F       		.byte	0x9f
 9028 0667 4A000000 		.4byte	.LVL73
 9029 066b 0E020000 		.4byte	.LVL104
 9030 066f 0100     		.2byte	0x1
 9031 0671 54       		.byte	0x54
 9032 0672 0E020000 		.4byte	.LVL104
 9033 0676 08030000 		.4byte	.LVL116
 9034 067a 0300     		.2byte	0x3
 9035 067c 74       		.byte	0x74
 9036 067d 40       		.sleb128 -64
 9037 067e 9F       		.byte	0x9f
 9038 067f 00000000 		.4byte	0
 9039 0683 00000000 		.4byte	0
 9040              	.LVUS36:
 9041 0687 00       		.uleb128 .LVU384
 9042 0688 00       		.uleb128 .LVU386
 9043 0689 00       		.uleb128 .LVU386
 9044 068a 00       		.uleb128 .LVU403
 9045              	.LLST36:
 9046 068b BE000000 		.4byte	.LVL77
 9047 068f C2000000 		.4byte	.LVL78
 9048 0693 0200     		.2byte	0x2
 9049 0695 90       		.byte	0x90
 9050 0696 40       		.uleb128 0x40
 9051 0697 C2000000 		.4byte	.LVL78
 9052 069b 0A010000 		.4byte	.LVL84
 9053 069f 0200     		.2byte	0x2
 9054 06a1 90       		.byte	0x90
 9055 06a2 51       		.uleb128 0x51
 9056 06a3 00000000 		.4byte	0
 9057 06a7 00000000 		.4byte	0
 9058              	.LVUS37:
 9059 06ab 00       		.uleb128 .LVU389
 9060 06ac 00       		.uleb128 .LVU391
 9061 06ad 00       		.uleb128 .LVU391
 9062 06ae 00       		.uleb128 .LVU428
 9063              	.LLST37:
 9064 06af D2000000 		.4byte	.LVL80
 9065 06b3 D6000000 		.4byte	.LVL81
 9066 06b7 0200     		.2byte	0x2
 9067 06b9 90       		.byte	0x90
 9068 06ba 40       		.uleb128 0x40
 9069 06bb D6000000 		.4byte	.LVL81
 9070 06bf 82010000 		.4byte	.LVL93
 9071 06c3 0200     		.2byte	0x2
 9072 06c5 90       		.byte	0x90
 9073 06c6 56       		.uleb128 0x56
 9074 06c7 00000000 		.4byte	0
 9075 06cb 00000000 		.4byte	0
 9076              	.LVUS38:
ARM GAS  /tmp/ccPfsSwR.s 			page 176


 9077 06cf 00       		.uleb128 .LVU396
 9078 06d0 00       		.uleb128 .LVU410
 9079 06d1 00       		.uleb128 .LVU410
 9080 06d2 00       		.uleb128 .LVU412
 9081 06d3 00       		.uleb128 .LVU412
 9082 06d4 00       		.uleb128 .LVU433
 9083              	.LLST38:
 9084 06d5 EE000000 		.4byte	.LVL82
 9085 06d9 32010000 		.4byte	.LVL86
 9086 06dd 0200     		.2byte	0x2
 9087 06df 90       		.byte	0x90
 9088 06e0 50       		.uleb128 0x50
 9089 06e1 32010000 		.4byte	.LVL86
 9090 06e5 36010000 		.4byte	.LVL87
 9091 06e9 0800     		.2byte	0x8
 9092 06eb F5       		.byte	0xf5
 9093 06ec 50       		.uleb128 0x50
 9094 06ed 29       		.uleb128 0x29
 9095 06ee F5       		.byte	0xf5
 9096 06ef 51       		.uleb128 0x51
 9097 06f0 29       		.uleb128 0x29
 9098 06f1 22       		.byte	0x22
 9099 06f2 9F       		.byte	0x9f
 9100 06f3 36010000 		.4byte	.LVL87
 9101 06f7 96010000 		.4byte	.LVL95
 9102 06fb 0200     		.2byte	0x2
 9103 06fd 90       		.byte	0x90
 9104 06fe 50       		.uleb128 0x50
 9105 06ff 00000000 		.4byte	0
 9106 0703 00000000 		.4byte	0
 9107              	.LVUS39:
 9108 0707 00       		.uleb128 .LVU423
 9109 0708 00       		.uleb128 .LVU425
 9110 0709 00       		.uleb128 .LVU425
 9111 070a 00       		.uleb128 .LVU442
 9112              	.LLST39:
 9113 070b 6E010000 		.4byte	.LVL90
 9114 070f 72010000 		.4byte	.LVL91
 9115 0713 0200     		.2byte	0x2
 9116 0715 90       		.byte	0x90
 9117 0716 40       		.uleb128 0x40
 9118 0717 72010000 		.4byte	.LVL91
 9119 071b BA010000 		.4byte	.LVL98
 9120 071f 0200     		.2byte	0x2
 9121 0721 90       		.byte	0x90
 9122 0722 51       		.uleb128 0x51
 9123 0723 00000000 		.4byte	0
 9124 0727 00000000 		.4byte	0
 9125              	.LVUS40:
 9126 072b 00       		.uleb128 .LVU359
 9127 072c 00       		.uleb128 .LVU364
 9128 072d 00       		.uleb128 .LVU428
 9129 072e 00       		.uleb128 .LVU430
 9130 072f 00       		.uleb128 .LVU430
 9131 0730 00       		.uleb128 .LVU496
 9132              	.LLST40:
 9133 0731 3C000000 		.4byte	.LVL70
ARM GAS  /tmp/ccPfsSwR.s 			page 177


 9134 0735 4A000000 		.4byte	.LVL73
 9135 0739 0200     		.2byte	0x2
 9136 073b 90       		.byte	0x90
 9137 073c 56       		.uleb128 0x56
 9138 073d 82010000 		.4byte	.LVL93
 9139 0741 86010000 		.4byte	.LVL94
 9140 0745 0200     		.2byte	0x2
 9141 0747 90       		.byte	0x90
 9142 0748 40       		.uleb128 0x40
 9143 0749 86010000 		.4byte	.LVL94
 9144 074d 08030000 		.4byte	.LVL116
 9145 0751 0200     		.2byte	0x2
 9146 0753 90       		.byte	0x90
 9147 0754 56       		.uleb128 0x56
 9148 0755 00000000 		.4byte	0
 9149 0759 00000000 		.4byte	0
 9150              	.LVUS41:
 9151 075d 00       		.uleb128 .LVU359
 9152 075e 00       		.uleb128 .LVU364
 9153 075f 00       		.uleb128 .LVU435
 9154 0760 00       		.uleb128 .LVU449
 9155 0761 00       		.uleb128 .LVU449
 9156 0762 00       		.uleb128 .LVU451
 9157 0763 00       		.uleb128 .LVU451
 9158 0764 00       		.uleb128 .LVU476
 9159              	.LLST41:
 9160 0765 3C000000 		.4byte	.LVL70
 9161 0769 4A000000 		.4byte	.LVL73
 9162 076d 0200     		.2byte	0x2
 9163 076f 90       		.byte	0x90
 9164 0770 50       		.uleb128 0x50
 9165 0771 9E010000 		.4byte	.LVL96
 9166 0775 E2010000 		.4byte	.LVL100
 9167 0779 0200     		.2byte	0x2
 9168 077b 90       		.byte	0x90
 9169 077c 50       		.uleb128 0x50
 9170 077d E2010000 		.4byte	.LVL100
 9171 0781 E6010000 		.4byte	.LVL101
 9172 0785 0800     		.2byte	0x8
 9173 0787 F5       		.byte	0xf5
 9174 0788 50       		.uleb128 0x50
 9175 0789 29       		.uleb128 0x29
 9176 078a F5       		.byte	0xf5
 9177 078b 51       		.uleb128 0x51
 9178 078c 29       		.uleb128 0x29
 9179 078d 22       		.byte	0x22
 9180 078e 9F       		.byte	0x9f
 9181 078f E6010000 		.4byte	.LVL101
 9182 0793 96020000 		.4byte	.LVL110
 9183 0797 0200     		.2byte	0x2
 9184 0799 90       		.byte	0x90
 9185 079a 50       		.uleb128 0x50
 9186 079b 00000000 		.4byte	0
 9187 079f 00000000 		.4byte	0
 9188              	.LLST19:
 9189 07a3 00000000 		.4byte	.LFB8
 9190 07a7 10000000 		.4byte	.LCFI20
ARM GAS  /tmp/ccPfsSwR.s 			page 178


 9191 07ab 0200     		.2byte	0x2
 9192 07ad 7D       		.byte	0x7d
 9193 07ae 00       		.sleb128 0
 9194 07af 10000000 		.4byte	.LCFI20
 9195 07b3 14000000 		.4byte	.LCFI21
 9196 07b7 0200     		.2byte	0x2
 9197 07b9 7D       		.byte	0x7d
 9198 07ba 24       		.sleb128 36
 9199 07bb 14000000 		.4byte	.LCFI21
 9200 07bf 16000000 		.4byte	.LCFI22
 9201 07c3 0200     		.2byte	0x2
 9202 07c5 7D       		.byte	0x7d
 9203 07c6 2C       		.sleb128 44
 9204 07c7 16000000 		.4byte	.LCFI22
 9205 07cb 0A010000 		.4byte	.LCFI23
 9206 07cf 0300     		.2byte	0x3
 9207 07d1 7D       		.byte	0x7d
 9208 07d2 E802     		.sleb128 360
 9209 07d4 0A010000 		.4byte	.LCFI23
 9210 07d8 0E010000 		.4byte	.LCFI24
 9211 07dc 0200     		.2byte	0x2
 9212 07de 7D       		.byte	0x7d
 9213 07df 2C       		.sleb128 44
 9214 07e0 0E010000 		.4byte	.LCFI24
 9215 07e4 12010000 		.4byte	.LCFI25
 9216 07e8 0200     		.2byte	0x2
 9217 07ea 7D       		.byte	0x7d
 9218 07eb 24       		.sleb128 36
 9219 07ec 12010000 		.4byte	.LCFI25
 9220 07f0 5C010000 		.4byte	.LCFI26
 9221 07f4 0300     		.2byte	0x3
 9222 07f6 7D       		.byte	0x7d
 9223 07f7 E802     		.sleb128 360
 9224 07f9 5C010000 		.4byte	.LCFI26
 9225 07fd 5E010000 		.4byte	.LCFI27
 9226 0801 0200     		.2byte	0x2
 9227 0803 7D       		.byte	0x7d
 9228 0804 00       		.sleb128 0
 9229 0805 5E010000 		.4byte	.LCFI27
 9230 0809 84010000 		.4byte	.LFE8
 9231 080d 0300     		.2byte	0x3
 9232 080f 7D       		.byte	0x7d
 9233 0810 E802     		.sleb128 360
 9234 0812 00000000 		.4byte	0
 9235 0816 00000000 		.4byte	0
 9236              	.LVUS20:
 9237 081a 03       		.uleb128 .LVU205
 9238 081b 00       		.uleb128 .LVU212
 9239 081c 00       		.uleb128 .LVU212
 9240 081d 00       		.uleb128 .LVU219
 9241 081e 00       		.uleb128 .LVU219
 9242 081f 00       		.uleb128 .LVU225
 9243 0820 00       		.uleb128 .LVU225
 9244 0821 00       		.uleb128 .LVU307
 9245 0822 00       		.uleb128 .LVU307
 9246 0823 00       		.uleb128 .LVU310
 9247 0824 00       		.uleb128 .LVU312
ARM GAS  /tmp/ccPfsSwR.s 			page 179


 9248 0825 00       		.uleb128 .LVU336
 9249 0826 00       		.uleb128 .LVU336
 9250 0827 00       		.uleb128 .LVU337
 9251 0828 00       		.uleb128 .LVU337
 9252 0829 00       		.uleb128 0
 9253              	.LLST20:
 9254 082a 00000000 		.4byte	.LVL33
 9255 082e 24000000 		.4byte	.LVL34
 9256 0832 0200     		.2byte	0x2
 9257 0834 30       		.byte	0x30
 9258 0835 9F       		.byte	0x9f
 9259 0836 24000000 		.4byte	.LVL34
 9260 083a 32000000 		.4byte	.LVL35
 9261 083e 0300     		.2byte	0x3
 9262 0840 91       		.byte	0x91
 9263 0841 A07D     		.sleb128 -352
 9264 0843 32000000 		.4byte	.LVL35
 9265 0847 3A000000 		.4byte	.LVL37
 9266 084b 0300     		.2byte	0x3
 9267 084d 72       		.byte	0x72
 9268 084e 7F       		.sleb128 -1
 9269 084f 9F       		.byte	0x9f
 9270 0850 3A000000 		.4byte	.LVL37
 9271 0854 02010000 		.4byte	.LVL53
 9272 0858 0700     		.2byte	0x7
 9273 085a 91       		.byte	0x91
 9274 085b A07D     		.sleb128 -352
 9275 085d 06       		.byte	0x6
 9276 085e 31       		.byte	0x31
 9277 085f 1C       		.byte	0x1c
 9278 0860 9F       		.byte	0x9f
 9279 0861 02010000 		.4byte	.LVL53
 9280 0865 08010000 		.4byte	.LVL54
 9281 0869 0300     		.2byte	0x3
 9282 086b 91       		.byte	0x91
 9283 086c A07D     		.sleb128 -352
 9284 086e 12010000 		.4byte	.LVL55
 9285 0872 5C010000 		.4byte	.LVL64
 9286 0876 0700     		.2byte	0x7
 9287 0878 91       		.byte	0x91
 9288 0879 A07D     		.sleb128 -352
 9289 087b 06       		.byte	0x6
 9290 087c 31       		.byte	0x31
 9291 087d 1C       		.byte	0x1c
 9292 087e 9F       		.byte	0x9f
 9293 087f 5C010000 		.4byte	.LVL64
 9294 0883 5E010000 		.4byte	.LVL65
 9295 0887 0200     		.2byte	0x2
 9296 0889 30       		.byte	0x30
 9297 088a 9F       		.byte	0x9f
 9298 088b 5E010000 		.4byte	.LVL65
 9299 088f 84010000 		.4byte	.LFE8
 9300 0893 0700     		.2byte	0x7
 9301 0895 91       		.byte	0x91
 9302 0896 A07D     		.sleb128 -352
 9303 0898 06       		.byte	0x6
 9304 0899 31       		.byte	0x31
ARM GAS  /tmp/ccPfsSwR.s 			page 180


 9305 089a 1C       		.byte	0x1c
 9306 089b 9F       		.byte	0x9f
 9307 089c 00000000 		.4byte	0
 9308 08a0 00000000 		.4byte	0
 9309              	.LVUS21:
 9310 08a4 00       		.uleb128 .LVU221
 9311 08a5 00       		.uleb128 .LVU336
 9312 08a6 00       		.uleb128 .LVU337
 9313 08a7 00       		.uleb128 0
 9314              	.LLST21:
 9315 08a8 34000000 		.4byte	.LVL36
 9316 08ac 5C010000 		.4byte	.LVL64
 9317 08b0 0100     		.2byte	0x1
 9318 08b2 59       		.byte	0x59
 9319 08b3 5E010000 		.4byte	.LVL65
 9320 08b7 84010000 		.4byte	.LFE8
 9321 08bb 0100     		.2byte	0x1
 9322 08bd 59       		.byte	0x59
 9323 08be 00000000 		.4byte	0
 9324 08c2 00000000 		.4byte	0
 9325              	.LVUS22:
 9326 08c6 02       		.uleb128 .LVU223
 9327 08c7 00       		.uleb128 .LVU225
 9328 08c8 00       		.uleb128 .LVU225
 9329 08c9 00       		.uleb128 .LVU310
 9330 08ca 00       		.uleb128 .LVU312
 9331 08cb 00       		.uleb128 .LVU336
 9332 08cc 00       		.uleb128 .LVU337
 9333 08cd 00       		.uleb128 0
 9334              	.LLST22:
 9335 08ce 34000000 		.4byte	.LVL36
 9336 08d2 3A000000 		.4byte	.LVL37
 9337 08d6 0100     		.2byte	0x1
 9338 08d8 52       		.byte	0x52
 9339 08d9 3A000000 		.4byte	.LVL37
 9340 08dd 08010000 		.4byte	.LVL54
 9341 08e1 0100     		.2byte	0x1
 9342 08e3 5A       		.byte	0x5a
 9343 08e4 12010000 		.4byte	.LVL55
 9344 08e8 5C010000 		.4byte	.LVL64
 9345 08ec 0100     		.2byte	0x1
 9346 08ee 5A       		.byte	0x5a
 9347 08ef 5E010000 		.4byte	.LVL65
 9348 08f3 84010000 		.4byte	.LFE8
 9349 08f7 0100     		.2byte	0x1
 9350 08f9 5A       		.byte	0x5a
 9351 08fa 00000000 		.4byte	0
 9352 08fe 00000000 		.4byte	0
 9353              	.LVUS23:
 9354 0902 00       		.uleb128 .LVU232
 9355 0903 00       		.uleb128 .LVU243
 9356 0904 00       		.uleb128 .LVU243
 9357 0905 00       		.uleb128 .LVU268
 9358 0906 00       		.uleb128 .LVU312
 9359 0907 00       		.uleb128 .LVU317
 9360              	.LLST23:
 9361 0908 4E000000 		.4byte	.LVL38
ARM GAS  /tmp/ccPfsSwR.s 			page 181


 9362 090c 6C000000 		.4byte	.LVL39
 9363 0910 0100     		.2byte	0x1
 9364 0912 55       		.byte	0x55
 9365 0913 6C000000 		.4byte	.LVL39
 9366 0917 91000000 		.4byte	.LVL43-1
 9367 091b 0200     		.2byte	0x2
 9368 091d 73       		.byte	0x73
 9369 091e 7C       		.sleb128 -4
 9370 091f 12010000 		.4byte	.LVL55
 9371 0923 1A010000 		.4byte	.LVL57
 9372 0927 0100     		.2byte	0x1
 9373 0929 55       		.byte	0x55
 9374 092a 00000000 		.4byte	0
 9375 092e 00000000 		.4byte	0
 9376              	.LVUS24:
 9377 0932 02       		.uleb128 .LVU246
 9378 0933 03       		.uleb128 .LVU247
 9379 0934 03       		.uleb128 .LVU247
 9380 0935 00       		.uleb128 .LVU295
 9381 0936 00       		.uleb128 .LVU295
 9382 0937 00       		.uleb128 .LVU298
 9383 0938 01       		.uleb128 .LVU315
 9384 0939 02       		.uleb128 .LVU316
 9385 093a 02       		.uleb128 .LVU316
 9386 093b 00       		.uleb128 .LVU317
 9387 093c 00       		.uleb128 .LVU317
 9388 093d 00       		.uleb128 .LVU336
 9389 093e 00       		.uleb128 .LVU337
 9390 093f 00       		.uleb128 0
 9391              	.LLST24:
 9392 0940 70000000 		.4byte	.LVL40
 9393 0944 70000000 		.4byte	.LVL40
 9394 0948 0500     		.2byte	0x5
 9395 094a 55       		.byte	0x55
 9396 094b 93       		.byte	0x93
 9397 094c 04       		.uleb128 0x4
 9398 094d 93       		.byte	0x93
 9399 094e 04       		.uleb128 0x4
 9400 094f 70000000 		.4byte	.LVL40
 9401 0953 E8000000 		.4byte	.LVL49
 9402 0957 0600     		.2byte	0x6
 9403 0959 55       		.byte	0x55
 9404 095a 93       		.byte	0x93
 9405 095b 04       		.uleb128 0x4
 9406 095c 58       		.byte	0x58
 9407 095d 93       		.byte	0x93
 9408 095e 04       		.uleb128 0x4
 9409 095f E8000000 		.4byte	.LVL49
 9410 0963 F4000000 		.4byte	.LVL51
 9411 0967 0500     		.2byte	0x5
 9412 0969 93       		.byte	0x93
 9413 096a 04       		.uleb128 0x4
 9414 096b 58       		.byte	0x58
 9415 096c 93       		.byte	0x93
 9416 096d 04       		.uleb128 0x4
 9417 096e 18010000 		.4byte	.LVL56
 9418 0972 18010000 		.4byte	.LVL56
ARM GAS  /tmp/ccPfsSwR.s 			page 182


 9419 0976 0700     		.2byte	0x7
 9420 0978 74       		.byte	0x74
 9421 0979 8401     		.sleb128 132
 9422 097b 93       		.byte	0x93
 9423 097c 04       		.uleb128 0x4
 9424 097d 93       		.byte	0x93
 9425 097e 04       		.uleb128 0x4
 9426 097f 18010000 		.4byte	.LVL56
 9427 0983 1A010000 		.4byte	.LVL57
 9428 0987 0800     		.2byte	0x8
 9429 0989 74       		.byte	0x74
 9430 098a 8401     		.sleb128 132
 9431 098c 93       		.byte	0x93
 9432 098d 04       		.uleb128 0x4
 9433 098e 58       		.byte	0x58
 9434 098f 93       		.byte	0x93
 9435 0990 04       		.uleb128 0x4
 9436 0991 1A010000 		.4byte	.LVL57
 9437 0995 5C010000 		.4byte	.LVL64
 9438 0999 0600     		.2byte	0x6
 9439 099b 55       		.byte	0x55
 9440 099c 93       		.byte	0x93
 9441 099d 04       		.uleb128 0x4
 9442 099e 58       		.byte	0x58
 9443 099f 93       		.byte	0x93
 9444 09a0 04       		.uleb128 0x4
 9445 09a1 5E010000 		.4byte	.LVL65
 9446 09a5 84010000 		.4byte	.LFE8
 9447 09a9 0600     		.2byte	0x6
 9448 09ab 55       		.byte	0x55
 9449 09ac 93       		.byte	0x93
 9450 09ad 04       		.uleb128 0x4
 9451 09ae 58       		.byte	0x58
 9452 09af 93       		.byte	0x93
 9453 09b0 04       		.uleb128 0x4
 9454 09b1 00000000 		.4byte	0
 9455 09b5 00000000 		.4byte	0
 9456              	.LVUS26:
 9457 09b9 01       		.uleb128 .LVU291
 9458 09ba 00       		.uleb128 .LVU297
 9459 09bb 00       		.uleb128 .LVU319
 9460 09bc 00       		.uleb128 .LVU336
 9461              	.LLST26:
 9462 09bd E4000000 		.4byte	.LVL48
 9463 09c1 EC000000 		.4byte	.LVL50
 9464 09c5 0C00     		.2byte	0xc
 9465 09c7 71       		.byte	0x71
 9466 09c8 00       		.sleb128 0
 9467 09c9 08       		.byte	0x8
 9468 09ca 90       		.byte	0x90
 9469 09cb 1E       		.byte	0x1e
 9470 09cc 03       		.byte	0x3
 9471 09cd 00000000 		.4byte	g_arbiters
 9472 09d1 22       		.byte	0x22
 9473 09d2 9F       		.byte	0x9f
 9474 09d3 2C010000 		.4byte	.LVL60
 9475 09d7 5C010000 		.4byte	.LVL64
ARM GAS  /tmp/ccPfsSwR.s 			page 183


 9476 09db 0200     		.2byte	0x2
 9477 09dd 30       		.byte	0x30
 9478 09de 9F       		.byte	0x9f
 9479 09df 00000000 		.4byte	0
 9480 09e3 00000000 		.4byte	0
 9481              	.LVUS27:
 9482 09e7 00       		.uleb128 .LVU277
 9483 09e8 00       		.uleb128 .LVU281
 9484 09e9 00       		.uleb128 .LVU281
 9485 09ea 01       		.uleb128 .LVU291
 9486 09eb 00       		.uleb128 .LVU318
 9487 09ec 00       		.uleb128 .LVU319
 9488              	.LLST27:
 9489 09ed BC000000 		.4byte	.LVL44
 9490 09f1 CA000000 		.4byte	.LVL45
 9491 09f5 0200     		.2byte	0x2
 9492 09f7 30       		.byte	0x30
 9493 09f8 9F       		.byte	0x9f
 9494 09f9 CA000000 		.4byte	.LVL45
 9495 09fd E4000000 		.4byte	.LVL48
 9496 0a01 0100     		.2byte	0x1
 9497 0a03 51       		.byte	0x51
 9498 0a04 2A010000 		.4byte	.LVL59
 9499 0a08 2C010000 		.4byte	.LVL60
 9500 0a0c 0200     		.2byte	0x2
 9501 0a0e 30       		.byte	0x30
 9502 0a0f 9F       		.byte	0x9f
 9503 0a10 00000000 		.4byte	0
 9504 0a14 00000000 		.4byte	0
 9505              	.LVUS28:
 9506 0a18 02       		.uleb128 .LVU321
 9507 0a19 00       		.uleb128 .LVU335
 9508              	.LLST28:
 9509 0a1a 2C010000 		.4byte	.LVL60
 9510 0a1e 5A010000 		.4byte	.LVL63
 9511 0a22 0600     		.2byte	0x6
 9512 0a24 55       		.byte	0x55
 9513 0a25 93       		.byte	0x93
 9514 0a26 04       		.uleb128 0x4
 9515 0a27 58       		.byte	0x58
 9516 0a28 93       		.byte	0x93
 9517 0a29 04       		.uleb128 0x4
 9518 0a2a 00000000 		.4byte	0
 9519 0a2e 00000000 		.4byte	0
 9520              	.LVUS25:
 9521 0a32 04       		.uleb128 .LVU248
 9522 0a33 00       		.uleb128 .LVU256
 9523              	.LLST25:
 9524 0a34 70000000 		.4byte	.LVL40
 9525 0a38 82000000 		.4byte	.LVL41
 9526 0a3c 0100     		.2byte	0x1
 9527 0a3e 54       		.byte	0x54
 9528 0a3f 00000000 		.4byte	0
 9529 0a43 00000000 		.4byte	0
 9530              	.LVUS29:
 9531 0a47 02       		.uleb128 .LVU258
 9532 0a48 00       		.uleb128 .LVU265
ARM GAS  /tmp/ccPfsSwR.s 			page 184


 9533              	.LLST29:
 9534 0a49 82000000 		.4byte	.LVL41
 9535 0a4d 8E000000 		.4byte	.LVL42
 9536 0a51 0400     		.2byte	0x4
 9537 0a53 91       		.byte	0x91
 9538 0a54 F07D     		.sleb128 -272
 9539 0a56 9F       		.byte	0x9f
 9540 0a57 00000000 		.4byte	0
 9541 0a5b 00000000 		.4byte	0
 9542              	.LLST6:
 9543 0a5f 00000000 		.4byte	.LFB7
 9544 0a63 04000000 		.4byte	.LCFI16
 9545 0a67 0200     		.2byte	0x2
 9546 0a69 7D       		.byte	0x7d
 9547 0a6a 00       		.sleb128 0
 9548 0a6b 04000000 		.4byte	.LCFI16
 9549 0a6f 08000000 		.4byte	.LCFI17
 9550 0a73 0200     		.2byte	0x2
 9551 0a75 7D       		.byte	0x7d
 9552 0a76 24       		.sleb128 36
 9553 0a77 08000000 		.4byte	.LCFI17
 9554 0a7b C0000000 		.4byte	.LCFI18
 9555 0a7f 0300     		.2byte	0x3
 9556 0a81 7D       		.byte	0x7d
 9557 0a82 B001     		.sleb128 176
 9558 0a84 C0000000 		.4byte	.LCFI18
 9559 0a88 C4000000 		.4byte	.LCFI19
 9560 0a8c 0200     		.2byte	0x2
 9561 0a8e 7D       		.byte	0x7d
 9562 0a8f 24       		.sleb128 36
 9563 0a90 C4000000 		.4byte	.LCFI19
 9564 0a94 F0000000 		.4byte	.LFE7
 9565 0a98 0300     		.2byte	0x3
 9566 0a9a 7D       		.byte	0x7d
 9567 0a9b B001     		.sleb128 176
 9568 0a9d 00000000 		.4byte	0
 9569 0aa1 00000000 		.4byte	0
 9570              	.LVUS7:
 9571 0aa5 00       		.uleb128 0
 9572 0aa6 00       		.uleb128 .LVU141
 9573 0aa7 00       		.uleb128 .LVU141
 9574 0aa8 00       		.uleb128 0
 9575              	.LLST7:
 9576 0aa9 00000000 		.4byte	.LVL17
 9577 0aad 38000000 		.4byte	.LVL21
 9578 0ab1 0100     		.2byte	0x1
 9579 0ab3 50       		.byte	0x50
 9580 0ab4 38000000 		.4byte	.LVL21
 9581 0ab8 F0000000 		.4byte	.LFE7
 9582 0abc 0100     		.2byte	0x1
 9583 0abe 58       		.byte	0x58
 9584 0abf 00000000 		.4byte	0
 9585 0ac3 00000000 		.4byte	0
 9586              	.LVUS8:
 9587 0ac7 00       		.uleb128 0
 9588 0ac8 00       		.uleb128 .LVU141
 9589 0ac9 00       		.uleb128 .LVU141
ARM GAS  /tmp/ccPfsSwR.s 			page 185


 9590 0aca 00       		.uleb128 0
 9591              	.LLST8:
 9592 0acb 00000000 		.4byte	.LVL17
 9593 0acf 38000000 		.4byte	.LVL21
 9594 0ad3 0100     		.2byte	0x1
 9595 0ad5 51       		.byte	0x51
 9596 0ad6 38000000 		.4byte	.LVL21
 9597 0ada F0000000 		.4byte	.LFE7
 9598 0ade 0400     		.2byte	0x4
 9599 0ae0 F3       		.byte	0xf3
 9600 0ae1 01       		.uleb128 0x1
 9601 0ae2 51       		.byte	0x51
 9602 0ae3 9F       		.byte	0x9f
 9603 0ae4 00000000 		.4byte	0
 9604 0ae8 00000000 		.4byte	0
 9605              	.LVUS9:
 9606 0aec 00       		.uleb128 0
 9607 0aed 00       		.uleb128 .LVU141
 9608 0aee 00       		.uleb128 .LVU141
 9609 0aef 00       		.uleb128 0
 9610              	.LLST9:
 9611 0af0 00000000 		.4byte	.LVL17
 9612 0af4 38000000 		.4byte	.LVL21
 9613 0af8 0100     		.2byte	0x1
 9614 0afa 52       		.byte	0x52
 9615 0afb 38000000 		.4byte	.LVL21
 9616 0aff F0000000 		.4byte	.LFE7
 9617 0b03 0100     		.2byte	0x1
 9618 0b05 59       		.byte	0x59
 9619 0b06 00000000 		.4byte	0
 9620 0b0a 00000000 		.4byte	0
 9621              	.LVUS11:
 9622 0b0e 03       		.uleb128 .LVU137
 9623 0b0f 00       		.uleb128 .LVU141
 9624              	.LLST11:
 9625 0b10 1A000000 		.4byte	.LVL20
 9626 0b14 38000000 		.4byte	.LVL21
 9627 0b18 0200     		.2byte	0x2
 9628 0b1a 30       		.byte	0x30
 9629 0b1b 9F       		.byte	0x9f
 9630 0b1c 00000000 		.4byte	0
 9631 0b20 00000000 		.4byte	0
 9632              	.LVUS12:
 9633 0b24 02       		.uleb128 .LVU143
 9634 0b25 00       		.uleb128 .LVU180
 9635 0b26 00       		.uleb128 .LVU180
 9636 0b27 00       		.uleb128 .LVU189
 9637 0b28 00       		.uleb128 .LVU193
 9638 0b29 00       		.uleb128 0
 9639              	.LLST12:
 9640 0b2a 38000000 		.4byte	.LVL21
 9641 0b2e 8C000000 		.4byte	.LVL29
 9642 0b32 0100     		.2byte	0x1
 9643 0b34 5C       		.byte	0x5c
 9644 0b35 8C000000 		.4byte	.LVL29
 9645 0b39 BA000000 		.4byte	.LVL30
 9646 0b3d 0300     		.2byte	0x3
ARM GAS  /tmp/ccPfsSwR.s 			page 186


 9647 0b3f 7C       		.byte	0x7c
 9648 0b40 40       		.sleb128 -64
 9649 0b41 9F       		.byte	0x9f
 9650 0b42 C4000000 		.4byte	.LVL31
 9651 0b46 F0000000 		.4byte	.LFE7
 9652 0b4a 0100     		.2byte	0x1
 9653 0b4c 5C       		.byte	0x5c
 9654 0b4d 00000000 		.4byte	0
 9655 0b51 00000000 		.4byte	0
 9656              	.LVUS13:
 9657 0b55 03       		.uleb128 .LVU144
 9658 0b56 00       		.uleb128 .LVU159
 9659 0b57 00       		.uleb128 .LVU159
 9660 0b58 00       		.uleb128 .LVU165
 9661 0b59 00       		.uleb128 .LVU193
 9662 0b5a 00       		.uleb128 .LVU196
 9663              	.LLST13:
 9664 0b5b 38000000 		.4byte	.LVL21
 9665 0b5f 56000000 		.4byte	.LVL26
 9666 0b63 0300     		.2byte	0x3
 9667 0b65 09       		.byte	0x9
 9668 0b66 FF       		.byte	0xff
 9669 0b67 9F       		.byte	0x9f
 9670 0b68 56000000 		.4byte	.LVL26
 9671 0b6c 5C000000 		.4byte	.LVL27
 9672 0b70 0100     		.2byte	0x1
 9673 0b72 53       		.byte	0x53
 9674 0b73 C4000000 		.4byte	.LVL31
 9675 0b77 DE000000 		.4byte	.LVL32
 9676 0b7b 0300     		.2byte	0x3
 9677 0b7d 09       		.byte	0x9
 9678 0b7e FF       		.byte	0xff
 9679 0b7f 9F       		.byte	0x9f
 9680 0b80 00000000 		.4byte	0
 9681 0b84 00000000 		.4byte	0
 9682              	.LVUS16:
 9683 0b88 05       		.uleb128 .LVU146
 9684 0b89 00       		.uleb128 .LVU150
 9685 0b8a 00       		.uleb128 .LVU150
 9686 0b8b 00       		.uleb128 .LVU152
 9687 0b8c 03       		.uleb128 .LVU155
 9688 0b8d 00       		.uleb128 .LVU157
 9689 0b8e 00       		.uleb128 .LVU157
 9690 0b8f 00       		.uleb128 .LVU165
 9691              	.LLST16:
 9692 0b90 38000000 		.4byte	.LVL21
 9693 0b94 46000000 		.4byte	.LVL22
 9694 0b98 0200     		.2byte	0x2
 9695 0b9a 30       		.byte	0x30
 9696 0b9b 9F       		.byte	0x9f
 9697 0b9c 46000000 		.4byte	.LVL22
 9698 0ba0 4E000000 		.4byte	.LVL24
 9699 0ba4 0100     		.2byte	0x1
 9700 0ba6 53       		.byte	0x53
 9701 0ba7 4E000000 		.4byte	.LVL24
 9702 0bab 52000000 		.4byte	.LVL25
 9703 0baf 0300     		.2byte	0x3
ARM GAS  /tmp/ccPfsSwR.s 			page 187


 9704 0bb1 73       		.byte	0x73
 9705 0bb2 01       		.sleb128 1
 9706 0bb3 9F       		.byte	0x9f
 9707 0bb4 52000000 		.4byte	.LVL25
 9708 0bb8 5C000000 		.4byte	.LVL27
 9709 0bbc 0100     		.2byte	0x1
 9710 0bbe 53       		.byte	0x53
 9711 0bbf 00000000 		.4byte	0
 9712 0bc3 00000000 		.4byte	0
 9713              	.LVUS17:
 9714 0bc7 00       		.uleb128 .LVU150
 9715 0bc8 00       		.uleb128 .LVU151
 9716 0bc9 00       		.uleb128 .LVU151
 9717 0bca 00       		.uleb128 .LVU152
 9718 0bcb 01       		.uleb128 .LVU153
 9719 0bcc 00       		.uleb128 .LVU177
 9720 0bcd 00       		.uleb128 .LVU196
 9721 0bce 00       		.uleb128 0
 9722              	.LLST17:
 9723 0bcf 46000000 		.4byte	.LVL22
 9724 0bd3 4C000000 		.4byte	.LVL23
 9725 0bd7 0100     		.2byte	0x1
 9726 0bd9 54       		.byte	0x54
 9727 0bda 4C000000 		.4byte	.LVL23
 9728 0bde 4E000000 		.4byte	.LVL24
 9729 0be2 0300     		.2byte	0x3
 9730 0be4 74       		.byte	0x74
 9731 0be5 40       		.sleb128 -64
 9732 0be6 9F       		.byte	0x9f
 9733 0be7 4E000000 		.4byte	.LVL24
 9734 0beb 88000000 		.4byte	.LVL28
 9735 0bef 0100     		.2byte	0x1
 9736 0bf1 54       		.byte	0x54
 9737 0bf2 DE000000 		.4byte	.LVL32
 9738 0bf6 F0000000 		.4byte	.LFE7
 9739 0bfa 0100     		.2byte	0x1
 9740 0bfc 54       		.byte	0x54
 9741 0bfd 00000000 		.4byte	0
 9742 0c01 00000000 		.4byte	0
 9743              	.LVUS14:
 9744 0c05 03       		.uleb128 .LVU162
 9745 0c06 00       		.uleb128 .LVU177
 9746 0c07 00       		.uleb128 .LVU196
 9747 0c08 00       		.uleb128 0
 9748              	.LLST14:
 9749 0c09 56000000 		.4byte	.LVL26
 9750 0c0d 88000000 		.4byte	.LVL28
 9751 0c11 0D00     		.2byte	0xd
 9752 0c13 91       		.byte	0x91
 9753 0c14 00       		.sleb128 0
 9754 0c15 F3       		.byte	0xf3
 9755 0c16 01       		.uleb128 0x1
 9756 0c17 51       		.byte	0x51
 9757 0c18 1C       		.byte	0x1c
 9758 0c19 7C       		.byte	0x7c
 9759 0c1a 00       		.sleb128 0
 9760 0c1b 22       		.byte	0x22
ARM GAS  /tmp/ccPfsSwR.s 			page 188


 9761 0c1c 08       		.byte	0x8
 9762 0c1d A8       		.byte	0xa8
 9763 0c1e 1C       		.byte	0x1c
 9764 0c1f 9F       		.byte	0x9f
 9765 0c20 DE000000 		.4byte	.LVL32
 9766 0c24 F0000000 		.4byte	.LFE7
 9767 0c28 0D00     		.2byte	0xd
 9768 0c2a 91       		.byte	0x91
 9769 0c2b 00       		.sleb128 0
 9770 0c2c F3       		.byte	0xf3
 9771 0c2d 01       		.uleb128 0x1
 9772 0c2e 51       		.byte	0x51
 9773 0c2f 1C       		.byte	0x1c
 9774 0c30 7C       		.byte	0x7c
 9775 0c31 00       		.sleb128 0
 9776 0c32 22       		.byte	0x22
 9777 0c33 08       		.byte	0x8
 9778 0c34 A8       		.byte	0xa8
 9779 0c35 1C       		.byte	0x1c
 9780 0c36 9F       		.byte	0x9f
 9781 0c37 00000000 		.4byte	0
 9782 0c3b 00000000 		.4byte	0
 9783              	.LVUS15:
 9784 0c3f 04       		.uleb128 .LVU163
 9785 0c40 00       		.uleb128 .LVU177
 9786 0c41 00       		.uleb128 .LVU196
 9787 0c42 00       		.uleb128 0
 9788              	.LLST15:
 9789 0c43 56000000 		.4byte	.LVL26
 9790 0c47 88000000 		.4byte	.LVL28
 9791 0c4b 0100     		.2byte	0x1
 9792 0c4d 54       		.byte	0x54
 9793 0c4e DE000000 		.4byte	.LVL32
 9794 0c52 F0000000 		.4byte	.LFE7
 9795 0c56 0100     		.2byte	0x1
 9796 0c58 54       		.byte	0x54
 9797 0c59 00000000 		.4byte	0
 9798 0c5d 00000000 		.4byte	0
 9799              	.LVUS10:
 9800 0c61 02       		.uleb128 .LVU118
 9801 0c62 00       		.uleb128 .LVU125
 9802              	.LLST10:
 9803 0c63 0E000000 		.4byte	.LVL18
 9804 0c67 14000000 		.4byte	.LVL19
 9805 0c6b 0400     		.2byte	0x4
 9806 0c6d 91       		.byte	0x91
 9807 0c6e D87E     		.sleb128 -168
 9808 0c70 9F       		.byte	0x9f
 9809 0c71 00000000 		.4byte	0
 9810 0c75 00000000 		.4byte	0
 9811              	.LVUS18:
 9812 0c79 02       		.uleb128 .LVU127
 9813 0c7a 00       		.uleb128 .LVU134
 9814              	.LLST18:
 9815 0c7b 14000000 		.4byte	.LVL19
 9816 0c7f 1A000000 		.4byte	.LVL20
 9817 0c83 0400     		.2byte	0x4
ARM GAS  /tmp/ccPfsSwR.s 			page 189


 9818 0c85 91       		.byte	0x91
 9819 0c86 987F     		.sleb128 -104
 9820 0c88 9F       		.byte	0x9f
 9821 0c89 00000000 		.4byte	0
 9822 0c8d 00000000 		.4byte	0
 9823              	.LLST3:
 9824 0c91 00000000 		.4byte	.LFB5
 9825 0c95 04000000 		.4byte	.LCFI13
 9826 0c99 0200     		.2byte	0x2
 9827 0c9b 7D       		.byte	0x7d
 9828 0c9c 00       		.sleb128 0
 9829 0c9d 04000000 		.4byte	.LCFI13
 9830 0ca1 0A000000 		.4byte	.LCFI14
 9831 0ca5 0200     		.2byte	0x2
 9832 0ca7 7D       		.byte	0x7d
 9833 0ca8 24       		.sleb128 36
 9834 0ca9 0A000000 		.4byte	.LCFI14
 9835 0cad 90000000 		.4byte	.LCFI15
 9836 0cb1 0200     		.2byte	0x2
 9837 0cb3 7D       		.byte	0x7d
 9838 0cb4 38       		.sleb128 56
 9839 0cb5 90000000 		.4byte	.LCFI15
 9840 0cb9 A4000000 		.4byte	.LFE5
 9841 0cbd 0200     		.2byte	0x2
 9842 0cbf 7D       		.byte	0x7d
 9843 0cc0 24       		.sleb128 36
 9844 0cc1 00000000 		.4byte	0
 9845 0cc5 00000000 		.4byte	0
 9846              	.LVUS4:
 9847 0cc9 03       		.uleb128 .LVU57
 9848 0cca 00       		.uleb128 .LVU68
 9849 0ccb 00       		.uleb128 .LVU68
 9850 0ccc 00       		.uleb128 .LVU95
 9851 0ccd 00       		.uleb128 .LVU95
 9852 0cce 01       		.uleb128 .LVU97
 9853 0ccf 01       		.uleb128 .LVU97
 9854 0cd0 00       		.uleb128 .LVU100
 9855              	.LLST4:
 9856 0cd1 00000000 		.4byte	.LVL6
 9857 0cd5 26000000 		.4byte	.LVL7
 9858 0cd9 0200     		.2byte	0x2
 9859 0cdb 30       		.byte	0x30
 9860 0cdc 9F       		.byte	0x9f
 9861 0cdd 26000000 		.4byte	.LVL7
 9862 0ce1 84000000 		.4byte	.LVL13
 9863 0ce5 0100     		.2byte	0x1
 9864 0ce7 54       		.byte	0x54
 9865 0ce8 84000000 		.4byte	.LVL13
 9866 0cec 86000000 		.4byte	.LVL14
 9867 0cf0 0300     		.2byte	0x3
 9868 0cf2 74       		.byte	0x74
 9869 0cf3 7F       		.sleb128 -1
 9870 0cf4 9F       		.byte	0x9f
 9871 0cf5 86000000 		.4byte	.LVL14
 9872 0cf9 8E000000 		.4byte	.LVL15
 9873 0cfd 0100     		.2byte	0x1
 9874 0cff 54       		.byte	0x54
ARM GAS  /tmp/ccPfsSwR.s 			page 190


 9875 0d00 00000000 		.4byte	0
 9876 0d04 00000000 		.4byte	0
 9877              	.LVUS5:
 9878 0d08 00       		.uleb128 .LVU78
 9879 0d09 00       		.uleb128 .LVU83
 9880              	.LLST5:
 9881 0d0a 48000000 		.4byte	.LVL10
 9882 0d0e 5E000000 		.4byte	.LVL11
 9883 0d12 0100     		.2byte	0x1
 9884 0d14 54       		.byte	0x54
 9885 0d15 00000000 		.4byte	0
 9886 0d19 00000000 		.4byte	0
 9887              	.LLST0:
 9888 0d1d 00000000 		.4byte	.LFB3
 9889 0d21 04000000 		.4byte	.LCFI0
 9890 0d25 0200     		.2byte	0x2
 9891 0d27 7D       		.byte	0x7d
 9892 0d28 00       		.sleb128 0
 9893 0d29 04000000 		.4byte	.LCFI0
 9894 0d2d 08000000 		.4byte	.LCFI1
 9895 0d31 0200     		.2byte	0x2
 9896 0d33 7D       		.byte	0x7d
 9897 0d34 10       		.sleb128 16
 9898 0d35 08000000 		.4byte	.LCFI1
 9899 0d39 40000000 		.4byte	.LCFI2
 9900 0d3d 0200     		.2byte	0x2
 9901 0d3f 7D       		.byte	0x7d
 9902 0d40 18       		.sleb128 24
 9903 0d41 40000000 		.4byte	.LCFI2
 9904 0d45 42000000 		.4byte	.LCFI3
 9905 0d49 0200     		.2byte	0x2
 9906 0d4b 7D       		.byte	0x7d
 9907 0d4c 10       		.sleb128 16
 9908 0d4d 42000000 		.4byte	.LCFI3
 9909 0d51 44000000 		.4byte	.LCFI4
 9910 0d55 0200     		.2byte	0x2
 9911 0d57 7D       		.byte	0x7d
 9912 0d58 00       		.sleb128 0
 9913 0d59 44000000 		.4byte	.LCFI4
 9914 0d5d 48000000 		.4byte	.LCFI5
 9915 0d61 0200     		.2byte	0x2
 9916 0d63 7D       		.byte	0x7d
 9917 0d64 18       		.sleb128 24
 9918 0d65 48000000 		.4byte	.LCFI5
 9919 0d69 4A000000 		.4byte	.LCFI6
 9920 0d6d 0200     		.2byte	0x2
 9921 0d6f 7D       		.byte	0x7d
 9922 0d70 10       		.sleb128 16
 9923 0d71 4A000000 		.4byte	.LCFI6
 9924 0d75 58000000 		.4byte	.LFE3
 9925 0d79 0200     		.2byte	0x2
 9926 0d7b 7D       		.byte	0x7d
 9927 0d7c 00       		.sleb128 0
 9928 0d7d 00000000 		.4byte	0
 9929 0d81 00000000 		.4byte	0
 9930              	.LVUS1:
 9931 0d85 03       		.uleb128 .LVU3
ARM GAS  /tmp/ccPfsSwR.s 			page 191


 9932 0d86 00       		.uleb128 .LVU15
 9933 0d87 00       		.uleb128 .LVU15
 9934 0d88 00       		.uleb128 .LVU26
 9935              	.LLST1:
 9936 0d89 00000000 		.4byte	.LVL0
 9937 0d8d 1E000000 		.4byte	.LVL1
 9938 0d91 0200     		.2byte	0x2
 9939 0d93 30       		.byte	0x30
 9940 0d94 9F       		.byte	0x9f
 9941 0d95 1E000000 		.4byte	.LVL1
 9942 0d99 38000000 		.4byte	.LVL4
 9943 0d9d 0100     		.2byte	0x1
 9944 0d9f 53       		.byte	0x53
 9945 0da0 00000000 		.4byte	0
 9946 0da4 00000000 		.4byte	0
 9947              	.LLST2:
 9948 0da8 00000000 		.4byte	.LFB4
 9949 0dac 02000000 		.4byte	.LCFI7
 9950 0db0 0200     		.2byte	0x2
 9951 0db2 7D       		.byte	0x7d
 9952 0db3 00       		.sleb128 0
 9953 0db4 02000000 		.4byte	.LCFI7
 9954 0db8 08000000 		.4byte	.LCFI8
 9955 0dbc 0200     		.2byte	0x2
 9956 0dbe 7D       		.byte	0x7d
 9957 0dbf 08       		.sleb128 8
 9958 0dc0 08000000 		.4byte	.LCFI8
 9959 0dc4 0A000000 		.4byte	.LCFI9
 9960 0dc8 0200     		.2byte	0x2
 9961 0dca 7D       		.byte	0x7d
 9962 0dcb 1C       		.sleb128 28
 9963 0dcc 0A000000 		.4byte	.LCFI9
 9964 0dd0 3E000000 		.4byte	.LCFI10
 9965 0dd4 0200     		.2byte	0x2
 9966 0dd6 7D       		.byte	0x7d
 9967 0dd7 28       		.sleb128 40
 9968 0dd8 3E000000 		.4byte	.LCFI10
 9969 0ddc 42000000 		.4byte	.LCFI11
 9970 0de0 0200     		.2byte	0x2
 9971 0de2 7D       		.byte	0x7d
 9972 0de3 1C       		.sleb128 28
 9973 0de4 42000000 		.4byte	.LCFI11
 9974 0de8 44000000 		.4byte	.LCFI12
 9975 0dec 0200     		.2byte	0x2
 9976 0dee 7D       		.byte	0x7d
 9977 0def 08       		.sleb128 8
 9978 0df0 44000000 		.4byte	.LCFI12
 9979 0df4 54000000 		.4byte	.LFE4
 9980 0df8 0200     		.2byte	0x2
 9981 0dfa 7D       		.byte	0x7d
 9982 0dfb 00       		.sleb128 0
 9983 0dfc 00000000 		.4byte	0
 9984 0e00 00000000 		.4byte	0
 9985              		.section	.debug_aranges,"",%progbits
 9986 0000 74000000 		.4byte	0x74
 9987 0004 0200     		.2byte	0x2
 9988 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  /tmp/ccPfsSwR.s 			page 192


 9989 000a 04       		.byte	0x4
 9990 000b 00       		.byte	0
 9991 000c 0000     		.2byte	0
 9992 000e 0000     		.2byte	0
 9993 0010 00000000 		.4byte	.LFB3
 9994 0014 58000000 		.4byte	.LFE3-.LFB3
 9995 0018 00000000 		.4byte	.LFB4
 9996 001c 54000000 		.4byte	.LFE4-.LFB4
 9997 0020 00000000 		.4byte	.LFB5
 9998 0024 A4000000 		.4byte	.LFE5-.LFB5
 9999 0028 00000000 		.4byte	.LFB6
 10000 002c 0A000000 		.4byte	.LFE6-.LFB6
 10001 0030 00000000 		.4byte	.LFB7
 10002 0034 F0000000 		.4byte	.LFE7-.LFB7
 10003 0038 00000000 		.4byte	.LFB8
 10004 003c 84010000 		.4byte	.LFE8-.LFB8
 10005 0040 00000000 		.4byte	.LFB9
 10006 0044 28030000 		.4byte	.LFE9-.LFB9
 10007 0048 00000000 		.4byte	.LFB10
 10008 004c A4030000 		.4byte	.LFE10-.LFB10
 10009 0050 00000000 		.4byte	.LFB11
 10010 0054 8C010000 		.4byte	.LFE11-.LFB11
 10011 0058 00000000 		.4byte	.LFB12
 10012 005c 9C000000 		.4byte	.LFE12-.LFB12
 10013 0060 00000000 		.4byte	.LFB13
 10014 0064 20000000 		.4byte	.LFE13-.LFB13
 10015 0068 00000000 		.4byte	.LFB14
 10016 006c 0C000000 		.4byte	.LFE14-.LFB14
 10017 0070 00000000 		.4byte	0
 10018 0074 00000000 		.4byte	0
 10019              		.section	.debug_ranges,"",%progbits
 10020              	.Ldebug_ranges0:
 10021 0000 00000000 		.4byte	.LBB26
 10022 0004 02000000 		.4byte	.LBE26
 10023 0008 04000000 		.4byte	.LBB27
 10024 000c 06000000 		.4byte	.LBE27
 10025 0010 08000000 		.4byte	.LBB28
 10026 0014 0A000000 		.4byte	.LBE28
 10027 0018 10000000 		.4byte	.LBB29
 10028 001c 3E000000 		.4byte	.LBE29
 10029 0020 00000000 		.4byte	0
 10030 0024 00000000 		.4byte	0
 10031 0028 00000000 		.4byte	.LBB30
 10032 002c 00000000 		.4byte	.LBE30
 10033 0030 04000000 		.4byte	.LBB33
 10034 0034 08000000 		.4byte	.LBE33
 10035 0038 0A000000 		.4byte	.LBB34
 10036 003c 0E000000 		.4byte	.LBE34
 10037 0040 10000000 		.4byte	.LBB35
 10038 0044 12000000 		.4byte	.LBE35
 10039 0048 16000000 		.4byte	.LBB36
 10040 004c 8E000000 		.4byte	.LBE36
 10041 0050 00000000 		.4byte	0
 10042 0054 00000000 		.4byte	0
 10043 0058 48000000 		.4byte	.LBB31
 10044 005c 80000000 		.4byte	.LBE31
 10045 0060 84000000 		.4byte	.LBB32
ARM GAS  /tmp/ccPfsSwR.s 			page 193


 10046 0064 86000000 		.4byte	.LBE32
 10047 0068 00000000 		.4byte	0
 10048 006c 00000000 		.4byte	0
 10049 0070 04000000 		.4byte	.LBB37
 10050 0074 06000000 		.4byte	.LBE37
 10051 0078 0E000000 		.4byte	.LBB51
 10052 007c 14000000 		.4byte	.LBE51
 10053 0080 00000000 		.4byte	0
 10054 0084 00000000 		.4byte	0
 10055 0088 08000000 		.4byte	.LBB40
 10056 008c 0C000000 		.4byte	.LBE40
 10057 0090 1A000000 		.4byte	.LBB54
 10058 0094 98000000 		.4byte	.LBE54
 10059 0098 C4000000 		.4byte	.LBB56
 10060 009c F0000000 		.4byte	.LBE56
 10061 00a0 00000000 		.4byte	0
 10062 00a4 00000000 		.4byte	0
 10063 00a8 1C000000 		.4byte	.LBB41
 10064 00ac 88000000 		.4byte	.LBE41
 10065 00b0 C4000000 		.4byte	.LBB50
 10066 00b4 F0000000 		.4byte	.LBE50
 10067 00b8 00000000 		.4byte	0
 10068 00bc 00000000 		.4byte	0
 10069 00c0 1C000000 		.4byte	.LBB42
 10070 00c4 38000000 		.4byte	.LBE42
 10071 00c8 56000000 		.4byte	.LBB48
 10072 00cc 88000000 		.4byte	.LBE48
 10073 00d0 DE000000 		.4byte	.LBB49
 10074 00d4 F0000000 		.4byte	.LBE49
 10075 00d8 00000000 		.4byte	0
 10076 00dc 00000000 		.4byte	0
 10077 00e0 3C000000 		.4byte	.LBB44
 10078 00e4 42000000 		.4byte	.LBE44
 10079 00e8 4E000000 		.4byte	.LBB45
 10080 00ec 4E000000 		.4byte	.LBE45
 10081 00f0 4E000000 		.4byte	.LBB46
 10082 00f4 50000000 		.4byte	.LBE46
 10083 00f8 52000000 		.4byte	.LBB47
 10084 00fc 56000000 		.4byte	.LBE47
 10085 0100 00000000 		.4byte	0
 10086 0104 00000000 		.4byte	0
 10087 0108 00000000 		.4byte	.LBB57
 10088 010c 0C000000 		.4byte	.LBE57
 10089 0110 16000000 		.4byte	.LBB90
 10090 0114 08010000 		.4byte	.LBE90
 10091 0118 12010000 		.4byte	.LBB91
 10092 011c 84010000 		.4byte	.LBE91
 10093 0120 00000000 		.4byte	0
 10094 0124 00000000 		.4byte	0
 10095 0128 16000000 		.4byte	.LBB58
 10096 012c 20000000 		.4byte	.LBE58
 10097 0130 24000000 		.4byte	.LBB88
 10098 0134 02010000 		.4byte	.LBE88
 10099 0138 12010000 		.4byte	.LBB89
 10100 013c 84010000 		.4byte	.LBE89
 10101 0140 00000000 		.4byte	0
 10102 0144 00000000 		.4byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 194


 10103 0148 16000000 		.4byte	.LBB59
 10104 014c 20000000 		.4byte	.LBE59
 10105 0150 24000000 		.4byte	.LBB83
 10106 0154 26000000 		.4byte	.LBE83
 10107 0158 28000000 		.4byte	.LBB84
 10108 015c 2A000000 		.4byte	.LBE84
 10109 0160 2E000000 		.4byte	.LBB85
 10110 0164 32000000 		.4byte	.LBE85
 10111 0168 34000000 		.4byte	.LBB86
 10112 016c 02010000 		.4byte	.LBE86
 10113 0170 12010000 		.4byte	.LBB87
 10114 0174 84010000 		.4byte	.LBE87
 10115 0178 00000000 		.4byte	0
 10116 017c 00000000 		.4byte	0
 10117 0180 16000000 		.4byte	.LBB60
 10118 0184 20000000 		.4byte	.LBE60
 10119 0188 3A000000 		.4byte	.LBB81
 10120 018c F4000000 		.4byte	.LBE81
 10121 0190 12010000 		.4byte	.LBB82
 10122 0194 84010000 		.4byte	.LBE82
 10123 0198 00000000 		.4byte	0
 10124 019c 00000000 		.4byte	0
 10125 01a0 16000000 		.4byte	.LBB61
 10126 01a4 1A000000 		.4byte	.LBE61
 10127 01a8 70000000 		.4byte	.LBB75
 10128 01ac 70000000 		.4byte	.LBE75
 10129 01b0 76000000 		.4byte	.LBB76
 10130 01b4 82000000 		.4byte	.LBE76
 10131 01b8 00000000 		.4byte	0
 10132 01bc 00000000 		.4byte	0
 10133 01c0 1A000000 		.4byte	.LBB65
 10134 01c4 20000000 		.4byte	.LBE65
 10135 01c8 BC000000 		.4byte	.LBB79
 10136 01cc F4000000 		.4byte	.LBE79
 10137 01d0 2C010000 		.4byte	.LBB80
 10138 01d4 5E010000 		.4byte	.LBE80
 10139 01d8 00000000 		.4byte	0
 10140 01dc 00000000 		.4byte	0
 10141 01e0 1A000000 		.4byte	.LBB66
 10142 01e4 20000000 		.4byte	.LBE66
 10143 01e8 BC000000 		.4byte	.LBB70
 10144 01ec E4000000 		.4byte	.LBE70
 10145 01f0 E4000000 		.4byte	.LBB71
 10146 01f4 E8000000 		.4byte	.LBE71
 10147 01f8 00000000 		.4byte	0
 10148 01fc 00000000 		.4byte	0
 10149 0200 0A000000 		.4byte	.LBB92
 10150 0204 0E000000 		.4byte	.LBE92
 10151 0208 20000000 		.4byte	.LBB99
 10152 020c 08030000 		.4byte	.LBE99
 10153 0210 00000000 		.4byte	0
 10154 0214 00000000 		.4byte	0
 10155 0218 2C000000 		.4byte	.LBB93
 10156 021c 32000000 		.4byte	.LBE93
 10157 0220 36000000 		.4byte	.LBB96
 10158 0224 3C000000 		.4byte	.LBE96
 10159 0228 4A000000 		.4byte	.LBB97
ARM GAS  /tmp/ccPfsSwR.s 			page 195


 10160 022c 06020000 		.4byte	.LBE97
 10161 0230 08020000 		.4byte	.LBB98
 10162 0234 FE020000 		.4byte	.LBE98
 10163 0238 00000000 		.4byte	0
 10164 023c 00000000 		.4byte	0
 10165 0240 02020000 		.4byte	.LBB94
 10166 0244 06020000 		.4byte	.LBE94
 10167 0248 08020000 		.4byte	.LBB95
 10168 024c FE020000 		.4byte	.LBE95
 10169 0250 00000000 		.4byte	0
 10170 0254 00000000 		.4byte	0
 10171 0258 0C000000 		.4byte	.LBB100
 10172 025c 0E000000 		.4byte	.LBE100
 10173 0260 14000000 		.4byte	.LBB110
 10174 0264 92030000 		.4byte	.LBE110
 10175 0268 00000000 		.4byte	0
 10176 026c 00000000 		.4byte	0
 10177 0270 2A000000 		.4byte	.LBB101
 10178 0274 E2010000 		.4byte	.LBE101
 10179 0278 E4010000 		.4byte	.LBB106
 10180 027c 76020000 		.4byte	.LBE106
 10181 0280 7A020000 		.4byte	.LBB107
 10182 0284 7E020000 		.4byte	.LBE107
 10183 0288 80020000 		.4byte	.LBB108
 10184 028c 84020000 		.4byte	.LBE108
 10185 0290 88020000 		.4byte	.LBB109
 10186 0294 92030000 		.4byte	.LBE109
 10187 0298 00000000 		.4byte	0
 10188 029c 00000000 		.4byte	0
 10189 02a0 B4010000 		.4byte	.LBB103
 10190 02a4 B8010000 		.4byte	.LBE103
 10191 02a8 BE010000 		.4byte	.LBB104
 10192 02ac DE010000 		.4byte	.LBE104
 10193 02b0 00000000 		.4byte	0
 10194 02b4 00000000 		.4byte	0
 10195 02b8 22000000 		.4byte	.LBB111
 10196 02bc 24000000 		.4byte	.LBE111
 10197 02c0 28000000 		.4byte	.LBB114
 10198 02c4 BC000000 		.4byte	.LBE114
 10199 02c8 00000000 		.4byte	0
 10200 02cc 00000000 		.4byte	0
 10201 02d0 32000000 		.4byte	.LBB112
 10202 02d4 3A000000 		.4byte	.LBE112
 10203 02d8 3C000000 		.4byte	.LBB113
 10204 02dc B6000000 		.4byte	.LBE113
 10205 02e0 00000000 		.4byte	0
 10206 02e4 00000000 		.4byte	0
 10207 02e8 1E010000 		.4byte	.LBB119
 10208 02ec 28010000 		.4byte	.LBE119
 10209 02f0 2A010000 		.4byte	.LBB120
 10210 02f4 4C010000 		.4byte	.LBE120
 10211 02f8 4E010000 		.4byte	.LBB121
 10212 02fc 54010000 		.4byte	.LBE121
 10213 0300 56010000 		.4byte	.LBB122
 10214 0304 5E010000 		.4byte	.LBE122
 10215 0308 00000000 		.4byte	0
 10216 030c 00000000 		.4byte	0
ARM GAS  /tmp/ccPfsSwR.s 			page 196


 10217 0310 00000000 		.4byte	.LFB3
 10218 0314 58000000 		.4byte	.LFE3
 10219 0318 00000000 		.4byte	.LFB4
 10220 031c 54000000 		.4byte	.LFE4
 10221 0320 00000000 		.4byte	.LFB5
 10222 0324 A4000000 		.4byte	.LFE5
 10223 0328 00000000 		.4byte	.LFB6
 10224 032c 0A000000 		.4byte	.LFE6
 10225 0330 00000000 		.4byte	.LFB7
 10226 0334 F0000000 		.4byte	.LFE7
 10227 0338 00000000 		.4byte	.LFB8
 10228 033c 84010000 		.4byte	.LFE8
 10229 0340 00000000 		.4byte	.LFB9
 10230 0344 28030000 		.4byte	.LFE9
 10231 0348 00000000 		.4byte	.LFB10
 10232 034c A4030000 		.4byte	.LFE10
 10233 0350 00000000 		.4byte	.LFB11
 10234 0354 8C010000 		.4byte	.LFE11
 10235 0358 00000000 		.4byte	.LFB12
 10236 035c 9C000000 		.4byte	.LFE12
 10237 0360 00000000 		.4byte	.LFB13
 10238 0364 20000000 		.4byte	.LFE13
 10239 0368 00000000 		.4byte	.LFB14
 10240 036c 0C000000 		.4byte	.LFE14
 10241 0370 00000000 		.4byte	0
 10242 0374 00000000 		.4byte	0
 10243              		.section	.debug_line,"",%progbits
 10244              	.Ldebug_line0:
 10245 0000 110E0000 		.section	.debug_str,"MS",%progbits,1
 10245      0300E700 
 10245      00000201 
 10245      FB0E0D00 
 10245      01010101 
 10246              	.LASF172:
 10247 0000 7372632F 		.ascii	"src/b2d_lite.c\000"
 10247      6232645F 
 10247      6C697465 
 10247      2E6300
 10248              	.LASF190:
 10249 000f 65726173 		.ascii	"eraseArbiter\000"
 10249      65417262 
 10249      69746572 
 10249      00
 10250              	.LASF155:
 10251 001c 626F6479 		.ascii	"body2\000"
 10251      3200
 10252              	.LASF161:
 10253 0022 675F6E75 		.ascii	"g_numArbiters\000"
 10253      6D417262 
 10253      69746572 
 10253      7300
 10254              	.LASF37:
 10255 0030 5F6F6E5F 		.ascii	"_on_exit_args\000"
 10255      65786974 
 10255      5F617267 
 10255      7300
 10256              	.LASF105:
ARM GAS  /tmp/ccPfsSwR.s 			page 197


 10257 003e 5F776374 		.ascii	"_wctomb_state\000"
 10257      6F6D625F 
 10257      73746174 
 10257      6500
 10258              	.LASF147:
 10259 004c 66726963 		.ascii	"friction\000"
 10259      74696F6E 
 10259      00
 10260              	.LASF149:
 10261 0055 696E764D 		.ascii	"invMass\000"
 10261      61737300 
 10262              	.LASF102:
 10263 005d 5F723438 		.ascii	"_r48\000"
 10263      00
 10264              	.LASF107:
 10265 0062 5F736967 		.ascii	"_signal_buf\000"
 10265      6E616C5F 
 10265      62756600 
 10266              	.LASF9:
 10267 006e 756E7369 		.ascii	"unsigned int\000"
 10267      676E6564 
 10267      20696E74 
 10267      00
 10268              	.LASF167:
 10269 007b 61646442 		.ascii	"addBody\000"
 10269      6F647900 
 10270              	.LASF51:
 10271 0083 5F6C6266 		.ascii	"_lbfsize\000"
 10271      73697A65 
 10271      00
 10272              	.LASF49:
 10273 008c 5F666C61 		.ascii	"_flags\000"
 10273      677300
 10274              	.LASF66:
 10275 0093 5F657272 		.ascii	"_errno\000"
 10275      6E6F00
 10276              	.LASF153:
 10277 009a 6E756D43 		.ascii	"numContacts\000"
 10277      6F6E7461 
 10277      63747300 
 10278              	.LASF194:
 10279 00a6 73756D56 		.ascii	"sumVec2\000"
 10279      65633200 
 10280              	.LASF180:
 10281 00ae 6B5F6269 		.ascii	"k_biasFactor\000"
 10281      61734661 
 10281      63746F72 
 10281      00
 10282              	.LASF165:
 10283 00bb 7761726D 		.ascii	"warmStarting\000"
 10283      53746172 
 10283      74696E67 
 10283      00
 10284              	.LASF20:
 10285 00c8 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 10285      4B5F5245 
 10285      43555253 
ARM GAS  /tmp/ccPfsSwR.s 			page 198


 10285      4956455F 
 10285      5400
 10286              	.LASF53:
 10287 00da 5F726561 		.ascii	"_read\000"
 10287      6400
 10288              	.LASF202:
 10289 00e0 436F6C6C 		.ascii	"Collide\000"
 10289      69646500 
 10290              	.LASF109:
 10291 00e8 5F6D6272 		.ascii	"_mbrlen_state\000"
 10291      6C656E5F 
 10291      73746174 
 10291      6500
 10292              	.LASF211:
 10293 00f6 5F5F6275 		.ascii	"__builtin_memcpy\000"
 10293      696C7469 
 10293      6E5F6D65 
 10293      6D637079 
 10293      00
 10294              	.LASF170:
 10295 0107 696E765F 		.ascii	"inv_dt\000"
 10295      647400
 10296              	.LASF68:
 10297 010e 5F737464 		.ascii	"_stdout\000"
 10297      6F757400 
 10298              	.LASF13:
 10299 0116 5F66706F 		.ascii	"_fpos_t\000"
 10299      735F7400 
 10300              	.LASF44:
 10301 011e 5F666E73 		.ascii	"_fns\000"
 10301      00
 10302              	.LASF141:
 10303 0123 726F7461 		.ascii	"rotation\000"
 10303      74696F6E 
 10303      00
 10304              	.LASF52:
 10305 012c 5F636F6F 		.ascii	"_cookie\000"
 10305      6B696500 
 10306              	.LASF26:
 10307 0134 5F426967 		.ascii	"_Bigint\000"
 10307      696E7400 
 10308              	.LASF145:
 10309 013c 746F7271 		.ascii	"torque\000"
 10309      756500
 10310              	.LASF34:
 10311 0143 5F5F746D 		.ascii	"__tm_wday\000"
 10311      5F776461 
 10311      7900
 10312              	.LASF76:
 10313 014d 5F726573 		.ascii	"_result\000"
 10313      756C7400 
 10314              	.LASF126:
 10315 0155 45646765 		.ascii	"Edges\000"
 10315      7300
 10316              	.LASF191:
 10317 015b 696E6974 		.ascii	"initContact\000"
 10317      436F6E74 
ARM GAS  /tmp/ccPfsSwR.s 			page 199


 10317      61637400 
 10318              	.LASF30:
 10319 0167 5F5F746D 		.ascii	"__tm_hour\000"
 10319      5F686F75 
 10319      7200
 10320              	.LASF169:
 10321 0171 53746570 		.ascii	"Step\000"
 10321      00
 10322              	.LASF189:
 10323 0176 634F6C64 		.ascii	"cOld\000"
 10323      00
 10324              	.LASF16:
 10325 017b 5F5F636F 		.ascii	"__count\000"
 10325      756E7400 
 10326              	.LASF0:
 10327 0183 666C6F61 		.ascii	"float\000"
 10327      7400
 10328              	.LASF29:
 10329 0189 5F5F746D 		.ascii	"__tm_min\000"
 10329      5F6D696E 
 10329      00
 10330              	.LASF118:
 10331 0192 5F696D70 		.ascii	"_impure_ptr\000"
 10331      7572655F 
 10331      70747200 
 10332              	.LASF201:
 10333 019e 43726F73 		.ascii	"Crossvs\000"
 10333      73767300 
 10334              	.LASF115:
 10335 01a6 5F6E6578 		.ascii	"_nextf\000"
 10335      746600
 10336              	.LASF185:
 10337 01ad 6E657743 		.ascii	"newContacts\000"
 10337      6F6E7461 
 10337      63747300 
 10338              	.LASF138:
 10339 01b9 62696173 		.ascii	"bias\000"
 10339      00
 10340              	.LASF92:
 10341 01be 5F72616E 		.ascii	"_rand48\000"
 10341      64343800 
 10342              	.LASF77:
 10343 01c6 5F726573 		.ascii	"_result_k\000"
 10343      756C745F 
 10343      6B00
 10344              	.LASF8:
 10345 01d0 6C6F6E67 		.ascii	"long long unsigned int\000"
 10345      206C6F6E 
 10345      6720756E 
 10345      7369676E 
 10345      65642069 
 10346              	.LASF98:
 10347 01e7 5F617363 		.ascii	"_asctime_buf\000"
 10347      74696D65 
 10347      5F627566 
 10347      00
 10348              	.LASF48:
ARM GAS  /tmp/ccPfsSwR.s 			page 200


 10349 01f4 5F5F7346 		.ascii	"__sFILE\000"
 10349      494C4500 
 10350              	.LASF25:
 10351 01fc 5F776473 		.ascii	"_wds\000"
 10351      00
 10352              	.LASF144:
 10353 0201 666F7263 		.ascii	"force\000"
 10353      6500
 10354              	.LASF88:
 10355 0207 5F5F4649 		.ascii	"__FILE\000"
 10355      4C4500
 10356              	.LASF122:
 10357 020e 5F5F6664 		.ascii	"__fdlibm_posix\000"
 10357      6C69626D 
 10357      5F706F73 
 10357      697800
 10358              	.LASF60:
 10359 021d 5F6F6666 		.ascii	"_offset\000"
 10359      73657400 
 10360              	.LASF181:
 10361 0225 6B4E6F72 		.ascii	"kNormal\000"
 10361      6D616C00 
 10362              	.LASF131:
 10363 022d 76616C75 		.ascii	"value\000"
 10363      6500
 10364              	.LASF71:
 10365 0233 5F656D65 		.ascii	"_emergency\000"
 10365      7267656E 
 10365      637900
 10366              	.LASF206:
 10367 023e 46656174 		.ascii	"FeaturePair\000"
 10367      75726550 
 10367      61697200 
 10368              	.LASF209:
 10369 024a 66696E64 		.ascii	"findArbiter\000"
 10369      41726269 
 10369      74657200 
 10370              	.LASF146:
 10371 0256 77696474 		.ascii	"width\000"
 10371      6800
 10372              	.LASF175:
 10373 025c 74616E67 		.ascii	"tangent\000"
 10373      656E7400 
 10374              	.LASF28:
 10375 0264 5F5F746D 		.ascii	"__tm_sec\000"
 10375      5F736563 
 10375      00
 10376              	.LASF183:
 10377 026d 6E657741 		.ascii	"newArb\000"
 10377      726200
 10378              	.LASF124:
 10379 0274 7375626F 		.ascii	"suboptarg\000"
 10379      70746172 
 10379      6700
 10380              	.LASF35:
 10381 027e 5F5F746D 		.ascii	"__tm_yday\000"
 10381      5F796461 
ARM GAS  /tmp/ccPfsSwR.s 			page 201


 10381      7900
 10382              	.LASF70:
 10383 0288 5F696E63 		.ascii	"_inc\000"
 10383      00
 10384              	.LASF43:
 10385 028d 5F696E64 		.ascii	"_ind\000"
 10385      00
 10386              	.LASF182:
 10387 0292 6B54616E 		.ascii	"kTangent\000"
 10387      67656E74 
 10387      00
 10388              	.LASF173:
 10389 029b 2F686F6D 		.ascii	"/home/george/projects/Playdate/Box2D-Lite-C\000"
 10389      652F6765 
 10389      6F726765 
 10389      2F70726F 
 10389      6A656374 
 10390              	.LASF22:
 10391 02c7 5F6E6578 		.ascii	"_next\000"
 10391      7400
 10392              	.LASF111:
 10393 02cd 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 10393      72746F77 
 10393      63735F73 
 10393      74617465 
 10393      00
 10394              	.LASF188:
 10395 02de 634E6577 		.ascii	"cNew\000"
 10395      00
 10396              	.LASF17:
 10397 02e3 5F5F7661 		.ascii	"__value\000"
 10397      6C756500 
 10398              	.LASF166:
 10399 02eb 706F7369 		.ascii	"positionCorrection\000"
 10399      74696F6E 
 10399      436F7272 
 10399      65637469 
 10399      6F6E00
 10400              	.LASF78:
 10401 02fe 5F703573 		.ascii	"_p5s\000"
 10401      00
 10402              	.LASF152:
 10403 0303 636F6E74 		.ascii	"contacts\000"
 10403      61637473 
 10403      00
 10404              	.LASF186:
 10405 030c 6E756D4E 		.ascii	"numNewContacts\000"
 10405      6577436F 
 10405      6E746163 
 10405      747300
 10406              	.LASF113:
 10407 031b 5F776373 		.ascii	"_wcsrtombs_state\000"
 10407      72746F6D 
 10407      62735F73 
 10407      74617465 
 10407      00
 10408              	.LASF103:
ARM GAS  /tmp/ccPfsSwR.s 			page 202


 10409 032c 5F6D626C 		.ascii	"_mblen_state\000"
 10409      656E5F73 
 10409      74617465 
 10409      00
 10410              	.LASF87:
 10411 0339 63686172 		.ascii	"char\000"
 10411      00
 10412              	.LASF31:
 10413 033e 5F5F746D 		.ascii	"__tm_mday\000"
 10413      5F6D6461 
 10413      7900
 10414              	.LASF84:
 10415 0348 5F736967 		.ascii	"_sig_func\000"
 10415      5F66756E 
 10415      6300
 10416              	.LASF110:
 10417 0352 5F6D6272 		.ascii	"_mbrtowc_state\000"
 10417      746F7763 
 10417      5F737461 
 10417      746500
 10418              	.LASF83:
 10419 0361 5F617465 		.ascii	"_atexit0\000"
 10419      78697430 
 10419      00
 10420              	.LASF207:
 10421 036a 67657442 		.ascii	"getBody\000"
 10421      6F647900 
 10422              	.LASF21:
 10423 0372 5F666C6F 		.ascii	"_flock_t\000"
 10423      636B5F74 
 10423      00
 10424              	.LASF128:
 10425 037b 6F757445 		.ascii	"outEdge1\000"
 10425      64676531 
 10425      00
 10426              	.LASF130:
 10427 0384 6F757445 		.ascii	"outEdge2\000"
 10427      64676532 
 10427      00
 10428              	.LASF14:
 10429 038d 5F5F7763 		.ascii	"__wch\000"
 10429      6800
 10430              	.LASF91:
 10431 0393 5F696F62 		.ascii	"_iobs\000"
 10431      7300
 10432              	.LASF159:
 10433 0399 675F6172 		.ascii	"g_arbiters\000"
 10433      62697465 
 10433      727300
 10434              	.LASF135:
 10435 03a4 73657061 		.ascii	"separation\000"
 10435      72617469 
 10435      6F6E00
 10436              	.LASF56:
 10437 03af 5F636C6F 		.ascii	"_close\000"
 10437      736500
 10438              	.LASF74:
ARM GAS  /tmp/ccPfsSwR.s 			page 203


 10439 03b6 5F5F7364 		.ascii	"__sdidinit\000"
 10439      6964696E 
 10439      697400
 10440              	.LASF164:
 10441 03c1 61636375 		.ascii	"accumulateImpulses\000"
 10441      6D756C61 
 10441      7465496D 
 10441      70756C73 
 10441      657300
 10442              	.LASF198:
 10443 03d4 43726F73 		.ascii	"Crossvv\000"
 10443      73767600 
 10444              	.LASF154:
 10445 03dc 626F6479 		.ascii	"body1\000"
 10445      3100
 10446              	.LASF67:
 10447 03e2 5F737464 		.ascii	"_stdin\000"
 10447      696E00
 10448              	.LASF100:
 10449 03e9 5F67616D 		.ascii	"_gamma_signgam\000"
 10449      6D615F73 
 10449      69676E67 
 10449      616D00
 10450              	.LASF7:
 10451 03f8 6C6F6E67 		.ascii	"long long int\000"
 10451      206C6F6E 
 10451      6720696E 
 10451      7400
 10452              	.LASF46:
 10453 0406 5F626173 		.ascii	"_base\000"
 10453      6500
 10454              	.LASF79:
 10455 040c 5F667265 		.ascii	"_freelist\000"
 10455      656C6973 
 10455      7400
 10456              	.LASF94:
 10457 0416 5F6D756C 		.ascii	"_mult\000"
 10457      7400
 10458              	.LASF19:
 10459 041c 5F5F554C 		.ascii	"__ULong\000"
 10459      6F6E6700 
 10460              	.LASF178:
 10461 0424 50726553 		.ascii	"PreStep\000"
 10461      74657000 
 10462              	.LASF112:
 10463 042c 5F776372 		.ascii	"_wcrtomb_state\000"
 10463      746F6D62 
 10463      5F737461 
 10463      746500
 10464              	.LASF50:
 10465 043b 5F66696C 		.ascii	"_file\000"
 10465      6500
 10466              	.LASF160:
 10467 0441 675F6172 		.ascii	"g_arbiterKeys\000"
 10467      62697465 
 10467      724B6579 
 10467      7300
ARM GAS  /tmp/ccPfsSwR.s 			page 204


 10468              	.LASF75:
 10469 044f 5F5F636C 		.ascii	"__cleanup\000"
 10469      65616E75 
 10469      7000
 10470              	.LASF123:
 10471 0459 5F5F6664 		.ascii	"__fdlib_version\000"
 10471      6C69625F 
 10471      76657273 
 10471      696F6E00 
 10472              	.LASF18:
 10473 0469 5F6D6273 		.ascii	"_mbstate_t\000"
 10473      74617465 
 10473      5F7400
 10474              	.LASF36:
 10475 0474 5F5F746D 		.ascii	"__tm_isdst\000"
 10475      5F697364 
 10475      737400
 10476              	.LASF192:
 10477 047f 696E7365 		.ascii	"insertArbiter\000"
 10477      72744172 
 10477      62697465 
 10477      7200
 10478              	.LASF148:
 10479 048d 6D617373 		.ascii	"mass\000"
 10479      00
 10480              	.LASF114:
 10481 0492 5F685F65 		.ascii	"_h_errno\000"
 10481      72726E6F 
 10481      00
 10482              	.LASF150:
 10483 049b 696E7649 		.ascii	"invI\000"
 10483      00
 10484              	.LASF162:
 10485 04a0 67726176 		.ascii	"gravity\000"
 10485      69747900 
 10486              	.LASF157:
 10487 04a8 675F626F 		.ascii	"g_bodies\000"
 10487      64696573 
 10487      00
 10488              	.LASF139:
 10489 04b1 66656174 		.ascii	"feature\000"
 10489      75726500 
 10490              	.LASF32:
 10491 04b9 5F5F746D 		.ascii	"__tm_mon\000"
 10491      5F6D6F6E 
 10491      00
 10492              	.LASF10:
 10493 04c2 6C6F6E67 		.ascii	"long double\000"
 10493      20646F75 
 10493      626C6500 
 10494              	.LASF193:
 10495 04ce 7363616C 		.ascii	"scaledVec2\000"
 10495      65645665 
 10495      633200
 10496              	.LASF54:
 10497 04d9 5F777269 		.ascii	"_write\000"
 10497      746500
ARM GAS  /tmp/ccPfsSwR.s 			page 205


 10498              	.LASF196:
 10499 04e0 436C616D 		.ascii	"Clamp\000"
 10499      7000
 10500              	.LASF187:
 10501 04e6 6D657267 		.ascii	"mergedContacts\000"
 10501      6564436F 
 10501      6E746163 
 10501      747300
 10502              	.LASF42:
 10503 04f5 5F617465 		.ascii	"_atexit\000"
 10503      78697400 
 10504              	.LASF63:
 10505 04fd 5F6D6273 		.ascii	"_mbstate\000"
 10505      74617465 
 10505      00
 10506              	.LASF3:
 10507 0506 73686F72 		.ascii	"short int\000"
 10507      7420696E 
 10507      7400
 10508              	.LASF168:
 10509 0510 696E6974 		.ascii	"initBody\000"
 10509      426F6479 
 10509      00
 10510              	.LASF5:
 10511 0519 6C6F6E67 		.ascii	"long int\000"
 10511      20696E74 
 10511      00
 10512              	.LASF86:
 10513 0522 5F5F7366 		.ascii	"__sf\000"
 10513      00
 10514              	.LASF24:
 10515 0527 5F736967 		.ascii	"_sign\000"
 10515      6E00
 10516              	.LASF195:
 10517 052d 61646474 		.ascii	"addtoVec2\000"
 10517      6F566563 
 10517      3200
 10518              	.LASF132:
 10519 0537 436F6E74 		.ascii	"Contact\000"
 10519      61637400 
 10520              	.LASF61:
 10521 053f 5F646174 		.ascii	"_data\000"
 10521      6100
 10522              	.LASF15:
 10523 0545 5F5F7763 		.ascii	"__wchb\000"
 10523      686200
 10524              	.LASF119:
 10525 054c 5F676C6F 		.ascii	"_global_impure_ptr\000"
 10525      62616C5F 
 10525      696D7075 
 10525      72655F70 
 10525      747200
 10526              	.LASF174:
 10527 055f 4170706C 		.ascii	"ApplyImpulse\000"
 10527      79496D70 
 10527      756C7365 
 10527      00
ARM GAS  /tmp/ccPfsSwR.s 			page 206


 10528              	.LASF33:
 10529 056c 5F5F746D 		.ascii	"__tm_year\000"
 10529      5F796561 
 10529      7200
 10530              	.LASF158:
 10531 0576 675F6E75 		.ascii	"g_numBodies\000"
 10531      6D426F64 
 10531      69657300 
 10532              	.LASF179:
 10533 0582 6B5F616C 		.ascii	"k_allowedPenetration\000"
 10533      6C6F7765 
 10533      6450656E 
 10533      65747261 
 10533      74696F6E 
 10534              	.LASF121:
 10535 0597 5F5F6664 		.ascii	"__fdlibm_ieee\000"
 10535      6C69626D 
 10535      5F696565 
 10535      6500
 10536              	.LASF200:
 10537 05a5 64696666 		.ascii	"diffVec2\000"
 10537      56656332 
 10537      00
 10538              	.LASF99:
 10539 05ae 5F6C6F63 		.ascii	"_localtime_buf\000"
 10539      616C7469 
 10539      6D655F62 
 10539      756600
 10540              	.LASF117:
 10541 05bd 5F756E75 		.ascii	"_unused\000"
 10541      73656400 
 10542              	.LASF82:
 10543 05c5 5F6E6577 		.ascii	"_new\000"
 10543      00
 10544              	.LASF80:
 10545 05ca 5F637674 		.ascii	"_cvtlen\000"
 10545      6C656E00 
 10546              	.LASF23:
 10547 05d2 5F6D6178 		.ascii	"_maxwds\000"
 10547      77647300 
 10548              	.LASF106:
 10549 05da 5F6C3634 		.ascii	"_l64a_buf\000"
 10549      615F6275 
 10549      6600
 10550              	.LASF184:
 10551 05e4 55706461 		.ascii	"UpdateArbiter\000"
 10551      74654172 
 10551      62697465 
 10551      7200
 10552              	.LASF59:
 10553 05f2 5F626C6B 		.ascii	"_blksize\000"
 10553      73697A65 
 10553      00
 10554              	.LASF27:
 10555 05fb 5F5F746D 		.ascii	"__tm\000"
 10555      00
 10556              	.LASF142:
ARM GAS  /tmp/ccPfsSwR.s 			page 207


 10557 0600 76656C6F 		.ascii	"velocity\000"
 10557      63697479 
 10557      00
 10558              	.LASF62:
 10559 0609 5F6C6F63 		.ascii	"_lock\000"
 10559      6B00
 10560              	.LASF199:
 10561 060f 43726F73 		.ascii	"Crosssv\000"
 10561      73737600 
 10562              	.LASF6:
 10563 0617 6C6F6E67 		.ascii	"long unsigned int\000"
 10563      20756E73 
 10563      69676E65 
 10563      6420696E 
 10563      7400
 10564              	.LASF125:
 10565 0629 56656332 		.ascii	"Vec2\000"
 10565      00
 10566              	.LASF177:
 10567 062e 6F6C6454 		.ascii	"oldTangentImpulse\000"
 10567      616E6765 
 10567      6E74496D 
 10567      70756C73 
 10567      6500
 10568              	.LASF90:
 10569 0640 5F6E696F 		.ascii	"_niobs\000"
 10569      627300
 10570              	.LASF11:
 10571 0647 77696E74 		.ascii	"wint_t\000"
 10571      5F7400
 10572              	.LASF127:
 10573 064e 696E4564 		.ascii	"inEdge1\000"
 10573      67653100 
 10574              	.LASF129:
 10575 0656 696E4564 		.ascii	"inEdge2\000"
 10575      67653200 
 10576              	.LASF39:
 10577 065e 5F64736F 		.ascii	"_dso_handle\000"
 10577      5F68616E 
 10577      646C6500 
 10578              	.LASF134:
 10579 066a 6E6F726D 		.ascii	"normal\000"
 10579      616C00
 10580              	.LASF136:
 10581 0671 6D617373 		.ascii	"massNormal\000"
 10581      4E6F726D 
 10581      616C00
 10582              	.LASF208:
 10583 067c 42726F61 		.ascii	"BroadPhase\000"
 10583      64506861 
 10583      736500
 10584              	.LASF81:
 10585 0687 5F637674 		.ascii	"_cvtbuf\000"
 10585      62756600 
 10586              	.LASF2:
 10587 068f 756E7369 		.ascii	"unsigned char\000"
 10587      676E6564 
ARM GAS  /tmp/ccPfsSwR.s 			page 208


 10587      20636861 
 10587      7200
 10588              	.LASF108:
 10589 069d 5F676574 		.ascii	"_getdate_err\000"
 10589      64617465 
 10589      5F657272 
 10589      00
 10590              	.LASF156:
 10591 06aa 41726269 		.ascii	"ArbiterKey\000"
 10591      7465724B 
 10591      657900
 10592              	.LASF95:
 10593 06b5 5F616464 		.ascii	"_add\000"
 10593      00
 10594              	.LASF143:
 10595 06ba 616E6775 		.ascii	"angularVelocity\000"
 10595      6C617256 
 10595      656C6F63 
 10595      69747900 
 10596              	.LASF45:
 10597 06ca 5F5F7362 		.ascii	"__sbuf\000"
 10597      756600
 10598              	.LASF163:
 10599 06d1 69746572 		.ascii	"iterations\000"
 10599      6174696F 
 10599      6E7300
 10600              	.LASF89:
 10601 06dc 5F676C75 		.ascii	"_glue\000"
 10601      6500
 10602              	.LASF205:
 10603 06e2 5F5F6664 		.ascii	"__fdlibm_version\000"
 10603      6C69626D 
 10603      5F766572 
 10603      73696F6E 
 10603      00
 10604              	.LASF176:
 10605 06f3 6D617850 		.ascii	"maxPt\000"
 10605      7400
 10606              	.LASF203:
 10607 06f9 73717274 		.ascii	"sqrtf\000"
 10607      6600
 10608              	.LASF85:
 10609 06ff 5F5F7367 		.ascii	"__sglue\000"
 10609      6C756500 
 10610              	.LASF151:
 10611 0707 41726269 		.ascii	"Arbiter\000"
 10611      74657200 
 10612              	.LASF97:
 10613 070f 5F737472 		.ascii	"_strtok_last\000"
 10613      746F6B5F 
 10613      6C617374 
 10613      00
 10614              	.LASF104:
 10615 071c 5F6D6274 		.ascii	"_mbtowc_state\000"
 10615      6F77635F 
 10615      73746174 
 10615      6500
ARM GAS  /tmp/ccPfsSwR.s 			page 209


 10616              	.LASF140:
 10617 072a 426F6479 		.ascii	"Body\000"
 10617      00
 10618              	.LASF197:
 10619 072f 73756266 		.ascii	"subfromVec2\000"
 10619      726F6D56 
 10619      65633200 
 10620              	.LASF73:
 10621 073b 5F6C6F63 		.ascii	"_locale\000"
 10621      616C6500 
 10622              	.LASF38:
 10623 0743 5F666E61 		.ascii	"_fnargs\000"
 10623      72677300 
 10624              	.LASF1:
 10625 074b 7369676E 		.ascii	"signed char\000"
 10625      65642063 
 10625      68617200 
 10626              	.LASF65:
 10627 0757 5F726565 		.ascii	"_reent\000"
 10627      6E7400
 10628              	.LASF171:
 10629 075e 474E5520 		.ascii	"GNU C17 9.2.1 20191025 (release) [ARM/arm-9-branch "
 10629      43313720 
 10629      392E322E 
 10629      31203230 
 10629      31393130 
 10630 0791 72657669 		.ascii	"revision 277599] -mthumb -mcpu=cortex-m7 -mfloat-ab"
 10630      73696F6E 
 10630      20323737 
 10630      3539395D 
 10630      202D6D74 
 10631 07c4 693D6861 		.ascii	"i=hard -mfpu=fpv5-sp-d16 -march=armv7e-m+fpv5 -g -g"
 10631      7264202D 
 10631      6D667075 
 10631      3D667076 
 10631      352D7370 
 10632 07f7 64776172 		.ascii	"dwarf-2 -O2 -falign-functions=16 -fomit-frame-point"
 10632      662D3220 
 10632      2D4F3220 
 10632      2D66616C 
 10632      69676E2D 
 10633 082a 6572202D 		.ascii	"er -ffunction-sections -fdata-sections\000"
 10633      6666756E 
 10633      6374696F 
 10633      6E2D7365 
 10633      6374696F 
 10634              	.LASF4:
 10635 0851 73686F72 		.ascii	"short unsigned int\000"
 10635      7420756E 
 10635      7369676E 
 10635      65642069 
 10635      6E7400
 10636              	.LASF210:
 10637 0864 6D656D63 		.ascii	"memcpy\000"
 10637      707900
 10638              	.LASF40:
 10639 086b 5F666E74 		.ascii	"_fntypes\000"
ARM GAS  /tmp/ccPfsSwR.s 			page 210


 10639      79706573 
 10639      00
 10640              	.LASF47:
 10641 0874 5F73697A 		.ascii	"_size\000"
 10641      6500
 10642              	.LASF120:
 10643 087a 646F7562 		.ascii	"double\000"
 10643      6C6500
 10644              	.LASF12:
 10645 0881 5F6F6666 		.ascii	"_off_t\000"
 10645      5F7400
 10646              	.LASF58:
 10647 0888 5F6E6275 		.ascii	"_nbuf\000"
 10647      6600
 10648              	.LASF96:
 10649 088e 5F756E75 		.ascii	"_unused_rand\000"
 10649      7365645F 
 10649      72616E64 
 10649      00
 10650              	.LASF72:
 10651 089b 5F756E73 		.ascii	"_unspecified_locale_info\000"
 10651      70656369 
 10651      66696564 
 10651      5F6C6F63 
 10651      616C655F 
 10652              	.LASF64:
 10653 08b4 5F666C61 		.ascii	"_flags2\000"
 10653      67733200 
 10654              	.LASF41:
 10655 08bc 5F69735F 		.ascii	"_is_cxa\000"
 10655      63786100 
 10656              	.LASF93:
 10657 08c4 5F736565 		.ascii	"_seed\000"
 10657      6400
 10658              	.LASF101:
 10659 08ca 5F72616E 		.ascii	"_rand_next\000"
 10659      645F6E65 
 10659      787400
 10660              	.LASF204:
 10661 08d5 5F5F6C6F 		.ascii	"__locale_t\000"
 10661      63616C65 
 10661      5F7400
 10662              	.LASF55:
 10663 08e0 5F736565 		.ascii	"_seek\000"
 10663      6B00
 10664              	.LASF133:
 10665 08e6 706F7369 		.ascii	"position\000"
 10665      74696F6E 
 10665      00
 10666              	.LASF69:
 10667 08ef 5F737464 		.ascii	"_stderr\000"
 10667      65727200 
 10668              	.LASF116:
 10669 08f7 5F6E6D61 		.ascii	"_nmalloc\000"
 10669      6C6C6F63 
 10669      00
 10670              	.LASF57:
ARM GAS  /tmp/ccPfsSwR.s 			page 211


 10671 0900 5F756275 		.ascii	"_ubuf\000"
 10671      6600
 10672              	.LASF137:
 10673 0906 6D617373 		.ascii	"massTangent\000"
 10673      54616E67 
 10673      656E7400 
 10674              		.ident	"GCC: (15:9-2019-q4-0ubuntu1) 9.2.1 20191025 (release) [ARM/arm-9-branch revision 277599]"
ARM GAS  /tmp/ccPfsSwR.s 			page 212


DEFINED SYMBOLS
                            *ABS*:0000000000000000 b2d_lite.c
     /tmp/ccPfsSwR.s:77     .text.findArbiter:0000000000000000 $t
     /tmp/ccPfsSwR.s:86     .text.findArbiter:0000000000000000 findArbiter
     /tmp/ccPfsSwR.s:226    .text.findArbiter:000000000000004c $d
                            *COM*:0000000000000004 g_numArbiters
                            *COM*:0000000000000320 g_arbiterKeys
                            *COM*:0000000000003840 g_arbiters
     /tmp/ccPfsSwR.s:233    .text.insertArbiter:0000000000000000 $t
     /tmp/ccPfsSwR.s:241    .text.insertArbiter:0000000000000000 insertArbiter
     /tmp/ccPfsSwR.s:340    .text.insertArbiter:0000000000000048 $d
     /tmp/ccPfsSwR.s:347    .text.eraseArbiter:0000000000000000 $t
     /tmp/ccPfsSwR.s:355    .text.eraseArbiter:0000000000000000 eraseArbiter
     /tmp/ccPfsSwR.s:542    .text.eraseArbiter:0000000000000094 $d
     /tmp/ccPfsSwR.s:550    .text.initContact:0000000000000000 $t
     /tmp/ccPfsSwR.s:558    .text.initContact:0000000000000000 initContact
     /tmp/ccPfsSwR.s:586    .text.UpdateArbiter:0000000000000000 $t
     /tmp/ccPfsSwR.s:594    .text.UpdateArbiter:0000000000000000 UpdateArbiter
     /tmp/ccPfsSwR.s:905    .text.UpdateArbiter:00000000000000ec $d
     /tmp/ccPfsSwR.s:913    .text.BroadPhase:0000000000000000 $t
     /tmp/ccPfsSwR.s:921    .text.BroadPhase:0000000000000000 BroadPhase
     /tmp/ccPfsSwR.s:1433   .text.BroadPhase:0000000000000168 $d
                            *COM*:0000000000000004 g_numBodies
                            *COM*:0000000000000190 g_bodies
     /tmp/ccPfsSwR.s:1448   .text.PreStep:0000000000000000 $t
     /tmp/ccPfsSwR.s:1456   .text.PreStep:0000000000000000 PreStep
     /tmp/ccPfsSwR.s:2054   .text.PreStep:0000000000000314 $d
     /tmp/ccPfsSwR.s:2063   .text.ApplyImpulse:0000000000000000 $t
     /tmp/ccPfsSwR.s:2071   .text.ApplyImpulse:0000000000000000 ApplyImpulse
     /tmp/ccPfsSwR.s:2685   .text.ApplyImpulse:000000000000039c $d
     /tmp/ccPfsSwR.s:2691   .text.Step:0000000000000000 $t
     /tmp/ccPfsSwR.s:2699   .text.Step:0000000000000000 Step
     /tmp/ccPfsSwR.s:3063   .text.Step:0000000000000170 $d
                            *COM*:0000000000000008 gravity
                            *COM*:0000000000000004 iterations
     /tmp/ccPfsSwR.s:3074   .text.initBody:0000000000000000 $t
     /tmp/ccPfsSwR.s:3082   .text.initBody:0000000000000000 initBody
     /tmp/ccPfsSwR.s:3267   .text.initBody:0000000000000094 $d
     /tmp/ccPfsSwR.s:3273   .text.addBody:0000000000000000 $t
     /tmp/ccPfsSwR.s:3281   .text.addBody:0000000000000000 addBody
     /tmp/ccPfsSwR.s:3323   .text.addBody:0000000000000018 $d
     /tmp/ccPfsSwR.s:3329   .text.getBody:0000000000000000 $t
     /tmp/ccPfsSwR.s:3337   .text.getBody:0000000000000000 getBody
     /tmp/ccPfsSwR.s:3358   .text.getBody:0000000000000008 $d
     /tmp/ccPfsSwR.s:3384   .data.positionCorrection:0000000000000000 positionCorrection
     /tmp/ccPfsSwR.s:3391   .data.warmStarting:0000000000000000 warmStarting
     /tmp/ccPfsSwR.s:3377   .data.accumulateImpulses:0000000000000000 accumulateImpulses
     /tmp/ccPfsSwR.s:3373   .data.accumulateImpulses:0000000000000000 $d
     /tmp/ccPfsSwR.s:3380   .data.positionCorrection:0000000000000000 $d
     /tmp/ccPfsSwR.s:3387   .data.warmStarting:0000000000000000 $d

UNDEFINED SYMBOLS
memcpy
Collide
sqrtf
diffVec2
Dot
ARM GAS  /tmp/ccPfsSwR.s 			page 213


Crossvs
Min
scaledVec2
sumVec2
subfromVec2
Crossvv
addtoVec2
Max
Crosssv
Clamp
